{"version":3,"file":"react-babylonjs.js","sources":["../src/hooks/scene.ts","../src/hooks/render.ts","../src/customComponents/Html.tsx","../src/PropsHandler.ts","../src/extensions/DynamicTerrain.ts","../src/generatedCode.ts","../src/hooks/loaders/loadedModel.ts","../src/UpdateInstance.ts","../src/hooks/loaders/useSceneLoader.tsx","../src/customComponents/Model.tsx","../src/customComponents/Skybox.tsx","../src/hooks/engine.tsx","../src/hooks/loaders/useAssetManager.tsx","../src/Engine.tsx","../src/hooks/camera.ts","../src/hooks/utilityHooks.ts","../src/HostRegistrationStore.ts","../src/plugins.ts","../src/codeGenerationDescriptors.ts","../src/customHosts/BaseLifecycleListener.ts","../src/customHosts/AbstractMeshLifecycleListener.ts","../src/customHosts/AdvancedDynamicTextureLifecycleListener.ts","../src/customHosts/BehaviorsLifecycleListener.ts","../src/customHosts/CameraLifecycleListener.ts","../src/customHosts/DeferredCreationLifecycleListener.ts","../src/customHosts/BaseShadowGeneratorLifecycleListener.ts","../src/customHosts/CascadedShadowGeneratorLifecycleListener.ts","../src/customHosts/EngineViewLifecycleListener.ts","../src/customHosts/EnvironmentHelperLifecycleListener.ts","../src/customHosts/FallbackLifecycleListener.ts","../src/customHosts/GizmoLifecycleListener.ts","../src/customHosts/GizmoManagerLifecycleListener.ts","../src/customHosts/grid/index.ts","../src/customHosts/GUI2DControlLifecycleListener.ts","../src/customHosts/GUI3DControlLifecycleListener.ts","../src/customHosts/GUI3DManagerLifecycleListener.ts","../src/helper/property.ts","../src/customHosts/MaterialsLifecycleListener.ts","../src/customHosts/NodeLifecycleListener.ts","../src/customHosts/PhysicsImpostorLifecycleListener.ts","../src/customHosts/PhysicsAggregateLifecycleListener.ts","../src/customHosts/ShadowGeneratorLifecycleListener.ts","../src/customHosts/TargetPropsHandler.ts","../src/customHosts/TexturesLifecycleListener.ts","../src/customHosts/ViewportLifecycleListener.ts","../src/customHosts/VRExperienceHelperLifecycleListener.ts","../src/customHosts/grid/columnDefinition.ts","../src/customHosts/grid/rowDefinition.ts","../src/ReactBabylonJSHostConfig.ts","../src/render.ts","../src/Scene.tsx"],"sourcesContent":["import { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { Context, createContext, useContext } from 'react'\n\nexport type SceneContextType = {\n  scene: Nullable<Scene>\n  sceneReady: boolean\n}\n\nexport const SceneContext: Context<SceneContextType> = createContext<SceneContextType>({\n  scene: null,\n  sceneReady: false,\n})\n\n/**\n * Get the scene from the context.\n */\nexport const useScene = (): Nullable<Scene> => useContext(SceneContext).scene\n","import { EventState, Observer } from '@babylonjs/core/Misc/observable.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { useContext, useEffect } from 'react'\nimport { SceneContext } from './scene'\n\nexport type OnFrameRenderFn = (eventData: Scene, eventState: EventState) => void\n\n/**\n * Register a callback for before the scene renders.\n *\n * @param callback called using onBeforeRender functionality of scene\n * @param mask the mask used to filter observers\n * @param insertFirst if true will be inserted at first position, if false (default) will be last position.\n * @param callOnce only call the callback once\n */\nexport const useBeforeRender = (\n  callback: OnFrameRenderFn,\n  mask?: number,\n  insertFirst?: boolean,\n  callOnce?: boolean,\n  deps: React.DependencyList = []\n): void => {\n  const { scene } = useContext(SceneContext)\n\n  useEffect(() => {\n    if (scene === null) {\n      return\n    }\n    const unregisterOnFirstCall: boolean = callOnce === true\n    const sceneObserver: Nullable<Observer<Scene>> = scene.onBeforeRenderObservable.add(\n      callback,\n      mask,\n      insertFirst,\n      undefined,\n      unregisterOnFirstCall\n    )\n\n    if (unregisterOnFirstCall !== true) {\n      return () => {\n        scene.onBeforeRenderObservable.remove(sceneObserver)\n      }\n    }\n  }, [scene, ...deps])\n}\n\n/**\n * Register a callback for after the scene renders.\n *\n * @param callback called using onBeforeRender functionality of scene\n * @param mask the mask used to filter observers\n * @param insertFirst if true will be inserted at first position, if false (default) will be last position.\n * @param callOnce only call the callback once\n */\nexport const useAfterRender = (\n  callback: OnFrameRenderFn,\n  mask?: number,\n  insertFirst?: boolean,\n  callOnce?: boolean,\n  deps: React.DependencyList = []\n): void => {\n  const { scene } = useContext(SceneContext)\n\n  useEffect(() => {\n    if (scene === null) {\n      return\n    }\n\n    const unregisterOnFirstCall: boolean = callOnce === true\n    const sceneObserver: Nullable<Observer<Scene>> = scene.onAfterRenderObservable.add(\n      callback,\n      mask,\n      insertFirst,\n      undefined,\n      unregisterOnFirstCall\n    )\n\n    if (unregisterOnFirstCall !== true) {\n      return () => {\n        scene.onAfterRenderObservable.remove(sceneObserver)\n      }\n    }\n  }, [scene, ...deps])\n}\n","import { Camera } from '@babylonjs/core/Cameras/camera.js'\nimport { Ray } from '@babylonjs/core/Culling/ray.js'\nimport { Frustum } from '@babylonjs/core/Maths/math.frustum.js'\nimport { Matrix, Vector3 } from '@babylonjs/core/Maths/math.vector.js'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport React, {\n  CSSProperties,\n  forwardRef,\n  HTMLAttributes,\n  MutableRefObject,\n  ReactNode,\n  Ref,\n  RefObject,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n// import {  unmountComponentAtNode } from 'react-dom'\nimport { createRoot } from 'react-dom/client'\nimport { FiberAbstractMeshProps, FiberAbstractMeshPropsCtor } from '../generatedProps'\nimport { useAfterRender } from '../hooks/render'\nimport { useScene } from '../hooks/scene'\n\nfunction defaultCalculatePosition(el: AbstractMesh, camera: Camera) {\n  const objectPos = el.getAbsolutePosition()\n  const engine = camera.getEngine()\n  const viewport = camera.viewport.toGlobal(engine.getRenderWidth(), engine.getRenderHeight())\n  const screenPos = Vector3.Project(\n    objectPos,\n    Matrix.Identity(),\n    camera.getTransformationMatrix(),\n    viewport\n  )\n\n  return [\n    screenPos.x * engine.getHardwareScalingLevel(),\n    screenPos.y * engine.getHardwareScalingLevel(),\n  ]\n}\n\nexport type CalculatePosition = typeof defaultCalculatePosition\n\nfunction isObjectBehindCamera(el: AbstractMesh, camera: Camera) {\n  const planes = Frustum.GetPlanes(camera.getTransformationMatrix())\n  const center = el.absolutePosition\n  const outsideFrustum = planes.findIndex((x) => x.dotCoordinate(center) < 0) === -1 ? false : true // taken from : https://forum.babylonjs.com/t/check-if-vector3-is-in-frustum/8652/3\n\n  return outsideFrustum\n}\n\nfunction isObjectVisible(el: AbstractMesh, camera: Camera, occlude: AbstractMesh[]) {\n  const objectPos = el.getAbsolutePosition()\n  const cameraPos = camera.globalPosition\n  const ray = new Ray(cameraPos, objectPos.subtract(cameraPos), undefined)\n\n  const hit = camera\n    .getScene()\n    .pickWithRay(\n      ray,\n      (m) =>\n        (occlude.length > 0 ? occlude.indexOf(m) !== -1 : m !== el.parent) && m.name !== 'skybox'\n    )\n\n  // console.log(hit);\n  return hit\n    ? hit.pickedMesh?.name === el.parent?.name ||\n        hit.distance * hit.distance >= Vector3.DistanceSquared(objectPos, cameraPos)\n    : false\n}\n\nfunction objectScale(el: AbstractMesh, camera: Camera) {\n  if (camera.mode === Camera.ORTHOGRAPHIC_CAMERA) {\n    return 1 //camera.zoom\n  } else if (camera.mode === Camera.PERSPECTIVE_CAMERA) {\n    const objectPos = el.getAbsolutePosition()\n    const cameraPos = camera.globalPosition\n    const vFOV = (camera.fov * Math.PI) / 180\n    const dist = Vector3.Distance(objectPos, cameraPos)\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist\n    return 1 / scaleFOV\n  } else {\n    return 1\n  }\n}\n\nfunction objectZIndex(el: AbstractMesh, camera: Camera, zIndexRange: Array<number>) {\n  if (camera.mode === Camera.PERSPECTIVE_CAMERA || camera.mode === Camera.ORTHOGRAPHIC_CAMERA) {\n    const objectPos = el.getAbsolutePosition()\n    const cameraPos = camera.globalPosition\n    const dist = Vector3.Distance(objectPos, cameraPos)\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.maxZ - camera.minZ)\n    const B = zIndexRange[1] - A * camera.maxZ\n    return Math.round(A * dist + B)\n  }\n  return undefined\n}\n\nconst epsilon = (value: number) => (Math.abs(value) < 1e-10 ? 0 : value)\n\nfunction getCSSMatrix(matrix: Matrix, multipliers: number[], prepend = '') {\n  let matrix3d = 'matrix3d('\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.m[i]) + (i !== 15 ? ',' : ')')\n  }\n  return prepend + matrix3d\n}\n\nconst getCameraCSSMatrix = ((multipliers: number[]) => {\n  return (matrix: Matrix) => getCSSMatrix(matrix, multipliers)\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1])\n\nconst getObjectCSSMatrix = ((scaleMultipliers: (n: number) => number[]) => {\n  return (matrix: Matrix, factor: number) =>\n    getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)')\n})((f: number) => [\n  1 / f,\n  1 / f,\n  1 / f,\n  1,\n  -1 / f,\n  -1 / f,\n  -1 / f,\n  -1,\n  1 / f,\n  1 / f,\n  1 / f,\n  1,\n  1,\n  1,\n  1,\n  1,\n])\ntype PointerEventsProperties =\n  | 'auto'\n  | 'none'\n  | 'visiblePainted'\n  | 'visibleFill'\n  | 'visibleStroke'\n  | 'visible'\n  | 'painted'\n  | 'fill'\n  | 'stroke'\n  | 'all'\n  | 'inherit'\n\ntype HtmlPropsExtension = HTMLAttributes<HTMLDivElement> &\n  FiberAbstractMeshProps &\n  FiberAbstractMeshPropsCtor\nexport interface HtmlProps extends Omit<HtmlPropsExtension, 'ref'> {\n  babylonChildren?: ReactNode\n  prepend?: boolean\n  center?: boolean\n  fullscreen?: boolean\n  eps?: number\n  portal?: MutableRefObject<HTMLElement>\n  distanceFactor?: number\n  sprite?: boolean\n  transform?: boolean\n  zIndexRange?: Array<number>\n  occlude?: RefObject<AbstractMesh>[] | boolean\n  onOcclude?: (visible: boolean) => void\n  calculatePosition?: CalculatePosition\n  as?: string\n  pointerEvents?: PointerEventsProperties\n}\n\nconst Html = forwardRef(\n  (\n    {\n      children,\n      babylonChildren,\n      eps = 0.001,\n      style,\n      className,\n      prepend,\n      center,\n      fullscreen,\n      portal,\n      distanceFactor,\n      sprite = false,\n      transform = false,\n      occlude,\n      onOcclude,\n      zIndexRange = [16777271, 0],\n      calculatePosition = defaultCalculatePosition,\n      as = 'div',\n      pointerEvents,\n      ...props\n    }: HtmlProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    const scene = useScene()\n    const canvas = scene?.getEngine().getRenderingCanvas()\n    const clientRect = scene?.getEngine().getRenderingCanvasClientRect()\n    const size = { width: clientRect?.width ?? 1, height: clientRect?.height ?? 1 }\n\n    const [el] = useState(() => document.createElement(as))\n    const group = useRef<AbstractMesh>(null)\n    const oldZoom = useRef(0)\n    const oldPosition = useRef([0, 0])\n    const transformOuterRef = useRef<HTMLDivElement>(null!)\n    const transformInnerRef = useRef<HTMLDivElement>(null!)\n    const target = portal?.current ?? canvas?.parentNode\n\n    useEffect(() => {\n      if (scene && group.current) {\n        const node = group.current as AbstractMesh\n        const camera = scene?.activeCamera\n        if (camera && clientRect) {\n          //scene.updateMatrixWorld()\n          if (transform) {\n            el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`\n          } else {\n            const vec = calculatePosition(node, camera)\n            el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`\n          }\n\n          if (target) {\n            if (prepend) target.prepend(el)\n            else target.appendChild(el)\n          }\n        }\n        return () => {\n          if (target) target.removeChild(el)\n          // unmountComponentAtNode(el) // react17\n        }\n      }\n    }, [target, transform, scene, group])\n\n    const styles: CSSProperties = useMemo(() => {\n      if (transform) {\n        return {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: size.width,\n          height: size.height,\n          transformStyle: 'preserve-3d',\n          pointerEvents: 'none',\n        }\n      } else {\n        return {\n          position: 'absolute',\n          transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n          ...(fullscreen && {\n            top: -size.height / 2,\n            left: -size.width / 2,\n            width: size.width,\n            height: size.height,\n          }),\n          ...style,\n        }\n      }\n    }, [style, center, fullscreen, size, transform])\n\n    const transformInnerStyles: CSSProperties = useMemo(\n      () => ({ position: 'absolute', pointerEvents: pointerEvents }),\n      [pointerEvents]\n    )\n\n    useLayoutEffect(() => {\n      const root = createRoot(el)\n      if (transform) {\n        root.render(\n          <div id=\"html_babylon\" ref={transformOuterRef} style={styles}>\n            <div ref={transformInnerRef} style={transformInnerStyles}>\n              <div ref={ref} className={className} style={style} children={children} />\n            </div>\n          </div>\n        )\n      } else {\n        root.render(\n          <div\n            id=\"html_babylon\"\n            ref={ref}\n            style={styles}\n            className={className}\n            children={children}\n          />\n        )\n      }\n      return () => {\n        root.unmount()\n      }\n    })\n\n    const visible = useRef(true)\n\n    useAfterRender(() => {\n      const camera = scene?.activeCamera\n\n      if (camera && group.current) {\n        const node = group.current as AbstractMesh\n        node.computeWorldMatrix(true)\n        const vec = transform ? oldPosition.current : calculatePosition(node, camera)\n\n        el.style.display = visible.current && node.isEnabled(true) ? 'block' : 'none'\n\n        if (\n          isNaN(vec[0]) === false &&\n          (transform ||\n            Math.abs(oldZoom.current - camera.fov) > eps ||\n            Math.abs(oldPosition.current[0] - vec[0]) > eps ||\n            Math.abs(oldPosition.current[1] - vec[1]) > eps)\n        ) {\n          const isBehindCamera = isObjectBehindCamera(node, camera)\n\n          let raytraceTarget: null | undefined | boolean | AbstractMesh[] = false\n          if (typeof occlude === 'boolean') {\n            if (occlude === true) {\n              raytraceTarget = scene?.meshes\n            }\n          } else if (Array.isArray(occlude)) {\n            raytraceTarget = occlude.map((item) => item.current) as AbstractMesh[]\n          }\n\n          const previouslyVisible = visible.current\n          if (raytraceTarget) {\n            const isvisible = isObjectVisible(node, camera, raytraceTarget)\n            visible.current = isvisible && !isBehindCamera\n          } else {\n            visible.current = !isBehindCamera\n          }\n\n          if (previouslyVisible !== visible.current) {\n            if (onOcclude) onOcclude(!visible.current)\n            else {\n              el.style.display = visible.current && node.isEnabled(true) ? 'block' : 'none'\n              group.current.isVisible = visible.current\n            }\n          }\n\n          el.style.zIndex = `${objectZIndex(node, camera, zIndexRange)}`\n          if (transform) {\n            const [widthHalf, heightHalf] = [size.width / 2, size.height / 2]\n            const fov = camera.getProjectionMatrix().m[5] * heightHalf\n            const { mode, orthoTop, orthoLeft, orthoBottom, orthoRight } = camera\n            const cameraInvertMatrix = camera.getWorldMatrix().invert()\n            const cameraMatrix = getCameraCSSMatrix(cameraInvertMatrix)\n            const cameraTransform =\n              mode === Camera.ORTHOGRAPHIC_CAMERA\n                ? `scale(${fov})translate(${epsilon(-(orthoRight! + orthoLeft!) / 2)}px,${epsilon(\n                    (orthoTop! + orthoBottom!) / 2\n                  )}px)`\n                : `translateZ(${fov}px)`\n            let matrix = node.getWorldMatrix()\n            if (sprite) {\n              matrix = camera.getViewMatrix().getRotationMatrix().invert().clone()\n\n              //   matrix = cameraInvertMatrix.clone().transpose().copy.copyPosition(matrix).scale(node.scale)\n              //   matrix.m[3] = matrix.m[7] = matrix.m[11] = 0\n              //   matrix.m[15] = 1\n            }\n            el.style.width = size.width + 'px'\n            el.style.height = size.height + 'px'\n            el.style.perspective = mode === Camera.ORTHOGRAPHIC_CAMERA ? '' : `${fov}px`\n            if (transformOuterRef.current && transformInnerRef.current) {\n              transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`\n              transformInnerRef.current.style.transform = getObjectCSSMatrix(\n                matrix,\n                1 / ((distanceFactor || 10) / 400)\n              )\n            }\n          } else {\n            const scale =\n              distanceFactor === undefined ? 1 : objectScale(node, camera) * distanceFactor\n            el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`\n          }\n          oldPosition.current = vec\n          oldZoom.current = camera.fov\n        }\n      }\n    })\n\n    return (\n      <abstractMesh {...props} ref={group}>\n        {babylonChildren}\n      </abstractMesh>\n    )\n  }\n)\n\nexport default Html\n","import { Light } from '@babylonjs/core/Lights/light.js'\nimport { FresnelParameters } from '@babylonjs/core/Materials/fresnelParameters.js'\nimport { BaseTexture } from '@babylonjs/core/Materials/Textures/baseTexture.js'\nimport { Color3, Color4 } from '@babylonjs/core/Maths/math.color.js'\nimport { Quaternion, Vector3 } from '@babylonjs/core/Maths/math.vector.js'\nimport { Observable } from '@babylonjs/core/Misc/observable.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { Control } from '@babylonjs/gui/2D/controls/control.js'\n\nexport interface PropertyUpdate {\n  value: any\n  propertyName: string\n  changeType: PropChangeType\n  isSetAccessor: boolean\n  /**\n   * When provided will dynamically target a property of 'babylonJSobject'.\n   */\n  target?: string\n}\n\nexport type UpdatePayload = PropertyUpdate[] | null\n\nexport interface PropsHandler<U> {\n  getPropertyUpdates(oldProps: U, newProps: U): UpdatePayload\n}\n\nexport interface HasPropsHandlers<U> {\n  getPropsHandlers(): PropsHandler<U>[]\n  addPropsHandler(propHandler: PropsHandler<U>): void\n}\n\n// internal\ntype HandlerUpdateProcessResult<T> = {\n  accepted: boolean\n} & PropertyUpdateProcessResult<T>\n\nexport type PropertyUpdateProcessResult<T> = {\n  processed: boolean\n  value: Nullable<T>\n}\n\n/**\n * NOTE: the applyAnimatedValues from react-spring always has `oldProp` undefined, so we force set anything provided.\n * Would be more efficient to only handle the props passed in.\n */\nexport interface ICustomPropsHandler<T, U> {\n  /**\n   * Friendly name to identify the handler.\n   */\n  readonly name: string\n\n  /**\n   * The type of prop (ie: Vector3, Color3) to register for\n   */\n  readonly propChangeType: string\n\n  /**\n   * Can be used to influence the ordering the handler fires compared to other custom handlers.\n   * @todo not implemented (future enhancement)\n   */\n  readonly order?: number\n\n  /**\n   * Like a visitor, except if 'true' is returned the call chain is broken.\n   * So, if you want to override a 'Vector3' with a string and the type is string\n   * then the regular handler will be bypassed.\n   * @param propChangeType\n   */\n  accept(newProp: T): boolean\n\n  // Check old vs new and return proper value, if any.\n  process(oldProp: T | undefined, newProp: T): PropertyUpdateProcessResult<U>\n}\n\nexport class CustomPropsHandler {\n  private static _registeredPropsHandlers: Record<string, ICustomPropsHandler<any, any>[]> = {}\n\n  /**\n   * Register a new props handler\n   *\n   * @param handler to register for props (a handler can only be registered once per )\n   * @returns a reference that can be used to unregister.\n   */\n  public static RegisterPropsHandler(\n    propsHandler: ICustomPropsHandler<any, any>\n  ): ICustomPropsHandler<any, any> {\n    const propsChangeType: string = propsHandler.propChangeType\n\n    if (!Array.isArray(CustomPropsHandler._registeredPropsHandlers[propsChangeType])) {\n      CustomPropsHandler._registeredPropsHandlers[propsChangeType] = []\n    }\n\n    const registeredHandlers: ICustomPropsHandler<any, any>[] =\n      CustomPropsHandler._registeredPropsHandlers[propsChangeType]\n\n    const match = registeredHandlers.find((h) => h === propsHandler || h.name === propsHandler.name)\n    if (match !== undefined) {\n      // console.warn(`Handler can only be registered once per type [${propsChangeType}] name[${propsHandler.name}]`);\n      return match\n    }\n\n    registeredHandlers.push(propsHandler)\n    return propsHandler\n  }\n\n  /**\n   * Unregister a props handler that was previously registered.\n   *\n   * @param propsHandler\n   *\n   * @returns if the props handler was found and unregistered\n   */\n  public static UnregisterPropsHandler(\n    propsHandlerToUnregister: ICustomPropsHandler<any, any>\n  ): boolean {\n    const propsChangeType: string = propsHandlerToUnregister.propChangeType\n\n    if (!Array.isArray(CustomPropsHandler._registeredPropsHandlers[propsChangeType])) {\n      console.warn(`cannot find ${propsHandlerToUnregister.name} to unregister.`)\n      return false\n    }\n\n    const registeredHandlers: ICustomPropsHandler<any, any>[] =\n      CustomPropsHandler._registeredPropsHandlers[propsChangeType]\n\n    const index: number = registeredHandlers.indexOf(propsHandlerToUnregister)\n\n    if (index === -1) {\n      console.warn(`cannot find ${propsHandlerToUnregister.name} to unregister.`)\n      return false\n    }\n\n    CustomPropsHandler._registeredPropsHandlers[propsChangeType] = registeredHandlers.slice(\n      index,\n      1\n    )\n    return true\n  }\n\n  private static NOT_ACCEPTED: Readonly<HandlerUpdateProcessResult<any>> = Object.freeze({\n    accepted: false,\n    processed: false,\n    value: null,\n  })\n\n  private static ACCEPTED_NOT_PROCESSED: Readonly<HandlerUpdateProcessResult<any>> = Object.freeze({\n    accepted: true,\n    processed: false,\n    value: null,\n  })\n\n  public static HandlePropsChange(\n    propsChangeType: PropChangeType,\n    oldProp: any,\n    newProp: any\n  ): Readonly<HandlerUpdateProcessResult<any>> {\n    const registeredHandlers: ICustomPropsHandler<any, any>[] =\n      CustomPropsHandler._registeredPropsHandlers[propsChangeType]\n    if (registeredHandlers === undefined) {\n      return CustomPropsHandler.NOT_ACCEPTED\n    }\n\n    let accepted = false\n    for (const handler of registeredHandlers) {\n      if (handler.accept(newProp)) {\n        accepted = true\n        const propertyUpdatedProcessResult: PropertyUpdateProcessResult<any> = handler.process(\n          oldProp,\n          newProp\n        )\n        // console.log(`handler '${handler.name}'custom prop processing result:`, oldProp, newProp, propertyUpdatedProcessResult);\n        // give other custom handlers (if any) the opportunity to handle\n        if (propertyUpdatedProcessResult.processed) {\n          return {\n            accepted: true,\n            processed: true,\n            value: propertyUpdatedProcessResult.value,\n          }\n        }\n      }\n    }\n\n    return accepted ? CustomPropsHandler.ACCEPTED_NOT_PROCESSED : CustomPropsHandler.NOT_ACCEPTED\n  }\n}\n\nexport enum PropChangeType {\n  Color3 = 'Color3',\n  Color4 = 'Color4',\n  Control = 'Control',\n  FresnelParameters = 'FresnelParameters',\n  LambdaExpression = 'LambdaExpression',\n  Method = 'Method',\n  NumericArray = 'NumericArray',\n  Observable = 'Observable',\n  Primitive = 'Primitive',\n  Quaternion = 'Quaternion',\n  Texture = 'Texture',\n  Vector3 = 'Vector3',\n}\n\n/**\n * Encapsulates common error handling and handling of registered custom prop handlers.\n */\nfunction propertyCheck<T>(\n  oldProp: T | undefined,\n  newProp: T | undefined,\n  propertyName: string,\n  propChangeType: PropChangeType,\n  changedProps: PropertyUpdate[],\n  isSetAccessor: boolean,\n  templateMethod: (\n    oldProp: T | undefined,\n    newProp: T | undefined,\n    changedProps: PropertyUpdate[]\n  ) => void\n): void {\n  try {\n    const processedResult = CustomPropsHandler.HandlePropsChange(propChangeType, oldProp, newProp)\n    if (processedResult.accepted) {\n      if (processedResult.processed) {\n        // console.log(`handled ${propChangeType} on ${propertyName} by custom handler - new Value: ${JSON.stringify(processedResult.value ?? {})}`);\n        changedProps.push({\n          propertyName,\n          changeType: propChangeType,\n          value: processedResult.value!,\n          isSetAccessor,\n        })\n      }\n\n      // we assume any custom handler that 'accepts' a property does not want to pass\n      // down to built-in handler.  ie: [] -> Vector3 would fail.\n      return\n    }\n\n    templateMethod(oldProp, newProp, changedProps)\n  } catch (e) {\n    console.error(`Unable to update '${propertyName}' with ${propChangeType}:`, newProp)\n    console.error(e)\n  }\n}\n\nexport const checkQuaternionDiff = (\n  oldProp: Quaternion | undefined,\n  newProp: Quaternion | undefined,\n  propertyName: string,\n  isSetAccessor: boolean,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<Quaternion>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Quaternion,\n    changedProps,\n    isSetAccessor,\n    (oldProp, newProp, changedProps) => {\n      // going with equals (also has method equalsWithEpsilon)\n      if (newProp && (!oldProp || !newProp.equals(oldProp))) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Quaternion,\n          value: newProp,\n          isSetAccessor,\n        })\n      }\n    }\n  )\n}\n\nexport const checkVector3Diff = (\n  oldProp: Vector3 | undefined,\n  newProp: Vector3 | undefined,\n  propertyName: string,\n  isSetAccessor: boolean,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<Vector3>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Vector3,\n    changedProps,\n    isSetAccessor,\n    (oldProp, newProp, changedProps) => {\n      if (newProp && (!oldProp || !newProp.equals(oldProp))) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Vector3,\n          value: newProp,\n          isSetAccessor,\n        })\n      }\n    }\n  )\n}\n\nexport const checkColor3Diff = (\n  oldProp: Color3 | undefined,\n  newProp: Color3 | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<Color3>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Color3,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      if (newProp && (!oldProp || !newProp.equals(oldProp))) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Color3,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport const checkColor4Diff = (\n  oldProp: Color4 | undefined,\n  newProp: Color4 | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<Color4>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Color4,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      // Color4.equals() not added until PR #5517\n      if (\n        newProp &&\n        (!oldProp ||\n          oldProp.r !== newProp.r ||\n          oldProp.g !== newProp.g ||\n          oldProp.b !== newProp.b ||\n          oldProp.a !== newProp.a)\n      ) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Color4,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport const checkFresnelParametersDiff = (\n  oldProp: FresnelParameters | undefined,\n  newProp: FresnelParameters | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<FresnelParameters>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.FresnelParameters,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      // FresnelParameters.equals() not added until PR #7818 (https://github.com/BabylonJS/Babylon.js/pull/7818)\n      if (\n        newProp /* won't clear the property value */ &&\n        (!oldProp ||\n          oldProp.bias !== newProp.bias ||\n          oldProp.power !== newProp.power ||\n          !oldProp.leftColor ||\n          !oldProp.leftColor.equals(newProp.leftColor) ||\n          !oldProp.rightColor ||\n          !oldProp.rightColor.equals(newProp.rightColor) ||\n          oldProp.isEnabled !== newProp.isEnabled)\n      ) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.FresnelParameters,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport const checkLambdaDiff = (\n  oldProp: any | undefined,\n  newProp: any | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<any>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.LambdaExpression,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      if (newProp !== oldProp) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.LambdaExpression,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport const checkControlDiff = (\n  oldProp: Control | undefined,\n  newProp: Control | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<Control>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Control,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      // only sets once\n      if (newProp && !oldProp) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Control,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport const checkObjectDiff = (\n  oldProp: Record<string, unknown> | Light | undefined,\n  newProp: Record<string, unknown> | Light | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<Record<string, unknown> | Light>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Primitive,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      if (newProp !== oldProp) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Primitive, // basic equality check (same as primitive)\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport type PrimitiveType = string | number | undefined | null | boolean\n\nexport const checkPrimitiveDiff = (\n  oldProp: PrimitiveType | undefined,\n  newProp: PrimitiveType | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<PrimitiveType>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Primitive,\n    changedProps,\n    false, // actually it may be, but it doesn't matter as we set the property directly anyway\n    (oldProp, newProp, changedProps) => {\n      if (newProp !== oldProp) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Primitive,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport const checkTextureDiff = (\n  oldProp: BaseTexture | undefined,\n  newProp: BaseTexture | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<BaseTexture>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Texture,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      if (newProp !== oldProp) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Texture,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport const checkNumericArrayDiff = (\n  oldProp: number[] | undefined,\n  newProp: number[] | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<number[]>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.NumericArray,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      // just length - missing loop + indexOf comparison (or deepEquals())\n      if (newProp && (!oldProp || oldProp.length !== newProp.length)) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.NumericArray,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\nexport const checkObservableDiff = (\n  oldProp: Observable<any> | undefined,\n  newProp: Observable<any> | undefined,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  propertyCheck<Observable<any>>(\n    oldProp,\n    newProp,\n    propertyName,\n    PropChangeType.Observable,\n    changedProps,\n    false,\n    (oldProp, newProp, changedProps) => {\n      if (oldProp !== newProp) {\n        changedProps.push({\n          propertyName,\n          changeType: PropChangeType.Observable,\n          value: newProp,\n          isSetAccessor: false,\n        })\n      }\n    }\n  )\n}\n\n/**\n * This method differs from the rest in that we need to pass in a list of arguments.  Can be done by using:\n * 1. an array to signify each parameter (or Object.values(...)).\n *\n * @param oldProp value of method (array, object, primitive, etc.)\n * @param newProp value of method (array, object, primitive, etc.)\n * @param propertyName name of property for diff\n * @param changedProps list to append to when a diff is found\n */\nexport const checkMethodDiff = (\n  oldProp: any,\n  newProp: any,\n  propertyName: string,\n  changedProps: PropertyUpdate[]\n): void => {\n  if (oldProp !== newProp) {\n    changedProps.push({\n      propertyName,\n      changeType: PropChangeType.Method,\n      value: newProp,\n      isSetAccessor: false,\n    })\n  }\n}\n","import { Camera } from '@babylonjs/core/Cameras/camera.js'\nimport { Color3, Color4 } from '@babylonjs/core/Maths/math.color.js'\nimport { Vector2, Vector3 } from '@babylonjs/core/Maths/math.vector.js'\n// TODO: write backwards compatible export in babylonjs...\n// 5.0 import { VertexBuffer } from '@babylonjs/core/Buffers/buffer.js';\nimport { VertexBuffer } from '@babylonjs/core/Meshes/buffer.js'\nimport { Mesh } from '@babylonjs/core/Meshes/mesh.js'\nimport { VertexData } from '@babylonjs/core/Meshes/mesh.vertexData.js'\nimport { MeshBuilder } from '@babylonjs/core/Meshes/meshBuilder.js'\nimport { Tools } from '@babylonjs/core/Misc/tools.js'\nimport { SolidParticleSystem } from '@babylonjs/core/Particles/solidParticleSystem.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { IndicesArray, Nullable } from '@babylonjs/core/types.js'\n\n// module Extensions {\n\nexport class DynamicTerrain {\n  public name: string\n\n  private _terrainSub: number // terrain number of subdivisions per axis\n  private _mapData: number[] | Float32Array // data of the map\n  private _terrainIdx: number // actual terrain vertex number per axis\n  private _mapSubX: number // map number of subdivisions on X axis\n  private _mapSubZ: number // map number of subdivisions on Z axis\n  private _mapUVs: number[] | Float32Array // UV data of SPmapDatahe map\n  private _mapColors: number[] | Float32Array // Color data of the map\n  private _mapNormals: number[] | Float32Array // Normal data of the map\n  private _SPmapData: number[][] | Float32Array[] // Solid particle data (position, rotation, scaling) of the object map : array of arrays, one per particle type\n  private _SPcolorData: number[][] | Float32Array[] // Solid particle color data : array of arrays, one per particle type\n  private _SPuvData: number[][] | Float32Array[] // Solid particle uv data : array of arrays, one per particle type\n  private _sps: SolidParticleSystem // SPS used to manage the particles\n  private _spsTypeStartIndexes!: number[] // type start indexes in the SPS\n  private _nbAvailablePerType!: number[] // per type of used particle counter\n  private _spsNbPerType!: number[] // number of particles available per type in the SPS\n  private _particleDataStride: number = 9 // data stride : position, rotation, scaling : 9 floats\n  private _particleColorStride: number = 4 // color stride : color4 : r, g, b, a : 4 floats\n  private _particleUVStride: number = 4 // uv stride : vector4 : x, y, z, w : 4 floats\n  private _scene: Scene // current scene\n  private _subToleranceX: number = 1 | 0 // hoSPcw many cells flought over thy the camera on the terrain x axis before update\n  private _subToleranceZ: number = 1 | 0 // hoSPcw many cells flought over thy the camera on the terrain z axis before update\n  private _LODLimits: number[] = [] // arSPcray of LOD limits\n  private _initialLOD: number = 1 | 0 // inSPcitial LOD value (integer > 0)\n  private _LODValue: number = 1 | 0 // cuSPcrrent LOD value : initial + camera correction\n  private _cameraLODCorrection: number = 0 | 0 // LOSPcD correction (integer) according to the camera altitude\n  private _LODPositiveX: boolean = true // DoeSPcs LOD apply to the terrain right edge ?\n  private _LODNegativeX: boolean = true // DoeSPcs LOD apply to the terrain left edge ?\n  private _LODPositiveZ: boolean = true // DoeSPcs LOD apply to the terrain upper edge ?\n  private _LODNegativeZ: boolean = true // DoeSPcs LOD apply to the terrain lower edge ?\n  private _terrainCamera: Camera // caSPcmera linked to the terrain\n  private _inverted: boolean = false // is the terrain mesh inverted upside down ?\n  public shiftFromCamera: { x: number; z: number } = {\n    // terrain center shift from camera position\n    x: 0.0,\n    z: 0.0,\n  }\n  private _indices: Nullable<IndicesArray>\n  private _positions: Float32Array | number[]\n  private _normals: Float32Array | number[]\n  private _colors: Float32Array | number[]\n  private _uvs: Float32Array | number[]\n  private _deltaSubX: number = 0 | 0 // map x subdivision delta : variation in number of map subdivisions\n  private _deltaSubZ: number = 0 | 0 // map z subdivision delta\n  private _refreshEveryFrame: boolean = false // boolean : to force the terrain computation every frame\n  private _useCustomVertexFunction: boolean = false // boolean : to allow the call to updateVertex()\n  private _computeNormals: boolean = false // boolean : to skip or not the normal computation\n  private _datamap: boolean = false // boolean : true if an data map is passed as parameter\n  private _uvmap: boolean = false // boolean : true if an UV map is passed as parameter\n  private _colormap: boolean = false // boolean : true if an color map is passed as parameter\n  private _mapSPData: boolean = false // boolean : true if a SPmapData array is passed as parameter\n  private _colorSPData: boolean = false // boolean : true if a SPcolorData array is passed as parameter\n  private _uvSPData: boolean = false // boolean : true if a SPuvData array is passed as parameter\n  private _mapQuads!: number[][][] // map quads of types of particle index in the SPmapData array mapQuads[mapIndex][partType] = [pIndex1, pIndex2, ...] (particle indexes in SPmapData)\n  private static _vertex: any = {\n    // current vertex object passed to the user custom function\n    position: Vector3.Zero(), // vertex position in the terrain space (Vector3)\n    uvs: Vector2.Zero(), // vertex uv\n    color: new Color4(1.0, 1.0, 1.0, 1.0), // vertex color (Color4)\n    lodX: 1 | 0, // vertex LOD value on X axis\n    lodZ: 1 | 0, // vertex LOD value on Z axis\n    worldPosition: Vector3.Zero(), // vertex World position\n    mapIndex: 0 | 0, // current map index\n  }\n  private _averageSubSizeX: number = 0.0 // map cell average x size\n  private _averageSubSizeZ: number = 0.0 // map cell average z size\n  private _terrainSizeX: number = 0.0 // terrain x size\n  private _terrainSizeZ: number = 0.0 // terrain y size\n  private _terrainHalfSizeX: number = 0.0\n  private _terrainHalfSizeZ: number = 0.0\n  private _centerWorld: Vector3 = Vector3.Zero() // terrain world center position\n  private _centerLocal: Vector3 = Vector3.Zero() // terrain local center position\n  private _mapSizeX: number = 0.0 // map x size\n  private _mapSizeZ: number = 0.0 // map z size\n  private _terrain: Mesh // reference to the ribbon\n  private _isAlwaysVisible: boolean = false // is the terrain mesh always selected for rendering\n  private _precomputeNormalsFromMap: boolean = false // if the normals must be precomputed from the map data when assigning a new map to the existing terrain\n  // tmp vectors\n  private static _v1: Vector3 = Vector3.Zero()\n  private static _v2: Vector3 = Vector3.Zero()\n  private static _v3: Vector3 = Vector3.Zero()\n  private static _v4: Vector3 = Vector3.Zero()\n  private static _vAvB: Vector3 = Vector3.Zero()\n  private static _vAvC: Vector3 = Vector3.Zero()\n  private static _norm: Vector3 = Vector3.Zero()\n  private static _bbMin: Vector3 = Vector3.Zero()\n  private static _bbMax: Vector3 = Vector3.Zero()\n\n  /**\n   * constructor\n   * @param name\n   * @param options\n   * @param scene\n   * @param {*} mapData the array of the map 3D data : x, y, z successive float values\n   * @param {*} mapSubX the data map number of x subdivisions : integer\n   * @param {*} mapSubZ the data map number of z subdivisions : integer\n   * @param {*} terrainSub the wanted terrain number of subdivisions : integer, multiple of 2.\n   * @param {*} mapUVs the array of the map UV data (optional) : u,v successive values, each between 0 and 1.\n   * @param {*} mapColors the array of the map Color data (optional) : x, y, z successive float values.\n   * @param {*} mapNormals the array of the map normal data (optional) : r,g,b successive values, each between 0 and 1.\n   * @param {*} invertSide boolean, to invert the terrain mesh upside down. Default false.\n   * @param {*} camera the camera to link the terrain to. Optional, by default the scene active camera\n   * @param {*} SPmapData an array of arrays or Float32Arrays (one per particle type) of object data (position, rotation, scaling) on the map. Optional.\n   * @param {*} sps the Solid Particle System used to manage the particles. Required when used with SPmapData.\n   * @param {*} SPcolorData an array of arrays or Float32Arrays (one per particle type) of object colors on the map. One series of r, g, b, a floats per object. Optional, requires a SPmapData and a sps to be passed.\n   * @param {*} SPuvData an array of arrays or Float32Arrays (one per particle type) of object uvs on the map. One series of x, y, z, w floats per object. Optional, requires a SPmapData and a sps to be passed.\n   */\n  constructor(\n    name: string,\n    scene: Scene,\n    options?: {\n      terrainSub?: number\n      mapData?: number[] | Float32Array\n      mapSubX?: number\n      mapSubZ?: number\n      mapUVs?: number[] | Float32Array\n      mapColors?: number[] | Float32Array\n      mapNormals?: number[] | Float32Array\n      invertSide?: boolean\n      camera?: Camera\n      SPmapData?: number[][] | Float32Array[]\n      sps?: SolidParticleSystem\n      SPcolorData?: number[][] | Float32Array[]\n      SPuvData?: number[][] | Float32Array[]\n      intializedCallback?: any\n    }\n  ) {\n    this.name = name\n    options = options || {}\n    this._terrainSub = options.terrainSub || 60\n    this._mapData = options.mapData!\n    this._terrainIdx = this._terrainSub + 1\n    this._mapSubX = options.mapSubX || this._terrainIdx\n    this._mapSubZ = options.mapSubZ || this._terrainIdx\n    this._mapUVs = options.mapUVs! // if not defined, it will be still populated by default values\n    this._mapColors = options.mapColors!\n    this._scene = scene\n    this._terrainCamera = options.camera || scene.activeCamera!\n    this._inverted = options.invertSide!\n    this._SPmapData = options.SPmapData!\n    this._SPcolorData = options.SPcolorData!\n    this._SPuvData = options.SPuvData!\n    this._sps = options.sps!\n\n    // initialize the map arrays if not passed as parameters\n    this._datamap = this._mapData ? true : false\n    this._uvmap = this._mapUVs ? true : false\n    this._colormap = this._mapColors ? true : false\n    this._mapSPData = this._SPmapData ? true : false\n    this._colorSPData = this._mapSPData && this._SPcolorData ? true : false\n    this._uvSPData = this._mapSPData && this._SPuvData ? true : false\n    this._mapData = this._datamap\n      ? this._mapData\n      : new Float32Array(this._terrainIdx * this._terrainIdx * 3)\n    this._mapUVs = this._uvmap\n      ? this._mapUVs\n      : new Float32Array(this._terrainIdx * this._terrainIdx * 2)\n    if (this._datamap) {\n      this._mapNormals = options.mapNormals || new Float32Array(this._mapSubX * this._mapSubZ * 3)\n    } else {\n      this._mapNormals = new Float32Array(this._terrainIdx * this._terrainIdx * 3)\n    }\n\n    // Ribbon creation\n    let index = 0 // current vertex index in the map array\n    let posIndex = 0 // current position (coords) index in the map array\n    let colIndex = 0 // current color index in the color array\n    let uvIndex = 0 // current uv index in the uv array\n    let color // current color\n    let uv // current uv\n    let terIndex = 0 // current index in the terrain array\n    let y = 0.0 // current y coordinate\n    let terrainPath // current path\n    let u = 0.0 // current u of UV\n    let v = 0.0 // current v of UV\n    let lg = this._terrainIdx + 1 // augmented length for the UV to finish before\n    const terrainData = []\n    const terrainColor = []\n    const terrainUV = []\n    const mapData = this._mapData\n    const mapColors = this._mapColors\n    const mapUVs = this._mapUVs\n    for (let j = 0; j <= this._terrainSub; j++) {\n      terrainPath = []\n      for (let i = 0; i <= this._terrainSub; i++) {\n        index = this._mod(j * 3, this._mapSubZ) * this._mapSubX + this._mod(i * 3, this._mapSubX)\n        posIndex = index * 3\n        colIndex = index * 3\n        uvIndex = index * 2\n        terIndex = j * this._terrainIdx + i\n        // geometry\n        if (this._datamap) {\n          y = mapData[posIndex + 1]\n        } else {\n          y = 0.0\n          mapData[3 * terIndex] = i\n          mapData[3 * terIndex + 1] = y\n          mapData[3 * terIndex + 2] = j\n        }\n        terrainPath.push(new Vector3(i, y, j))\n        // color\n        if (this._colormap) {\n          color = new Color4(\n            mapColors[colIndex],\n            mapColors[colIndex + 1],\n            mapColors[colIndex + 2],\n            1.0\n          )\n        } else {\n          color = new Color4(1.0, 1.0, 1.0, 1.0)\n        }\n        terrainColor.push(color)\n        // uvs\n        if (this._uvmap) {\n          uv = new Vector2(mapUVs[uvIndex], mapUVs[uvIndex + 1])\n        } else {\n          u = 1.0 - Math.abs(1.0 - (2.0 * i) / lg)\n          v = 1.0 - Math.abs(1.0 - (2.0 * j) / lg)\n          mapUVs[2 * terIndex] = u\n          mapUVs[2 * terIndex + 1] = v\n          uv = new Vector2(u, v)\n        }\n        terrainUV.push(uv)\n      }\n      terrainData.push(terrainPath)\n    }\n\n    this._mapSizeX = Math.abs(mapData[(this._mapSubX - 1) * 3] - mapData[0])\n    this._mapSizeZ = Math.abs(mapData[(this._mapSubZ - 1) * this._mapSubX * 3 + 2] - mapData[2])\n    this._averageSubSizeX = this._mapSizeX / this._mapSubX\n    this._averageSubSizeZ = this._mapSizeZ / this._mapSubZ\n    const ribbonOptions = {\n      pathArray: terrainData,\n      sideOrientation: options.invertSide ? Mesh.FRONTSIDE : Mesh.BACKSIDE,\n      colors: terrainColor,\n      uvs: terrainUV,\n      updatable: true,\n    }\n    this._terrain = MeshBuilder.CreateRibbon('terrain', ribbonOptions, this._scene)\n    this._indices = this._terrain.getIndices()\n    this._positions = this._terrain.getVerticesData(VertexBuffer.PositionKind) as\n      | number[]\n      | Float32Array\n    this._normals = this._terrain.getVerticesData(VertexBuffer.NormalKind)!\n    this._uvs = this._terrain.getVerticesData(VertexBuffer.UVKind)!\n    this._colors = this._terrain.getVerticesData(VertexBuffer.ColorKind)!\n    this.computeNormalsFromMap()\n\n    // update it immediately and register the update callback function in the render loop\n    this.update(true)\n    this._terrain.position.x =\n      this._terrainCamera.globalPosition.x - this._terrainHalfSizeX + this.shiftFromCamera.x\n    this._terrain.position.z =\n      this._terrainCamera.globalPosition.z - this._terrainHalfSizeZ + this.shiftFromCamera.z\n    // initialize deltaSub to make on the map\n    let deltaNbSubX = (this._terrain.position.x - mapData[0]) / this._averageSubSizeX\n    let deltaNbSubZ = (this._terrain.position.z - mapData[2]) / this._averageSubSizeZ\n    this._deltaSubX = deltaNbSubX > 0 ? Math.floor(deltaNbSubX) : Math.ceil(deltaNbSubX)\n    this._deltaSubZ = deltaNbSubZ > 0 ? Math.floor(deltaNbSubZ) : Math.ceil(deltaNbSubZ)\n    this._scene.onBeforeRenderObservable.add(() => {\n      const refreshEveryFrame = this._refreshEveryFrame\n      this.beforeUpdate(refreshEveryFrame)\n      this.update(refreshEveryFrame)\n      this.afterUpdate(refreshEveryFrame)\n    })\n\n    // if SP data, populate the map quads\n    // mapQuads[mapIndex][partType] = [partIdx1 , partIdx2 ...] partIdx are particle indexes in SPmapData\n    const SPmapData = this._SPmapData\n    const dataStride = this._particleDataStride\n    if (this._mapSPData) {\n      const mapSizeX = this._mapSizeX\n      const mapSizeZ = this._mapSizeZ\n      const mapSubX = this._mapSubX\n      const mapSubZ = this._mapSubZ\n      const quads: number[][][] = []\n      this._mapQuads = quads\n      let x0 = mapData[0]\n      let z0 = mapData[2]\n\n      for (let t = 0; t < SPmapData.length; t++) {\n        const data = SPmapData[t]\n        let nb = (data.length / dataStride) | 0\n        for (let pIdx = 0; pIdx < nb; pIdx++) {\n          // particle position x, z in the map\n          let dIdx = pIdx * dataStride\n          let x = data[dIdx]\n          let z = data[dIdx + 2]\n          x = x - Math.floor((x - x0) / mapSizeX) * mapSizeX\n          z = z - Math.floor((z - z0) / mapSizeZ) * mapSizeZ\n          let col = Math.floor(((x - x0) * mapSubX) / mapSizeX)\n          let row = Math.floor(((z - z0) * mapSubZ) / mapSizeZ)\n          let quadIdx = row * mapSubX + col\n          if (quads[quadIdx] === undefined) {\n            quads[quadIdx] = []\n          }\n          if (quads[quadIdx][t] === undefined) {\n            quads[quadIdx][t] = []\n          }\n          let quad = quads[quadIdx][t]\n          // push the particle index from the SPmapData array into the quads array\n          quad.push(pIdx)\n        }\n      }\n\n      // update the sps\n      const sps = this._sps\n      sps.computeBoundingBox = true\n      sps.isAlwaysVisible = true\n      if (this._colorSPData) {\n        sps.computeParticleColor = true\n      }\n      if (this._uvSPData) {\n        sps.computeParticleTexture = true\n      }\n      // store particle types\n      const spsTypeStartIndexes: number[] = []\n      this._spsTypeStartIndexes = spsTypeStartIndexes\n      const spsNbPerType: number[] = []\n      this._spsNbPerType = spsNbPerType\n      const nbAvailablePerType: number[] = []\n      this._nbAvailablePerType = nbAvailablePerType!\n      const nbParticles = sps.nbParticles\n      const particles = sps.particles\n      let type = 0\n      spsTypeStartIndexes.push(type)\n      nbAvailablePerType.push(0)\n      let count = 1\n      for (var p = 1; p < nbParticles; p++) {\n        particles[p].isVisible = false\n        if (type != particles[p].shapeId) {\n          type++\n          spsTypeStartIndexes.push(p)\n          spsNbPerType.push(count)\n          nbAvailablePerType.push(count)\n          count = 0\n        }\n        count++\n      }\n      spsNbPerType.push(count)\n    }\n    this.update(true) // recompute everything once the initial deltas are calculated\n  }\n\n  /**\n   * Updates the terrain position and shape according to the camera position.\n   * `force` : boolean, forces the terrain update even if no camera position change.\n   * Returns the terrain.\n   */\n  public update(force: boolean): DynamicTerrain {\n    let needsUpdate = false\n    let updateLOD = false\n    const updateForced = force ? true : false\n    const terrainPosition = this._terrain.position\n    const cameraPosition = this._terrainCamera.globalPosition\n    const shiftFromCamera = this.shiftFromCamera\n    let terrainHalfSizeX = this._terrainHalfSizeX\n    let terrainHalfSizeZ = this._terrainHalfSizeZ\n    const deltaX = terrainHalfSizeX + terrainPosition.x - cameraPosition.x - shiftFromCamera.x\n    const deltaZ = terrainHalfSizeZ + terrainPosition.z - cameraPosition.z - shiftFromCamera.z\n    const subToleranceX = this._subToleranceX\n    const subToleranceZ = this._subToleranceZ\n    const mod = this._mod\n\n    // current LOD\n    let oldCorrection = this._cameraLODCorrection\n    this._cameraLODCorrection = this.updateCameraLOD(this._terrainCamera) | 0\n    updateLOD = oldCorrection == this._cameraLODCorrection ? false : true\n    let LODValue = this._initialLOD + this._cameraLODCorrection\n    LODValue = LODValue > 0 ? LODValue : 1\n    this._LODValue = LODValue\n\n    // threshold sizes on each axis to trigger the terrain update\n    let mapShiftX = this._averageSubSizeX * subToleranceX * LODValue\n    let mapShiftZ = this._averageSubSizeZ * subToleranceZ * LODValue\n\n    let mapFlgtNb = 0 | 0 // number of map cells flought over by the camera in the delta shift\n    let deltaSubX = this._deltaSubX\n    let deltaSubZ = this._deltaSubZ\n    if (Math.abs(deltaX) > mapShiftX) {\n      const signX = deltaX > 0.0 ? -1 : 1\n      mapFlgtNb = Math.abs(deltaX / mapShiftX) | 0\n      terrainPosition.x += mapShiftX * signX * mapFlgtNb\n      deltaSubX += subToleranceX * signX * LODValue * mapFlgtNb\n      needsUpdate = true\n    }\n    if (Math.abs(deltaZ) > mapShiftZ) {\n      const signZ = deltaZ > 0.0 ? -1 : 1\n      mapFlgtNb = Math.abs(deltaZ / mapShiftZ) | 0\n      terrainPosition.z += mapShiftZ * signZ * mapFlgtNb\n      deltaSubZ += subToleranceZ * signZ * LODValue * mapFlgtNb\n      needsUpdate = true\n    }\n    const updateSize = updateLOD || updateForced // must the terrain size be updated ?\n    if (needsUpdate || updateSize) {\n      this._deltaSubX = mod(deltaSubX, this._mapSubX)\n      this._deltaSubZ = mod(deltaSubZ, this._mapSubZ)\n      this._updateTerrain(updateSize)\n    }\n\n    terrainHalfSizeX = this._terrainHalfSizeX\n    terrainHalfSizeZ = this._terrainHalfSizeZ\n    this.centerLocal.copyFromFloats(terrainHalfSizeX, 0.0, terrainHalfSizeZ)\n    this._centerWorld.copyFromFloats(\n      terrainPosition.x + terrainHalfSizeX,\n      terrainPosition.y,\n      terrainPosition.z + terrainHalfSizeZ\n    )\n\n    return this\n  }\n\n  // private : updates the underlying ribbon\n  private _updateTerrain(updateSize: boolean): void {\n    let stepJ = 0 | 0\n    let stepI = 0 | 0\n    let LODLimitDown = 0 | 0\n    let LODLimitUp = 0 | 0\n    let LODValue = this._LODValue // terrain LOD value\n    let axisLODValue = LODValue // current axis computed LOD value\n    let lodI = LODValue // LOD X\n    let lodJ = LODValue // LOD Z\n    const bbMin = DynamicTerrain._bbMin\n    const bbMax = DynamicTerrain._bbMax\n    const terrain = this._terrain\n    const positions = this._positions!\n    const normals = this._normals\n    const colors = this._colors\n    const uvs = this._uvs\n    const mapColors = this._mapColors\n    const mapNormals = this._mapNormals\n    const mapData = this._mapData\n    const mapUVs = this._mapUVs\n    const mapSPData = this._mapSPData\n    const quads = this._mapQuads\n    const nbPerType = this._spsNbPerType\n    const SPmapData = this._SPmapData\n    const SPcolorData = this._SPcolorData\n    const SPuvData = this._SPuvData\n    const dataStride = this._particleDataStride\n    const colorStride = this._particleColorStride\n    const uvStride = this._particleUVStride\n    const LODLimits = this._LODLimits\n    const terrainSub = this._terrainSub\n    const mod = this._mod\n    const terrainIdx = this._terrainIdx\n    const mapSubX = this._mapSubX\n    const mapSubZ = this._mapSubZ\n    const deltaSubX = this._deltaSubX\n    const deltaSubZ = this._deltaSubZ\n    const datamap = this._datamap\n    const uvmap = this._uvmap\n    const colormap = this._colormap\n    const useCustomVertexFunction = this._useCustomVertexFunction\n    const updateVertex = this.updateVertex\n    const dontComputeNormals = !this._computeNormals\n    const LODpstvX = this._LODPositiveX\n    const LODngtvX = this._LODNegativeX\n    const LODpstvZ = this._LODPositiveZ\n    const LODngtvZ = this._LODNegativeZ\n    const mapSizeX = this._mapSizeX\n    const mapSizeZ = this._mapSizeZ\n    const averageSubSizeX = this._averageSubSizeX\n    const averageSubSizeZ = this._averageSubSizeZ\n    const particleMap = mapSPData && quads\n    const particleColorMap = particleMap && this._colorSPData\n    const particleUVMap = particleMap && this._uvSPData\n\n    let l = 0 | 0\n    let index = 0 | 0 // current vertex index in the map data array\n    let posIndex1 = 0 | 0 // current position index in the map data array\n    let posIndex2 = 0 | 0\n    let posIndex3 = 0 | 0\n    let colIndex = 0 | 0 // current index in the map color array\n    let uvIndex = 0 | 0 // current index in the map uv array\n    let terIndex = 0 | 0 // current vertex index in the terrain map array when used as a data map\n    let ribbonInd = 0 | 0 // current ribbon vertex index\n    let ribbonPosInd = 0 | 0 // current ribbon position index (same than normal index)\n    let ribbonUVInd = 0 | 0 // current ribbon UV index\n    let ribbonColInd = 0 | 0 // current ribbon color index\n    let ribbonColInd1 = 0 | 0\n    let ribbonColInd2 = 0 | 0\n    let ribbonColInd3 = 0 | 0\n    let ribbonColInd4 = 0 | 0\n    let ribbonPosInd1 = 0 | 0\n    let ribbonPosInd2 = 0 | 0\n    let ribbonPosInd3 = 0 | 0\n    // note : all the indexes are explicitly set as integers for the js optimizer (store them all in the stack)\n\n    if (updateSize) {\n      this.updateTerrainSize()\n    }\n    Vector3.FromFloatsToRef(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE, bbMin)\n    Vector3.FromFloatsToRef(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE, bbMax)\n\n    if (particleMap) {\n      var sps = this._sps\n      var particles = sps.particles\n      var spsTypeStartIndexes = this._spsTypeStartIndexes\n      var nbAvailablePerType = this._nbAvailablePerType\n      var x0 = mapData[0]\n      var z0 = mapData[2]\n      var terrainPos = terrain.position\n\n      // reset all the particles to invisible\n      const nbParticles = sps.nbParticles\n      for (let p = 0; p < nbParticles; p++) {\n        particles[p].isVisible = false\n      }\n    }\n\n    for (let j = 0 | 0; j <= terrainSub; j++) {\n      // LOD Z\n      axisLODValue = LODValue\n      for (l = 0; l < LODLimits.length; l++) {\n        LODLimitDown = LODLimits[l]\n        LODLimitUp = terrainSub - LODLimitDown - 1\n        if ((LODngtvZ && j < LODLimitDown) || (LODpstvZ && j > LODLimitUp)) {\n          axisLODValue = l + 1 + LODValue\n        }\n        lodJ = axisLODValue\n      }\n\n      for (let i = 0 | 0; i <= terrainSub; i++) {\n        // LOD X\n        axisLODValue = LODValue\n        for (l = 0; l < LODLimits.length; l++) {\n          LODLimitDown = LODLimits[l]\n          LODLimitUp = terrainSub - LODLimitDown - 1\n          if ((LODngtvX && i < LODLimitDown) || (LODpstvX && i > LODLimitUp)) {\n            axisLODValue = l + 1 + LODValue\n          }\n          lodI = axisLODValue\n        }\n\n        // map current index\n        index = mod(deltaSubZ + stepJ, mapSubZ) * mapSubX + mod(deltaSubX + stepI, mapSubX)\n        terIndex =\n          mod(deltaSubZ + stepJ, terrainIdx) * terrainIdx + mod(deltaSubX + stepI, terrainIdx)\n\n        // related index in the array of positions (data map)\n        if (datamap) {\n          posIndex1 = 3 * index\n        } else {\n          posIndex1 = 3 * terIndex\n        }\n        // related index in the UV map\n        if (uvmap) {\n          uvIndex = 2 * index\n        } else {\n          uvIndex = 2 * terIndex\n        }\n        // related index in the color map\n        if (colormap) {\n          colIndex = 3 * index\n        } else {\n          colIndex = 3 * terIndex\n        }\n\n        //map indexes\n        posIndex2 = posIndex1 + 1\n        posIndex3 = posIndex1 + 2\n\n        // ribbon indexes\n        ribbonPosInd = 3 * ribbonInd\n        ribbonColInd = 4 * ribbonInd\n        ribbonUVInd = 2 * ribbonInd\n        ribbonPosInd1 = ribbonPosInd\n        ribbonPosInd2 = ribbonPosInd + 1\n        ribbonPosInd3 = ribbonPosInd + 2\n        ribbonColInd1 = ribbonColInd\n        ribbonColInd2 = ribbonColInd + 1\n        ribbonColInd3 = ribbonColInd + 2\n        ribbonColInd4 = ribbonColInd + 3\n        ribbonInd += 1\n\n        // geometry\n        positions[ribbonPosInd1] = averageSubSizeX * stepI\n        positions[ribbonPosInd2] = mapData[posIndex2]\n        positions[ribbonPosInd3] = averageSubSizeZ * stepJ\n\n        if (dontComputeNormals) {\n          normals[ribbonPosInd1] = mapNormals[posIndex1]\n          normals[ribbonPosInd2] = mapNormals[posIndex2]\n          normals[ribbonPosInd3] = mapNormals[posIndex3]\n        }\n\n        // bbox internal update\n        if (positions[ribbonPosInd1] < bbMin.x) {\n          bbMin.x = positions[ribbonPosInd1]\n        }\n        if (positions[ribbonPosInd1] > bbMax.x) {\n          bbMax.x = positions[ribbonPosInd1]\n        }\n        if (positions[ribbonPosInd2] < bbMin.y) {\n          bbMin.y = positions[ribbonPosInd2]\n        }\n        if (positions[ribbonPosInd2] > bbMax.y) {\n          bbMax.y = positions[ribbonPosInd2]\n        }\n        if (positions[ribbonPosInd3] < bbMin.z) {\n          bbMin.z = positions[ribbonPosInd3]\n        }\n        if (positions[ribbonPosInd3] > bbMax.z) {\n          bbMax.z = positions[ribbonPosInd3]\n        }\n        // color\n        if (colormap) {\n          colors[ribbonColInd1] = mapColors[colIndex]\n          colors[ribbonColInd2] = mapColors[colIndex + 1]\n          colors[ribbonColInd3] = mapColors[colIndex + 2]\n        }\n        // uv : the array _mapUVs is always populated\n        uvs[ribbonUVInd] = mapUVs[uvIndex]\n        uvs[ribbonUVInd + 1] = mapUVs[uvIndex + 1]\n\n        // call to user custom function with the current updated vertex object\n        if (useCustomVertexFunction) {\n          const vertex = DynamicTerrain._vertex\n          const vertexPosition = vertex.position\n          const vertexWorldPosition = vertex.worldPosition\n          const vertexColor = vertex.color\n          const vertexUvs = vertex.uvs\n          vertexPosition.copyFromFloats(\n            positions[ribbonPosInd1],\n            positions[ribbonPosInd2],\n            positions[ribbonPosInd3]\n          )\n          vertexWorldPosition.copyFromFloats(\n            mapData[posIndex1],\n            vertexPosition.y,\n            mapData[posIndex3]\n          )\n          vertex.lodX = lodI\n          vertex.lodZ = lodJ\n          vertexColor.copyFromFloats(\n            colors[ribbonColInd1],\n            colors[ribbonColInd2],\n            colors[ribbonColInd3],\n            colors[ribbonColInd4]\n          )\n          vertexUvs.copyFromFloats(uvs[ribbonUVInd], uvs[ribbonUVInd + 1])\n          vertex.mapIndex = index\n          updateVertex(vertex, i, j) // the user can modify the array values here\n          colors[ribbonColInd1] = vertexColor.r\n          colors[ribbonColInd2] = vertexColor.g\n          colors[ribbonColInd3] = vertexColor.b\n          colors[ribbonColInd4] = vertexColor.a\n          uvs[ribbonUVInd] = vertexUvs.x\n          uvs[ribbonUVInd + 1] = vertexUvs.y\n          positions[ribbonPosInd1] = vertexPosition.x\n          positions[ribbonPosInd2] = vertexPosition.y\n          positions[ribbonPosInd3] = vertexPosition.z\n        }\n\n        // SPS management\n        if (particleMap) {\n          let quad = quads[index]\n          if (quad) {\n            // if a quad contains some particles in the map\n            for (let t = 0; t < quad.length; t++) {\n              let data = SPmapData[t]\n              let partIndexes = quad[t]\n              if (particleColorMap) {\n                var sp_colorData = SPcolorData[t]\n              }\n              if (particleUVMap) {\n                var sp_uvData = SPuvData[t]\n              }\n              if (partIndexes) {\n                let typeStartIndex = spsTypeStartIndexes![t] // particle start index for a given type in the SPS\n                const nbQuadParticles = partIndexes.length\n                let nbInSPS = nbPerType[t]\n                let available = nbAvailablePerType![t]\n                const rem = nbInSPS - available\n                var used = rem > 0 ? rem : 0\n                let min = available < nbQuadParticles ? available : nbQuadParticles // don't iterate beyond possible\n                for (let pIdx = 0; pIdx < min; pIdx++) {\n                  let px = partIndexes[pIdx]\n                  let idm = px * dataStride\n                  // set successive available particles of this type\n                  let particle = particles![typeStartIndex + pIdx + used]\n                  let pos = particle.position\n                  let rot = particle.rotation\n                  let scl = particle.scaling\n                  let x = data[idm]\n                  pos.x = x + Math.floor((terrainPos!.x - x - x0!) / mapSizeX) * mapSizeX\n                  pos.y = data[idm + 1]\n                  let z = data[idm + 2]\n                  pos.z = z + Math.floor((terrainPos!.z - z - z0!) / mapSizeZ) * mapSizeZ\n                  rot.x = data[idm + 3]\n                  rot.y = data[idm + 4]\n                  rot.z = data[idm + 5]\n                  scl.x = data[idm + 6]\n                  scl.y = data[idm + 7]\n                  scl.z = data[idm + 8]\n                  if (particleColorMap) {\n                    let idc = px * colorStride\n                    let col = particle.color!\n                    col.r = sp_colorData![idc]\n                    col.g = sp_colorData![idc + 1]\n                    col.b = sp_colorData![idc + 2]\n                    col.a = sp_colorData![idc + 3]\n                  }\n                  if (particleUVMap) {\n                    let iduv = px * uvStride\n                    let uvs = particle.uvs\n                    uvs.x = sp_uvData![iduv]\n                    uvs.y = sp_uvData![iduv + 1]\n                    uvs.z = sp_uvData![iduv + 2]\n                    uvs.w = sp_uvData![iduv + 3]\n                  }\n                  particle.isVisible = true\n                  available = available - 1\n                  used = used + 1\n                  min = available < nbQuadParticles ? available : nbQuadParticles\n                }\n                available = available > 0 ? available : 0\n                nbAvailablePerType![t] = available\n              }\n            }\n          }\n        }\n        stepI += lodI\n      }\n      stepI = 0\n      stepJ += lodJ\n    }\n\n    if (particleMap) {\n      sps!.setParticles()\n      for (let c = 0; c < nbAvailablePerType!.length; c++) {\n        nbAvailablePerType![c] = nbPerType[c]\n      }\n    }\n\n    // ribbon update\n    terrain.updateVerticesData(VertexBuffer.PositionKind, positions, false, false)\n    if (this._computeNormals) {\n      VertexData.ComputeNormals(positions, this._indices, normals)\n    }\n    terrain.updateVerticesData(VertexBuffer.NormalKind, normals, false, false)\n    terrain.updateVerticesData(VertexBuffer.UVKind, uvs, false, false)\n    terrain.updateVerticesData(VertexBuffer.ColorKind, colors, false, false)\n    ;(terrain as any)._boundingInfo!.reConstruct(bbMin, bbMax, terrain._worldMatrix)\n  }\n\n  // private modulo, for dealing with negative indexes\n  private _mod(a: number, b: number): number {\n    return ((a % b) + b) % b\n  }\n\n  /**\n   * Updates the mesh terrain size according to the LOD limits and the camera position.\n   * Returns the terrain.\n   */\n  public updateTerrainSize(): DynamicTerrain {\n    let remainder = this._terrainSub // the remaining cells at the general current LOD value\n    let nb = 0 | 0 // nb of cells in the current LOD limit interval\n    let next = 0 | 0 // next cell index, if it exists\n    let LODValue = this._LODValue\n    let lod = LODValue + 1 // lod value in the current LOD limit interval\n    let tsx = 0.0 // current sum of cell sizes on x\n    let tsz = 0.0 // current sum of cell sizes on z\n    const LODLimits = this._LODLimits\n    const averageSubSizeX = this._averageSubSizeX\n    const averageSubSizeZ = this._averageSubSizeZ\n    for (let l = 0 | 0; l < LODLimits.length; l++) {\n      lod = LODValue + l + 1\n      next = l >= LODLimits.length - 1 ? 0 : LODLimits[l + 1]\n      nb = 2 * (LODLimits[l] - next)\n      tsx += averageSubSizeX * lod * nb\n      tsz += averageSubSizeZ * lod * nb\n      remainder -= nb\n    }\n    tsx += remainder * averageSubSizeX * LODValue\n    tsz += remainder * averageSubSizeZ * LODValue\n    this._terrainSizeX = tsx\n    this._terrainSizeZ = tsz\n    this._terrainHalfSizeX = tsx * 0.5\n    this._terrainHalfSizeZ = tsz * 0.5\n    return this\n  }\n\n  /**\n   * Returns the altitude (float) at the coordinates (x, z) of the map.\n   * @param x\n   * @param z\n   * @param {normal: Vector3} (optional)\n   * If the optional object {normal: Vector3} is passed, then its property \"normal\" is updated with the normal vector value at the coordinates (x, z).\n   */\n  public getHeightFromMap(x: number, z: number, options?: { normal: Vector3 }): number {\n    return DynamicTerrain._GetHeightFromMap(\n      x,\n      z,\n      this._mapData,\n      this._mapSubX,\n      this._mapSubZ,\n      this._mapSizeX,\n      this._mapSizeZ,\n      options,\n      this._inverted\n    )\n  }\n\n  /**\n   * Static : Returns the altitude (float) at the coordinates (x, z) of the passed map.\n   * @param x\n   * @param z\n   * @param mapSubX the number of points along the map width\n   * @param mapSubX the number of points along the map height\n   * @param {normal: Vector3} (optional)\n   * @param inverted (optional boolean) is the terrain inverted\n   * If the optional object {normal: Vector3} is passed, then its property \"normal\" is updated with the normal vector value at the coordinates (x, z).\n   */\n  public static GetHeightFromMap(\n    x: number,\n    z: number,\n    mapData: number[] | Float32Array,\n    mapSubX: number,\n    mapSubZ: number,\n    options?: { normal: Vector3 },\n    inverted?: boolean\n  ): number {\n    let mapSizeX = Math.abs(mapData[(mapSubX - 1) * 3] - mapData[0])\n    let mapSizeZ = Math.abs(mapData[(mapSubZ - 1) * mapSubX * 3 + 2] - mapData[2])\n    return DynamicTerrain._GetHeightFromMap(\n      x,\n      z,\n      mapData,\n      mapSubX,\n      mapSubZ,\n      mapSizeX,\n      mapSizeZ,\n      options,\n      inverted\n    )\n  }\n\n  // Computes the height and optionnally the normal at the coordinates (x ,z) from the passed map\n  private static _GetHeightFromMap(\n    x: number,\n    z: number,\n    mapData: number[] | Float32Array,\n    mapSubX: number,\n    mapSubZ: number,\n    mapSizeX: number,\n    mapSizeZ: number,\n    options?: { normal: Vector3 },\n    inverted?: boolean\n  ): number {\n    let x0 = mapData[0]\n    let z0 = mapData[2]\n\n    // reset x and z in the map space so they are between 0 and the map size\n    x = x - Math.floor((x - x0) / mapSizeX) * mapSizeX\n    z = z - Math.floor((z - z0) / mapSizeZ) * mapSizeZ\n\n    let col1 = Math.floor(((x - x0) * mapSubX) / mapSizeX)\n    let row1 = Math.floor(((z - z0) * mapSubZ) / mapSizeZ)\n    let col2 = (col1 + 1) % mapSubX\n    let row2 = (row1 + 1) % mapSubZ\n    // starting indexes of the positions of 4 vertices defining a quad on the map\n    let idx1 = 3 * (row1 * mapSubX + col1)\n    let idx2 = 3 * (row1 * mapSubX + col2)\n    let idx3 = 3 * (row2 * mapSubX + col1)\n    let idx4 = 3 * (row2 * mapSubX + col2)\n\n    const v1 = DynamicTerrain._v1\n    const v2 = DynamicTerrain._v2\n    const v3 = DynamicTerrain._v3\n    const v4 = DynamicTerrain._v4\n    v1.copyFromFloats(mapData[idx1], mapData[idx1 + 1], mapData[idx1 + 2])\n    v2.copyFromFloats(mapData[idx2], mapData[idx2 + 1], mapData[idx2 + 2])\n    v3.copyFromFloats(mapData[idx3], mapData[idx3 + 1], mapData[idx3 + 2])\n    v4.copyFromFloats(mapData[idx4], mapData[idx4 + 1], mapData[idx4 + 2])\n\n    const vAvB = DynamicTerrain._vAvB\n    const vAvC = DynamicTerrain._vAvC\n    const norm = DynamicTerrain._norm\n    const vA = v1\n    let vB\n    let vC\n    let v\n\n    let xv4v1 = v4.x - v1.x\n    let zv4v1 = v4.z - v1.z\n    if (xv4v1 == 0 || zv4v1 == 0) {\n      return v1.y\n    }\n    let cd = zv4v1 / xv4v1\n    let h = v1.z - cd * v1.x\n    if (z < cd * x + h) {\n      vB = v4\n      vC = v2\n      v = vA\n    } else {\n      vB = v3\n      vC = v4\n      v = vB\n    }\n    vB.subtractToRef(vA, vAvB)\n    vC.subtractToRef(vA, vAvC)\n    Vector3.CrossToRef(vAvB, vAvC, norm)\n    norm.normalize()\n    if (inverted) {\n      norm.scaleInPlace(-1.0)\n    }\n    if (options && options.normal) {\n      options.normal.copyFrom(norm)\n    }\n    let d = -(norm.x * v.x + norm.y * v.y + norm.z * v.z)\n    let y = v.y\n    if (norm.y != 0.0) {\n      y = -(norm.x * x + norm.z * z + d) / norm.y\n    }\n\n    return y\n  }\n\n  /**\n   * Static : Computes all the normals from the terrain data map  and stores them in the passed Float32Array reference.\n   * This passed array must have the same size than the mapData array.\n   */\n  public static ComputeNormalsFromMapToRef(\n    mapData: number[] | Float32Array,\n    mapSubX: number,\n    mapSubZ: number,\n    normals: number[] | Float32Array,\n    inverted: boolean\n  ): void {\n    const mapIndices = []\n    const tmp1 = { normal: Vector3.Zero() }\n    const tmp2 = { normal: Vector3.Zero() }\n    const normal1 = tmp1.normal\n    const normal2 = tmp2.normal\n    let l = mapSubX * (mapSubZ - 1)\n    let i = 0\n    for (i = 0; i < l; i++) {\n      mapIndices.push(i + 1, i + mapSubX, i)\n      mapIndices.push(i + mapSubX, i + 1, i + mapSubX + 1)\n    }\n    VertexData.ComputeNormals(mapData, mapIndices, normals)\n\n    // seam process\n    let lastIdx = (mapSubX - 1) * 3\n    let colStart = 0\n    let colEnd = 0\n    const getHeightFromMap = DynamicTerrain.GetHeightFromMap\n    for (i = 0; i < mapSubZ; i++) {\n      colStart = i * mapSubX * 3\n      colEnd = colStart + lastIdx\n      getHeightFromMap(mapData[colStart], mapData[colStart + 2], mapData, mapSubX, mapSubZ, tmp1)\n      getHeightFromMap(mapData[colEnd], mapData[colEnd + 2], mapData, mapSubX, mapSubZ, tmp2)\n      normal1.addInPlace(normal2).scaleInPlace(0.5)\n      normals[colStart] = normal1.x\n      normals[colStart + 1] = normal1.y\n      normals[colStart + 2] = normal1.z\n      normals[colEnd] = normal1.x\n      normals[colEnd + 1] = normal1.y\n      normals[colEnd + 2] = normal1.z\n    }\n    // inverted terrain\n    if (inverted) {\n      for (i = 0; i < normals.length; i++) {\n        normals[i] = -normals[i]\n      }\n    }\n  }\n\n  /**\n   * Computes all the map normals from the current terrain data map and sets them to the terrain.\n   * Returns the terrain.\n   */\n  public computeNormalsFromMap(): DynamicTerrain {\n    DynamicTerrain.ComputeNormalsFromMapToRef(\n      this._mapData,\n      this._mapSubX,\n      this._mapSubZ,\n      this._mapNormals,\n      this._inverted\n    )\n    return this\n  }\n\n  /**\n   * Returns true if the World coordinates (x, z) are in the current terrain.\n   * @param x\n   * @param z\n   */\n  public contains(x: number, z: number): boolean {\n    const positions = this._positions!\n    const meshPosition = this.mesh.position\n    const terrainIdx = this._terrainIdx\n    if (x < positions[0] + meshPosition.x || x > positions[3 * terrainIdx] + meshPosition.x) {\n      return false\n    }\n    if (\n      z < positions[2] + meshPosition.z ||\n      z > positions[3 * terrainIdx * terrainIdx + 2] + meshPosition.z\n    ) {\n      return false\n    }\n    return true\n  }\n\n  /**\n         * Static : Returns a new data map from the passed heightmap image file.\n         The parameters `width` and `height` (positive floats, default 300) set the map width and height sizes.\n        * `subX` is the wanted number of points along the map width (default 100).\n        * `subZ` is the wanted number of points along the map height (default 100).\n        * The parameter `minHeight` (float, default 0) is the minimum altitude of the map.\n        * The parameter `maxHeight` (float, default 1) is the maximum altitude of the map.\n        * The parameter `colorFilter` (optional Color3, default (0.3, 0.59, 0.11) ) is the filter to apply to the image pixel colors to compute the height.\n        * `onReady` is an optional callback function, called once the map is computed. It's passed the computed map.\n        * `scene` is the Scene object whose database will store the downloaded image.\n        */\n  public static CreateMapFromHeightMap(\n    heightmapURL: string,\n    options: {\n      width: number\n      height: number\n      subX: number\n      subZ: number\n      minHeight: number\n      maxHeight: number\n      offsetX: number\n      offsetZ: number\n      onReady?: (map: number[] | Float32Array, subX: number, subZ: number) => void\n      colorFilter?: Color3\n    },\n    scene: Scene\n  ): Float32Array {\n    const subX = options.subX || 100\n    const subZ = options.subZ || 100\n    const data = new Float32Array(subX * subZ * 3)\n    DynamicTerrain.CreateMapFromHeightMapToRef(heightmapURL, options, data, scene)\n    return data\n  }\n\n  /**\n   * Static : Updates the passed array or Float32Array with a data map computed from the passed heightmap image file.\n   *  The parameters `width` and `height` (positive floats, default 300) set the map width and height sizes.\n   * `subX` is the wanted number of points along the map width (default 100).\n   * `subZ` is the wanted number of points along the map height (default 100).\n   * The parameter `minHeight` (float, default 0) is the minimum altitude of the map.\n   * The parameter `maxHeight` (float, default 1) is the maximum altitude of the map.\n   * The parameter `colorFilter` (optional Color3, default (0.3, 0.59, 0.11) ) is the filter to apply to the image pixel colors to compute the height.\n   * `onReady` is an optional callback function, called once the map is computed. It's passed the computed map.\n   * `scene` is the Scene object whose database will store the downloaded image.\n   * The passed Float32Array must be the right size : 3 x subX x subZ.\n   */\n  public static CreateMapFromHeightMapToRef(\n    heightmapURL: string,\n    options: {\n      width: number\n      height: number\n      subX: number\n      subZ: number\n      minHeight: number\n      maxHeight: number\n      offsetX: number\n      offsetZ: number\n      onReady?: (map: number[] | Float32Array, subX: number, subZ: number) => void\n      colorFilter?: Color3\n    },\n    data: number[] | Float32Array,\n    scene: Scene\n  ): void {\n    const width = options.width || 300\n    const height = options.height || 300\n    const subX = options.subX || 100\n    const subZ = options.subZ || 100\n    const minHeight = options.minHeight || 0.0\n    const maxHeight = options.maxHeight || 10.0\n    const offsetX = options.offsetX || 0.0\n    const offsetZ = options.offsetZ || 0.0\n    const filter = options.colorFilter || new Color3(0.3, 0.59, 0.11)\n    const onReady = options.onReady\n\n    const onload = (img: HTMLImageElement | ImageBitmap) => {\n      // Getting height map data\n      const canvas = document.createElement('canvas')\n      const context = canvas.getContext('2d')!\n      const bufferWidth = img.width\n      const bufferHeight = img.height\n      canvas.width = bufferWidth\n      canvas.height = bufferHeight\n      context.drawImage(img, 0, 0)\n      // Cast is due to wrong definition in lib.d.ts from ts 1.3 - https://github.com/Microsoft/TypeScript/issues/949\n      const buffer = <Uint8Array>(<any>context.getImageData(0, 0, bufferWidth, bufferHeight).data)\n      let x = 0.0\n      let y = 0.0\n      let z = 0.0\n      for (let row = 0; row < subZ; row++) {\n        for (let col = 0; col < subX; col++) {\n          x = (col * width) / subX - width * 0.5\n          z = (row * height) / subZ - height * 0.5\n          let heightmapX = (((x + width * 0.5) / width) * (bufferWidth - 1)) | 0\n          let heightmapY =\n            (bufferHeight - 1 - ((z + height * 0.5) / height) * (bufferHeight - 1)) | 0\n          let pos = (heightmapX + heightmapY * bufferWidth) * 4\n          let gradient =\n            (buffer[pos] * filter.r + buffer[pos + 1] * filter.g + buffer[pos + 2] * filter.b) /\n            255.0\n          y = minHeight + (maxHeight - minHeight) * gradient\n          let idx = (row * subX + col) * 3\n          data[idx] = x + offsetX\n          data[idx + 1] = y\n          data[idx + 2] = z + offsetZ\n        }\n      }\n\n      // callback function if any\n      if (onReady) {\n        onReady(data, subX, subZ)\n      }\n    }\n\n    Tools.LoadImage(heightmapURL, onload, () => {}, scene.offlineProvider)\n  }\n\n  /**\n   * Static : Updates the passed arrays with UVs values to fit the whole map with subX points along its width and subZ points along its height.\n   * The passed array must be the right size : subX x subZ x 2.\n   */\n  public static CreateUVMapToRef(\n    subX: number,\n    subZ: number,\n    mapUVs: number[] | Float32Array\n  ): void {\n    for (let h = 0; h < subZ; h++) {\n      for (let w = 0; w < subX; w++) {\n        mapUVs[(h * subX + w) * 2] = w / subX\n        mapUVs[(h * subX + w) * 2 + 1] = h / subZ\n      }\n    }\n  }\n  /**\n   * Static : Returns a new UV array with values to fit the whole map with subX points along its width and subZ points along its height.\n   */\n  public static CreateUVMap(subX: number, subZ: number): Float32Array {\n    const mapUVs = new Float32Array(subX * subZ * 2)\n    DynamicTerrain.CreateUVMapToRef(subX, subZ, mapUVs)\n    return mapUVs\n  }\n\n  /**\n   * Computes and sets the terrain UV map with values to fit the whole map.\n   * Returns the terrain.\n   */\n  public createUVMap(): DynamicTerrain {\n    this.mapUVs = DynamicTerrain.CreateUVMap(this._mapSubX, this._mapSubZ)\n    return this\n  }\n\n  // Getters / Setters\n  /**\n   * boolean : if the terrain must be recomputed every frame.\n   */\n  public get refreshEveryFrame(): boolean {\n    return this._refreshEveryFrame\n  }\n  public set refreshEveryFrame(val: boolean) {\n    this._refreshEveryFrame = val\n  }\n  /**\n   * Mesh : the logical terrain underlying mesh\n   */\n  public get mesh(): Mesh {\n    return this._terrain\n  }\n  /**\n   * The camera the terrain is linked to\n   */\n  public get camera(): Camera {\n    return this._terrainCamera\n  }\n  public set camera(val: Camera) {\n    this._terrainCamera = val\n  }\n  /**\n   * Number of cells flought over by the cam on the X axis before the terrain is updated.\n   * Integer greater or equal to 1.\n   */\n  public get subToleranceX(): number {\n    return this._subToleranceX\n  }\n  public set subToleranceX(val: number) {\n    this._subToleranceX = val > 0 ? val : 1\n  }\n  /**\n   * Number of cells flought over by the cam on the Z axis before the terrain is updated.\n   * Integer greater or equal to 1. Default 1.\n   */\n  public get subToleranceZ(): number {\n    return this._subToleranceZ\n  }\n  public set subToleranceZ(val: number) {\n    this._subToleranceZ = val > 0 ? val : 1\n  }\n  /**\n   * Initial LOD factor value.\n   * Integer greater or equal to 1. Default 1.\n   */\n  public get initialLOD(): number {\n    return this._initialLOD\n  }\n  public set initialLOD(val: number) {\n    this._initialLOD = val > 0 ? val : 1\n  }\n  /**\n   * Current LOD factor value : the lower factor in the terrain.\n   * The LOD value is the sum of the initialLOD and the current cameraLODCorrection.\n   * Integer greater or equal to 1. Default 1.\n   */\n  public get LODValue(): number {\n    return this._LODValue\n  }\n  /**\n   * Camera LOD correction : the factor to add to the initial LOD according to the camera position, movement, etc.\n   * Positive integer (default 0)\n   */\n  public get cameraLODCorrection(): number {\n    return this._cameraLODCorrection\n  }\n  public set cameraLODCorrection(val: number) {\n    this._cameraLODCorrection = val >= 0 ? val : 0\n  }\n  /**\n   * Boolean : Does the LOD apply only to the terrain right edge ?\n   * Default : true\n   */\n  public get LODPositiveX(): boolean {\n    return this._LODPositiveX\n  }\n  public set LODPositiveX(val: boolean) {\n    this._LODPositiveX = val\n  }\n  /**\n   * Boolean : Does the LOD apply only to the terrain left edge ?\n   * Default : true\n   */\n  public get LODNegativeX(): boolean {\n    return this._LODNegativeX\n  }\n  public set LODNegativeX(val: boolean) {\n    this._LODNegativeX = val\n  }\n  /**\n   * Boolean : Does the LOD apply only to the terrain upper edge ?\n   * Default : true\n   */\n  public get LODPositiveZ(): boolean {\n    return this._LODPositiveZ\n  }\n  public set LODPositiveZ(val: boolean) {\n    this._LODPositiveZ = val\n  }\n  /**\n   * Boolean : Does the LOD apply only to the terrain lower edge ?\n   * Default : true\n   */\n  public get LODNegativeZ(): boolean {\n    return this._LODNegativeZ\n  }\n  public set LODNegativeZ(val: boolean) {\n    this._LODNegativeZ = val\n  }\n  /**\n   * Average map and terrain subdivision size on X axis.\n   * Returns a float.\n   */\n  public get averageSubSizeX(): number {\n    return this._averageSubSizeX\n  }\n  /**\n   * Average map and terrain subdivision size on Z axis.\n   * Returns a float.\n   */\n  public get averageSubSizeZ(): number {\n    return this._averageSubSizeZ\n  }\n  /**\n   * Current terrain size on the X axis.\n   * Returns a float.\n   */\n  public get terrainSizeX(): number {\n    return this._terrainSizeX\n  }\n  /**\n   * Current terrain half size on the X axis.\n   * Returns a float.\n   */\n  public get terrainHalfSizeX(): number {\n    return this._terrainHalfSizeX\n  }\n  /**\n   * Current terrain size on the Z axis.\n   * Returns a float.\n   */\n  public get terrainSizeZ(): number {\n    return this._terrainSizeZ\n  }\n  /**\n   * Current terrain half size on the Z axis.\n   * Returns a float.\n   */\n  public get terrainHalfSizeZ(): number {\n    return this._terrainHalfSizeZ\n  }\n  /**\n   * Current position of terrain center in its local space.\n   * Returns a Vector3.\n   */\n  public get centerLocal(): Vector3 {\n    return this._centerLocal\n  }\n  /**\n   * Current position of terrain center in the World space.\n   * Returns a Vector3.\n   */\n  public get centerWorld(): Vector3 {\n    return this._centerWorld\n  }\n  /**\n   * The array of the limit values to change the LOD factor.\n   * Returns an array of integers or an empty array.\n   * This array is always sorted in the descending order once set.\n   */\n  public get LODLimits(): number[] {\n    return this._LODLimits\n  }\n  public set LODLimits(ar: number[]) {\n    ar.sort((a, b) => {\n      return b - a\n    })\n    this._LODLimits = ar\n  }\n  /**\n   * The data of the map.\n   * A flat array (Float32Array recommeded) of successive 3D float coordinates (x, y, z).\n   * This property can be set only if a mapData array was passed at construction time.\n   */\n  public get mapData(): Float32Array | number[] {\n    return this._mapData\n  }\n  public set mapData(val: Float32Array | number[]) {\n    this._mapData = val\n    this._datamap = true\n    const mapSubX = this._mapSubX\n    const mapSubZ = this._mapSubZ\n    this._mapSizeX = Math.abs(val[(mapSubX - 1) * 3] - val[0])\n    this._mapSizeZ = Math.abs(val[(mapSubZ - 1) * mapSubX * 3 + 2] - val[2])\n    this._averageSubSizeX = this._mapSizeX / mapSubX\n    this._averageSubSizeZ = this._mapSizeZ / mapSubZ\n    if (this._precomputeNormalsFromMap) {\n      this.computeNormalsFromMap()\n    }\n    this.update(true)\n  }\n  /**\n   * The number of points on the map width.\n   * Positive Integer.\n   */\n  public get mapSubX(): number {\n    return this._mapSubX\n  }\n  public set mapSubX(val: number) {\n    this._mapSubX = val\n  }\n  /**\n   * The number of points on the map height .\n   * Positive Integer.\n   */\n  public get mapSubZ(): number {\n    return this._mapSubZ\n  }\n  public set mapSubZ(val: number) {\n    this._mapSubZ = val\n  }\n  /**\n   * The map of colors.\n   * A flat array of successive floats between 0 and 1 as r,g,b values.\n   * This property can be set only if a mapColors array was passed at construction time.\n   */\n  public get mapColors(): Float32Array | number[] {\n    return this._mapColors\n  }\n  public set mapColors(val: Float32Array | number[]) {\n    this._colormap = true\n    this._mapColors = val\n  }\n  /**\n   * The map of UVs.\n   * A flat array of successive floats between 0 and 1 as (u, v) values.\n   * This property can be set only if a mapUVs array was passed at construction time.\n   */\n  public get mapUVs(): Float32Array | number[] {\n    return this._mapUVs\n  }\n  public set mapUVs(val: Float32Array | number[]) {\n    this._uvmap = true\n    this._mapUVs = val\n  }\n  /**\n   * The map of normals.\n   * A flat array of successive floats as normal vector coordinates (x, y, z) on each map point.\n   */\n  public get mapNormals(): Float32Array | number[] {\n    return this._mapNormals\n  }\n  public set mapNormals(val: Float32Array | number[]) {\n    this._mapNormals = val\n  }\n  /**\n   * Boolean : must the normals be recomputed on each terrain update (default : false).\n   * By default, all the map normals are pre-computed on terrain creation.\n   */\n  public get computeNormals(): boolean {\n    return this._computeNormals\n  }\n  public set computeNormals(val: boolean) {\n    this._computeNormals = val\n  }\n  /**\n   * Boolean : will the custom function updateVertex() be called on each terrain update ?\n   * Default false\n   */\n  public get useCustomVertexFunction(): boolean {\n    return this._useCustomVertexFunction\n  }\n  public set useCustomVertexFunction(val: boolean) {\n    this._useCustomVertexFunction = val\n  }\n  /**\n   * Boolean : is the terrain always directly selected for rendering ?\n   */\n  public get isAlwaysVisible(): boolean {\n    return this._isAlwaysVisible\n  }\n  public set isAlwaysVisible(val) {\n    this.mesh.alwaysSelectAsActiveMesh = val\n    this._isAlwaysVisible = val\n  }\n  /**\n   * Boolean : when assigning a new data map to the existing, shall the normals be automatically precomputed once ?\n   * Default false.\n   */\n  public get precomputeNormalsFromMap(): boolean {\n    return this._precomputeNormalsFromMap\n  }\n  public set precomputeNormalsFromMap(val) {\n    this._precomputeNormalsFromMap = val\n  }\n  // ===============================================================\n  // User custom functions.\n  // These following can be overwritten bu the user to fit his needs.\n\n  /**\n   * Custom function called for each terrain vertex and passed the :\n   * - current vertex {position: Vector3, uvs: Vector2, color: Color4, lodX: integer, lodZ: integer, worldPosition: Vector3, mapIndex: integer}\n   * - i : the vertex index on the terrain x axis\n   * - j : the vertex index on the terrain x axis\n   * This function is called only if the property useCustomVertexFunction is set to true.\n   */\n  public updateVertex(vertex: Vector3, i: number, j: number): void {\n    return\n  }\n\n  /**\n   * Custom function called each frame and passed the terrain camera reference.\n   * This should return a positive integer or zero.\n   * Returns zero by default.\n   */\n  public updateCameraLOD(terrainCamera: Camera): number {\n    // LOD value increases with camera altitude\n    var camLOD = 0\n    return camLOD\n  }\n  /**\n   * Custom function called before each terrain update.\n   * The value of reference is passed.\n   * Does nothing by default.\n   */\n  public beforeUpdate(refreshEveryFrame: boolean): void {\n    return\n  }\n  /**\n   * Custom function called after each terrain update.\n   * The value of refreshEveryFrame is passed.\n   * Does nothing by default.\n   */\n  public afterUpdate(refreshEveryFrame: boolean): void {\n    return\n  }\n}\n// }\n","import { AbstractScene as BabylonjsCoreAbstractScene } from '@babylonjs/core/abstractScene.js'\nimport { AutoRotationBehavior as BabylonjsCoreAutoRotationBehavior } from '@babylonjs/core/Behaviors/Cameras/autoRotationBehavior.js'\nimport { BouncingBehavior as BabylonjsCoreBouncingBehavior } from '@babylonjs/core/Behaviors/Cameras/bouncingBehavior.js'\nimport { FramingBehavior as BabylonjsCoreFramingBehavior } from '@babylonjs/core/Behaviors/Cameras/framingBehavior.js'\nimport { AttachToBoxBehavior as BabylonjsCoreAttachToBoxBehavior } from '@babylonjs/core/Behaviors/Meshes/attachToBoxBehavior.js'\nimport { BaseSixDofDragBehavior as BabylonjsCoreBaseSixDofDragBehavior } from '@babylonjs/core/Behaviors/Meshes/baseSixDofDragBehavior.js'\nimport { FadeInOutBehavior as BabylonjsCoreFadeInOutBehavior } from '@babylonjs/core/Behaviors/Meshes/fadeInOutBehavior.js'\nimport { FollowBehavior as BabylonjsCoreFollowBehavior } from '@babylonjs/core/Behaviors/Meshes/followBehavior.js'\nimport { HandConstraintBehavior as BabylonjsCoreHandConstraintBehavior } from '@babylonjs/core/Behaviors/Meshes/handConstraintBehavior.js'\nimport { MultiPointerScaleBehavior as BabylonjsCoreMultiPointerScaleBehavior } from '@babylonjs/core/Behaviors/Meshes/multiPointerScaleBehavior.js'\nimport { PointerDragBehavior as BabylonjsCorePointerDragBehavior } from '@babylonjs/core/Behaviors/Meshes/pointerDragBehavior.js'\nimport { SixDofDragBehavior as BabylonjsCoreSixDofDragBehavior } from '@babylonjs/core/Behaviors/Meshes/sixDofDragBehavior.js'\nimport { SurfaceMagnetismBehavior as BabylonjsCoreSurfaceMagnetismBehavior } from '@babylonjs/core/Behaviors/Meshes/surfaceMagnetismBehavior.js'\nimport { ArcRotateCamera as BabylonjsCoreArcRotateCamera } from '@babylonjs/core/Cameras/arcRotateCamera.js'\nimport { Camera as BabylonjsCoreCamera } from '@babylonjs/core/Cameras/camera.js'\nimport { DeviceOrientationCamera as BabylonjsCoreDeviceOrientationCamera } from '@babylonjs/core/Cameras/deviceOrientationCamera.js'\nimport { FlyCamera as BabylonjsCoreFlyCamera } from '@babylonjs/core/Cameras/flyCamera.js'\nimport {\n  ArcFollowCamera as BabylonjsCoreArcFollowCamera,\n  FollowCamera as BabylonjsCoreFollowCamera,\n} from '@babylonjs/core/Cameras/followCamera.js'\nimport { FreeCamera as BabylonjsCoreFreeCamera } from '@babylonjs/core/Cameras/freeCamera.js'\nimport { GamepadCamera as BabylonjsCoreGamepadCamera } from '@babylonjs/core/Cameras/gamepadCamera.js'\nimport { AnaglyphArcRotateCamera as BabylonjsCoreAnaglyphArcRotateCamera } from '@babylonjs/core/Cameras/Stereoscopic/anaglyphArcRotateCamera.js'\nimport { AnaglyphFreeCamera as BabylonjsCoreAnaglyphFreeCamera } from '@babylonjs/core/Cameras/Stereoscopic/anaglyphFreeCamera.js'\nimport { AnaglyphGamepadCamera as BabylonjsCoreAnaglyphGamepadCamera } from '@babylonjs/core/Cameras/Stereoscopic/anaglyphGamepadCamera.js'\nimport { AnaglyphUniversalCamera as BabylonjsCoreAnaglyphUniversalCamera } from '@babylonjs/core/Cameras/Stereoscopic/anaglyphUniversalCamera.js'\nimport { StereoscopicArcRotateCamera as BabylonjsCoreStereoscopicArcRotateCamera } from '@babylonjs/core/Cameras/Stereoscopic/stereoscopicArcRotateCamera.js'\nimport { StereoscopicFreeCamera as BabylonjsCoreStereoscopicFreeCamera } from '@babylonjs/core/Cameras/Stereoscopic/stereoscopicFreeCamera.js'\nimport { StereoscopicGamepadCamera as BabylonjsCoreStereoscopicGamepadCamera } from '@babylonjs/core/Cameras/Stereoscopic/stereoscopicGamepadCamera.js'\nimport { StereoscopicScreenUniversalCamera as BabylonjsCoreStereoscopicScreenUniversalCamera } from '@babylonjs/core/Cameras/Stereoscopic/stereoscopicScreenUniversalCamera.js'\nimport { StereoscopicUniversalCamera as BabylonjsCoreStereoscopicUniversalCamera } from '@babylonjs/core/Cameras/Stereoscopic/stereoscopicUniversalCamera.js'\nimport { TargetCamera as BabylonjsCoreTargetCamera } from '@babylonjs/core/Cameras/targetCamera.js'\nimport { TouchCamera as BabylonjsCoreTouchCamera } from '@babylonjs/core/Cameras/touchCamera.js'\nimport { UniversalCamera as BabylonjsCoreUniversalCamera } from '@babylonjs/core/Cameras/universalCamera.js'\nimport { VirtualJoysticksCamera as BabylonjsCoreVirtualJoysticksCamera } from '@babylonjs/core/Cameras/virtualJoysticksCamera.js'\nimport { VRDeviceOrientationArcRotateCamera as BabylonjsCoreVRDeviceOrientationArcRotateCamera } from '@babylonjs/core/Cameras/VR/vrDeviceOrientationArcRotateCamera.js'\nimport { VRDeviceOrientationFreeCamera as BabylonjsCoreVRDeviceOrientationFreeCamera } from '@babylonjs/core/Cameras/VR/vrDeviceOrientationFreeCamera.js'\nimport { VRDeviceOrientationGamepadCamera as BabylonjsCoreVRDeviceOrientationGamepadCamera } from '@babylonjs/core/Cameras/VR/vrDeviceOrientationGamepadCamera.js'\nimport { VRExperienceHelper as BabylonjsCoreVRExperienceHelper } from '@babylonjs/core/Cameras/VR/vrExperienceHelper.js'\nimport { EngineView as BabylonjsCoreEngineView } from '@babylonjs/core/Engines/Extensions/engine.views.js'\nimport { AxisDragGizmo as BabylonjsCoreAxisDragGizmo } from '@babylonjs/core/Gizmos/axisDragGizmo.js'\nimport { AxisScaleGizmo as BabylonjsCoreAxisScaleGizmo } from '@babylonjs/core/Gizmos/axisScaleGizmo.js'\nimport { BoundingBoxGizmo as BabylonjsCoreBoundingBoxGizmo } from '@babylonjs/core/Gizmos/boundingBoxGizmo.js'\nimport { CameraGizmo as BabylonjsCoreCameraGizmo } from '@babylonjs/core/Gizmos/cameraGizmo.js'\nimport { Gizmo as BabylonjsCoreGizmo } from '@babylonjs/core/Gizmos/gizmo.js'\nimport { GizmoManager as BabylonjsCoreGizmoManager } from '@babylonjs/core/Gizmos/gizmoManager.js'\nimport { LightGizmo as BabylonjsCoreLightGizmo } from '@babylonjs/core/Gizmos/lightGizmo.js'\nimport { PlaneDragGizmo as BabylonjsCorePlaneDragGizmo } from '@babylonjs/core/Gizmos/planeDragGizmo.js'\nimport { PlaneRotationGizmo as BabylonjsCorePlaneRotationGizmo } from '@babylonjs/core/Gizmos/planeRotationGizmo.js'\nimport { PositionGizmo as BabylonjsCorePositionGizmo } from '@babylonjs/core/Gizmos/positionGizmo.js'\nimport { RotationGizmo as BabylonjsCoreRotationGizmo } from '@babylonjs/core/Gizmos/rotationGizmo.js'\nimport { ScaleGizmo as BabylonjsCoreScaleGizmo } from '@babylonjs/core/Gizmos/scaleGizmo.js'\nimport { EnvironmentHelper as BabylonjsCoreEnvironmentHelper } from '@babylonjs/core/Helpers/environmentHelper.js'\nimport { EffectLayer as BabylonjsCoreEffectLayer } from '@babylonjs/core/Layers/effectLayer.js'\nimport { GlowLayer as BabylonjsCoreGlowLayer } from '@babylonjs/core/Layers/glowLayer.js'\nimport { HighlightLayer as BabylonjsCoreHighlightLayer } from '@babylonjs/core/Layers/highlightLayer.js'\nimport { Layer as BabylonjsCoreLayer } from '@babylonjs/core/Layers/layer.js'\nimport { DirectionalLight as BabylonjsCoreDirectionalLight } from '@babylonjs/core/Lights/directionalLight.js'\nimport { HemisphericLight as BabylonjsCoreHemisphericLight } from '@babylonjs/core/Lights/hemisphericLight.js'\nimport { Light as BabylonjsCoreLight } from '@babylonjs/core/Lights/light.js'\nimport { PointLight as BabylonjsCorePointLight } from '@babylonjs/core/Lights/pointLight.js'\nimport { ShadowLight as BabylonjsCoreShadowLight } from '@babylonjs/core/Lights/shadowLight.js'\nimport { CascadedShadowGenerator as BabylonjsCoreCascadedShadowGenerator } from '@babylonjs/core/Lights/Shadows/cascadedShadowGenerator.js'\nimport { ShadowGenerator as BabylonjsCoreShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator.js'\nimport { SpotLight as BabylonjsCoreSpotLight } from '@babylonjs/core/Lights/spotLight.js'\nimport { BackgroundMaterial as BabylonjsCoreBackgroundMaterial } from '@babylonjs/core/Materials/Background/backgroundMaterial.js'\nimport { GreasedLineSimpleMaterial as BabylonjsCoreGreasedLineSimpleMaterial } from '@babylonjs/core/Materials/GreasedLine/greasedLineSimpleMaterial.js'\nimport { ImageProcessingConfiguration as BabylonjsCoreImageProcessingConfiguration } from '@babylonjs/core/Materials/imageProcessingConfiguration.js'\nimport { DetailMapConfiguration as BabylonjsCoreDetailMapConfiguration } from '@babylonjs/core/Materials/material.detailMapConfiguration.js'\nimport { Material as BabylonjsCoreMaterial } from '@babylonjs/core/Materials/material.js'\nimport { MaterialPluginBase as BabylonjsCoreMaterialPluginBase } from '@babylonjs/core/Materials/materialPluginBase.js'\nimport { MultiMaterial as BabylonjsCoreMultiMaterial } from '@babylonjs/core/Materials/multiMaterial.js'\nimport { NodeMaterial as BabylonjsCoreNodeMaterial } from '@babylonjs/core/Materials/Node/nodeMaterial.js'\nimport { OcclusionMaterial as BabylonjsCoreOcclusionMaterial } from '@babylonjs/core/Materials/Occlusion/occlusionMaterial.js'\nimport { PBRAnisotropicConfiguration as BabylonjsCorePBRAnisotropicConfiguration } from '@babylonjs/core/Materials/PBR/pbrAnisotropicConfiguration.js'\nimport { PBRBaseMaterial as BabylonjsCorePBRBaseMaterial } from '@babylonjs/core/Materials/PBR/pbrBaseMaterial.js'\nimport { PBRBaseSimpleMaterial as BabylonjsCorePBRBaseSimpleMaterial } from '@babylonjs/core/Materials/PBR/pbrBaseSimpleMaterial.js'\nimport { PBRBRDFConfiguration as BabylonjsCorePBRBRDFConfiguration } from '@babylonjs/core/Materials/PBR/pbrBRDFConfiguration.js'\nimport { PBRClearCoatConfiguration as BabylonjsCorePBRClearCoatConfiguration } from '@babylonjs/core/Materials/PBR/pbrClearCoatConfiguration.js'\nimport { PBRIridescenceConfiguration as BabylonjsCorePBRIridescenceConfiguration } from '@babylonjs/core/Materials/PBR/pbrIridescenceConfiguration.js'\nimport { PBRMaterial as BabylonjsCorePBRMaterial } from '@babylonjs/core/Materials/PBR/pbrMaterial.js'\nimport { PBRMetallicRoughnessMaterial as BabylonjsCorePBRMetallicRoughnessMaterial } from '@babylonjs/core/Materials/PBR/pbrMetallicRoughnessMaterial.js'\nimport { PBRSheenConfiguration as BabylonjsCorePBRSheenConfiguration } from '@babylonjs/core/Materials/PBR/pbrSheenConfiguration.js'\nimport { PBRSpecularGlossinessMaterial as BabylonjsCorePBRSpecularGlossinessMaterial } from '@babylonjs/core/Materials/PBR/pbrSpecularGlossinessMaterial.js'\nimport { PBRSubSurfaceConfiguration as BabylonjsCorePBRSubSurfaceConfiguration } from '@babylonjs/core/Materials/PBR/pbrSubSurfaceConfiguration.js'\nimport { PrePassConfiguration as BabylonjsCorePrePassConfiguration } from '@babylonjs/core/Materials/prePassConfiguration.js'\nimport { PushMaterial as BabylonjsCorePushMaterial } from '@babylonjs/core/Materials/pushMaterial.js'\nimport { ShaderMaterial as BabylonjsCoreShaderMaterial } from '@babylonjs/core/Materials/shaderMaterial.js'\nimport { StandardMaterial as BabylonjsCoreStandardMaterial } from '@babylonjs/core/Materials/standardMaterial.js'\nimport { BaseTexture as BabylonjsCoreBaseTexture } from '@babylonjs/core/Materials/Textures/baseTexture.js'\nimport { ColorGradingTexture as BabylonjsCoreColorGradingTexture } from '@babylonjs/core/Materials/Textures/colorGradingTexture.js'\nimport { CubeTexture as BabylonjsCoreCubeTexture } from '@babylonjs/core/Materials/Textures/cubeTexture.js'\nimport { DynamicTexture as BabylonjsCoreDynamicTexture } from '@babylonjs/core/Materials/Textures/dynamicTexture.js'\nimport { EquiRectangularCubeTexture as BabylonjsCoreEquiRectangularCubeTexture } from '@babylonjs/core/Materials/Textures/equiRectangularCubeTexture.js'\nimport { HDRCubeTexture as BabylonjsCoreHDRCubeTexture } from '@babylonjs/core/Materials/Textures/hdrCubeTexture.js'\nimport { HtmlElementTexture as BabylonjsCoreHtmlElementTexture } from '@babylonjs/core/Materials/Textures/htmlElementTexture.js'\nimport { MirrorTexture as BabylonjsCoreMirrorTexture } from '@babylonjs/core/Materials/Textures/mirrorTexture.js'\nimport { MultiRenderTarget as BabylonjsCoreMultiRenderTarget } from '@babylonjs/core/Materials/Textures/multiRenderTarget.js'\nimport { MultiviewRenderTarget as BabylonjsCoreMultiviewRenderTarget } from '@babylonjs/core/Materials/Textures/MultiviewRenderTarget.js'\nimport { PrePassRenderTarget as BabylonjsCorePrePassRenderTarget } from '@babylonjs/core/Materials/Textures/prePassRenderTarget.js'\nimport { CustomProceduralTexture as BabylonjsCoreCustomProceduralTexture } from '@babylonjs/core/Materials/Textures/Procedurals/customProceduralTexture.js'\nimport { NoiseProceduralTexture as BabylonjsCoreNoiseProceduralTexture } from '@babylonjs/core/Materials/Textures/Procedurals/noiseProceduralTexture.js'\nimport { ProceduralTexture as BabylonjsCoreProceduralTexture } from '@babylonjs/core/Materials/Textures/Procedurals/proceduralTexture.js'\nimport { RawCubeTexture as BabylonjsCoreRawCubeTexture } from '@babylonjs/core/Materials/Textures/rawCubeTexture.js'\nimport { RawTexture as BabylonjsCoreRawTexture } from '@babylonjs/core/Materials/Textures/rawTexture.js'\nimport { RawTexture2DArray as BabylonjsCoreRawTexture2DArray } from '@babylonjs/core/Materials/Textures/rawTexture2DArray.js'\nimport { RawTexture3D as BabylonjsCoreRawTexture3D } from '@babylonjs/core/Materials/Textures/rawTexture3D.js'\nimport { RefractionTexture as BabylonjsCoreRefractionTexture } from '@babylonjs/core/Materials/Textures/refractionTexture.js'\nimport { RenderTargetTexture as BabylonjsCoreRenderTargetTexture } from '@babylonjs/core/Materials/Textures/renderTargetTexture.js'\nimport { Texture as BabylonjsCoreTexture } from '@babylonjs/core/Materials/Textures/texture.js'\nimport { ThinRenderTargetTexture as BabylonjsCoreThinRenderTargetTexture } from '@babylonjs/core/Materials/Textures/thinRenderTargetTexture.js'\nimport { ThinTexture as BabylonjsCoreThinTexture } from '@babylonjs/core/Materials/Textures/thinTexture.js'\nimport { VideoTexture as BabylonjsCoreVideoTexture } from '@babylonjs/core/Materials/Textures/videoTexture.js'\nimport { Viewport as BabylonjsCoreViewport } from '@babylonjs/core/Maths/math.viewport.js'\nimport { AbstractMesh as BabylonjsCoreAbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { GoldbergMesh as BabylonjsCoreGoldbergMesh } from '@babylonjs/core/Meshes/goldbergMesh.js'\nimport { GreasedLineBaseMesh as BabylonjsCoreGreasedLineBaseMesh } from '@babylonjs/core/Meshes/GreasedLine/greasedLineBaseMesh.js'\nimport { GreasedLineMesh as BabylonjsCoreGreasedLineMesh } from '@babylonjs/core/Meshes/GreasedLine/greasedLineMesh.js'\nimport { GreasedLineRibbonMesh as BabylonjsCoreGreasedLineRibbonMesh } from '@babylonjs/core/Meshes/GreasedLine/greasedLineRibbonMesh.js'\nimport { GroundMesh as BabylonjsCoreGroundMesh } from '@babylonjs/core/Meshes/groundMesh.js'\nimport { InstancedMesh as BabylonjsCoreInstancedMesh } from '@babylonjs/core/Meshes/instancedMesh.js'\nimport {\n  InstancedLinesMesh as BabylonjsCoreInstancedLinesMesh,\n  LinesMesh as BabylonjsCoreLinesMesh,\n} from '@babylonjs/core/Meshes/linesMesh.js'\nimport { Mesh as BabylonjsCoreMesh } from '@babylonjs/core/Meshes/mesh.js'\nimport { MeshBuilder as BabylonjsCoreMeshBuilder } from '@babylonjs/core/Meshes/meshBuilder.js'\nimport { TrailMesh as BabylonjsCoreTrailMesh } from '@babylonjs/core/Meshes/trailMesh.js'\nimport { TransformNode as BabylonjsCoreTransformNode } from '@babylonjs/core/Meshes/transformNode.js'\nimport { Node as BabylonjsCoreNode } from '@babylonjs/core/node.js'\nimport { PointsCloudSystem as BabylonjsCorePointsCloudSystem } from '@babylonjs/core/Particles/pointsCloudSystem.js'\nimport { PhysicsImpostor as BabylonjsCorePhysicsImpostor } from '@babylonjs/core/Physics/v1/physicsImpostor.js'\nimport { PhysicsAggregate as BabylonjsCorePhysicsAggregate } from '@babylonjs/core/Physics/v2/physicsAggregate.js'\nimport { AnaglyphPostProcess as BabylonjsCoreAnaglyphPostProcess } from '@babylonjs/core/PostProcesses/anaglyphPostProcess.js'\nimport { BlackAndWhitePostProcess as BabylonjsCoreBlackAndWhitePostProcess } from '@babylonjs/core/PostProcesses/blackAndWhitePostProcess.js'\nimport { BloomMergePostProcess as BabylonjsCoreBloomMergePostProcess } from '@babylonjs/core/PostProcesses/bloomMergePostProcess.js'\nimport { BlurPostProcess as BabylonjsCoreBlurPostProcess } from '@babylonjs/core/PostProcesses/blurPostProcess.js'\nimport { ChromaticAberrationPostProcess as BabylonjsCoreChromaticAberrationPostProcess } from '@babylonjs/core/PostProcesses/chromaticAberrationPostProcess.js'\nimport { CircleOfConfusionPostProcess as BabylonjsCoreCircleOfConfusionPostProcess } from '@babylonjs/core/PostProcesses/circleOfConfusionPostProcess.js'\nimport { ColorCorrectionPostProcess as BabylonjsCoreColorCorrectionPostProcess } from '@babylonjs/core/PostProcesses/colorCorrectionPostProcess.js'\nimport { ConvolutionPostProcess as BabylonjsCoreConvolutionPostProcess } from '@babylonjs/core/PostProcesses/convolutionPostProcess.js'\nimport { DepthOfFieldBlurPostProcess as BabylonjsCoreDepthOfFieldBlurPostProcess } from '@babylonjs/core/PostProcesses/depthOfFieldBlurPostProcess.js'\nimport { DepthOfFieldMergePostProcess as BabylonjsCoreDepthOfFieldMergePostProcess } from '@babylonjs/core/PostProcesses/depthOfFieldMergePostProcess.js'\nimport { DisplayPassPostProcess as BabylonjsCoreDisplayPassPostProcess } from '@babylonjs/core/PostProcesses/displayPassPostProcess.js'\nimport { ExtractHighlightsPostProcess as BabylonjsCoreExtractHighlightsPostProcess } from '@babylonjs/core/PostProcesses/extractHighlightsPostProcess.js'\nimport { FilterPostProcess as BabylonjsCoreFilterPostProcess } from '@babylonjs/core/PostProcesses/filterPostProcess.js'\nimport { FxaaPostProcess as BabylonjsCoreFxaaPostProcess } from '@babylonjs/core/PostProcesses/fxaaPostProcess.js'\nimport { GrainPostProcess as BabylonjsCoreGrainPostProcess } from '@babylonjs/core/PostProcesses/grainPostProcess.js'\nimport { HighlightsPostProcess as BabylonjsCoreHighlightsPostProcess } from '@babylonjs/core/PostProcesses/highlightsPostProcess.js'\nimport { ImageProcessingPostProcess as BabylonjsCoreImageProcessingPostProcess } from '@babylonjs/core/PostProcesses/imageProcessingPostProcess.js'\nimport { MotionBlurPostProcess as BabylonjsCoreMotionBlurPostProcess } from '@babylonjs/core/PostProcesses/motionBlurPostProcess.js'\nimport {\n  PassCubePostProcess as BabylonjsCorePassCubePostProcess,\n  PassPostProcess as BabylonjsCorePassPostProcess,\n} from '@babylonjs/core/PostProcesses/passPostProcess.js'\nimport { PostProcess as BabylonjsCorePostProcess } from '@babylonjs/core/PostProcesses/postProcess.js'\nimport { RefractionPostProcess as BabylonjsCoreRefractionPostProcess } from '@babylonjs/core/PostProcesses/refractionPostProcess.js'\nimport { DefaultRenderingPipeline as BabylonjsCoreDefaultRenderingPipeline } from '@babylonjs/core/PostProcesses/RenderPipeline/Pipelines/defaultRenderingPipeline.js'\nimport { LensRenderingPipeline as BabylonjsCoreLensRenderingPipeline } from '@babylonjs/core/PostProcesses/RenderPipeline/Pipelines/lensRenderingPipeline.js'\nimport { SSAO2RenderingPipeline as BabylonjsCoreSSAO2RenderingPipeline } from '@babylonjs/core/PostProcesses/RenderPipeline/Pipelines/ssao2RenderingPipeline.js'\nimport { SSAORenderingPipeline as BabylonjsCoreSSAORenderingPipeline } from '@babylonjs/core/PostProcesses/RenderPipeline/Pipelines/ssaoRenderingPipeline.js'\nimport { SSRRenderingPipeline as BabylonjsCoreSSRRenderingPipeline } from '@babylonjs/core/PostProcesses/RenderPipeline/Pipelines/ssrRenderingPipeline.js'\nimport { StandardRenderingPipeline as BabylonjsCoreStandardRenderingPipeline } from '@babylonjs/core/PostProcesses/RenderPipeline/Pipelines/standardRenderingPipeline.js'\nimport { PostProcessRenderPipeline as BabylonjsCorePostProcessRenderPipeline } from '@babylonjs/core/PostProcesses/RenderPipeline/postProcessRenderPipeline.js'\nimport { ScreenSpaceCurvaturePostProcess as BabylonjsCoreScreenSpaceCurvaturePostProcess } from '@babylonjs/core/PostProcesses/screenSpaceCurvaturePostProcess.js'\nimport { ScreenSpaceReflectionPostProcess as BabylonjsCoreScreenSpaceReflectionPostProcess } from '@babylonjs/core/PostProcesses/screenSpaceReflectionPostProcess.js'\nimport { SharpenPostProcess as BabylonjsCoreSharpenPostProcess } from '@babylonjs/core/PostProcesses/sharpenPostProcess.js'\nimport {\n  StereoscopicInterlacePostProcess as BabylonjsCoreStereoscopicInterlacePostProcess,\n  StereoscopicInterlacePostProcessI as BabylonjsCoreStereoscopicInterlacePostProcessI,\n} from '@babylonjs/core/PostProcesses/stereoscopicInterlacePostProcess.js'\nimport { SubSurfaceScatteringPostProcess as BabylonjsCoreSubSurfaceScatteringPostProcess } from '@babylonjs/core/PostProcesses/subSurfaceScatteringPostProcess.js'\nimport { TonemapPostProcess as BabylonjsCoreTonemapPostProcess } from '@babylonjs/core/PostProcesses/tonemapPostProcess.js'\nimport { VolumetricLightScatteringPostProcess as BabylonjsCoreVolumetricLightScatteringPostProcess } from '@babylonjs/core/PostProcesses/volumetricLightScatteringPostProcess.js'\nimport { VRDistortionCorrectionPostProcess as BabylonjsCoreVRDistortionCorrectionPostProcess } from '@babylonjs/core/PostProcesses/vrDistortionCorrectionPostProcess.js'\nimport { VRMultiviewToSingleviewPostProcess as BabylonjsCoreVRMultiviewToSingleviewPostProcess } from '@babylonjs/core/PostProcesses/vrMultiviewToSingleviewPostProcess.js'\nimport { UtilityLayerRenderer as BabylonjsCoreUtilityLayerRenderer } from '@babylonjs/core/Rendering/utilityLayerRenderer.js'\nimport { Scene as BabylonjsCoreScene } from '@babylonjs/core/scene.js'\nimport { XRSpaceWarpRenderTarget as BabylonjsCoreXRSpaceWarpRenderTarget } from '@babylonjs/core/XR/features/WebXRSpaceWarp.js'\nimport { WebXRCamera as BabylonjsCoreWebXRCamera } from '@babylonjs/core/XR/webXRCamera.js'\nimport { AdvancedDynamicTexture as BabylonjsGuiAdvancedDynamicTexture } from '@babylonjs/gui/2D/advancedDynamicTexture.js'\nimport { Button as BabylonjsGuiButton } from '@babylonjs/gui/2D/controls/button.js'\nimport { Checkbox as BabylonjsGuiCheckbox } from '@babylonjs/gui/2D/controls/checkbox.js'\nimport { ColorPicker as BabylonjsGuiColorPicker } from '@babylonjs/gui/2D/controls/colorpicker.js'\nimport { Container as BabylonjsGuiContainer } from '@babylonjs/gui/2D/controls/container.js'\nimport { Control as BabylonjsGuiControl } from '@babylonjs/gui/2D/controls/control.js'\nimport { DisplayGrid as BabylonjsGuiDisplayGrid } from '@babylonjs/gui/2D/controls/displayGrid.js'\nimport { Ellipse as BabylonjsGuiEllipse } from '@babylonjs/gui/2D/controls/ellipse.js'\nimport { FocusableButton as BabylonjsGuiFocusableButton } from '@babylonjs/gui/2D/controls/focusableButton.js'\nimport { Grid as BabylonjsGuiGrid } from '@babylonjs/gui/2D/controls/grid.js'\nimport { Image as BabylonjsGuiImage } from '@babylonjs/gui/2D/controls/image.js'\nimport { InputPassword as BabylonjsGuiInputPassword } from '@babylonjs/gui/2D/controls/inputPassword.js'\nimport { InputText as BabylonjsGuiInputText } from '@babylonjs/gui/2D/controls/inputText.js'\nimport { InputTextArea as BabylonjsGuiInputTextArea } from '@babylonjs/gui/2D/controls/inputTextArea.js'\nimport { Line as BabylonjsGuiLine } from '@babylonjs/gui/2D/controls/line.js'\nimport { MultiLine as BabylonjsGuiMultiLine } from '@babylonjs/gui/2D/controls/multiLine.js'\nimport { RadioButton as BabylonjsGuiRadioButton } from '@babylonjs/gui/2D/controls/radioButton.js'\nimport { Rectangle as BabylonjsGuiRectangle } from '@babylonjs/gui/2D/controls/rectangle.js'\nimport { ScrollViewer as BabylonjsGuiScrollViewer } from '@babylonjs/gui/2D/controls/scrollViewers/scrollViewer.js'\nimport { _ScrollViewerWindow as BabylonjsGui_ScrollViewerWindow } from '@babylonjs/gui/2D/controls/scrollViewers/scrollViewerWindow.js'\nimport { SelectionPanel as BabylonjsGuiSelectionPanel } from '@babylonjs/gui/2D/controls/selector.js'\nimport { BaseSlider as BabylonjsGuiBaseSlider } from '@babylonjs/gui/2D/controls/sliders/baseSlider.js'\nimport { ImageBasedSlider as BabylonjsGuiImageBasedSlider } from '@babylonjs/gui/2D/controls/sliders/imageBasedSlider.js'\nimport { ImageScrollBar as BabylonjsGuiImageScrollBar } from '@babylonjs/gui/2D/controls/sliders/imageScrollBar.js'\nimport { ScrollBar as BabylonjsGuiScrollBar } from '@babylonjs/gui/2D/controls/sliders/scrollBar.js'\nimport { Slider as BabylonjsGuiSlider } from '@babylonjs/gui/2D/controls/sliders/slider.js'\nimport { StackPanel as BabylonjsGuiStackPanel } from '@babylonjs/gui/2D/controls/stackPanel.js'\nimport { TextBlock as BabylonjsGuiTextBlock } from '@babylonjs/gui/2D/controls/textBlock.js'\nimport { ToggleButton as BabylonjsGuiToggleButton } from '@babylonjs/gui/2D/controls/toggleButton.js'\nimport { VirtualKeyboard as BabylonjsGuiVirtualKeyboard } from '@babylonjs/gui/2D/controls/virtualKeyboard.js'\nimport { DefaultBehavior as BabylonjsGuiDefaultBehavior } from '@babylonjs/gui/3D/behaviors/defaultBehavior.js'\nimport { AbstractButton3D as BabylonjsGuiAbstractButton3D } from '@babylonjs/gui/3D/controls/abstractButton3D.js'\nimport { Button3D as BabylonjsGuiButton3D } from '@babylonjs/gui/3D/controls/button3D.js'\nimport { Container3D as BabylonjsGuiContainer3D } from '@babylonjs/gui/3D/controls/container3D.js'\nimport { ContentDisplay3D as BabylonjsGuiContentDisplay3D } from '@babylonjs/gui/3D/controls/contentDisplay3D.js'\nimport { Control3D as BabylonjsGuiControl3D } from '@babylonjs/gui/3D/controls/control3D.js'\nimport { CylinderPanel as BabylonjsGuiCylinderPanel } from '@babylonjs/gui/3D/controls/cylinderPanel.js'\nimport { HandMenu as BabylonjsGuiHandMenu } from '@babylonjs/gui/3D/controls/handMenu.js'\nimport { HolographicBackplate as BabylonjsGuiHolographicBackplate } from '@babylonjs/gui/3D/controls/holographicBackplate.js'\nimport { HolographicButton as BabylonjsGuiHolographicButton } from '@babylonjs/gui/3D/controls/holographicButton.js'\nimport { HolographicSlate as BabylonjsGuiHolographicSlate } from '@babylonjs/gui/3D/controls/holographicSlate.js'\nimport { MeshButton3D as BabylonjsGuiMeshButton3D } from '@babylonjs/gui/3D/controls/meshButton3D.js'\nimport { NearMenu as BabylonjsGuiNearMenu } from '@babylonjs/gui/3D/controls/nearMenu.js'\nimport { PlanePanel as BabylonjsGuiPlanePanel } from '@babylonjs/gui/3D/controls/planePanel.js'\nimport { ScatterPanel as BabylonjsGuiScatterPanel } from '@babylonjs/gui/3D/controls/scatterPanel.js'\nimport { Slider3D as BabylonjsGuiSlider3D } from '@babylonjs/gui/3D/controls/slider3D.js'\nimport { SpherePanel as BabylonjsGuiSpherePanel } from '@babylonjs/gui/3D/controls/spherePanel.js'\nimport { StackPanel3D as BabylonjsGuiStackPanel3D } from '@babylonjs/gui/3D/controls/stackPanel3D.js'\nimport { TouchButton3D as BabylonjsGuiTouchButton3D } from '@babylonjs/gui/3D/controls/touchButton3D.js'\nimport { TouchHolographicButton as BabylonjsGuiTouchHolographicButton } from '@babylonjs/gui/3D/controls/touchHolographicButton.js'\nimport { TouchHolographicMenu as BabylonjsGuiTouchHolographicMenu } from '@babylonjs/gui/3D/controls/touchHolographicMenu.js'\nimport { TouchMeshButton3D as BabylonjsGuiTouchMeshButton3D } from '@babylonjs/gui/3D/controls/touchMeshButton3D.js'\nimport { VolumeBasedPanel as BabylonjsGuiVolumeBasedPanel } from '@babylonjs/gui/3D/controls/volumeBasedPanel.js'\nimport { SlateGizmo as BabylonjsGuiSlateGizmo } from '@babylonjs/gui/3D/gizmos/slateGizmo.js'\nimport { GUI3DManager as BabylonjsGuiGUI3DManager } from '@babylonjs/gui/3D/gui3DManager.js'\nimport { FluentMaterial as BabylonjsGuiFluentMaterial } from '@babylonjs/gui/3D/materials/fluent/fluentMaterial.js'\nimport { FluentBackplateMaterial as BabylonjsGuiFluentBackplateMaterial } from '@babylonjs/gui/3D/materials/fluentBackplate/fluentBackplateMaterial.js'\nimport { FluentButtonMaterial as BabylonjsGuiFluentButtonMaterial } from '@babylonjs/gui/3D/materials/fluentButton/fluentButtonMaterial.js'\nimport { HandleMaterial as BabylonjsGuiHandleMaterial } from '@babylonjs/gui/3D/materials/handle/handleMaterial.js'\nimport { MRDLBackglowMaterial as BabylonjsGuiMRDLBackglowMaterial } from '@babylonjs/gui/3D/materials/mrdl/mrdlBackglowMaterial.js'\nimport { MRDLBackplateMaterial as BabylonjsGuiMRDLBackplateMaterial } from '@babylonjs/gui/3D/materials/mrdl/mrdlBackplateMaterial.js'\nimport { MRDLFrontplateMaterial as BabylonjsGuiMRDLFrontplateMaterial } from '@babylonjs/gui/3D/materials/mrdl/mrdlFrontplateMaterial.js'\nimport { MRDLInnerquadMaterial as BabylonjsGuiMRDLInnerquadMaterial } from '@babylonjs/gui/3D/materials/mrdl/mrdlInnerquadMaterial.js'\nimport { MRDLSliderBarMaterial as BabylonjsGuiMRDLSliderBarMaterial } from '@babylonjs/gui/3D/materials/mrdl/mrdlSliderBarMaterial.js'\nimport { MRDLSliderThumbMaterial as BabylonjsGuiMRDLSliderThumbMaterial } from '@babylonjs/gui/3D/materials/mrdl/mrdlSliderThumbMaterial.js'\nimport { CreatedInstanceMetadata } from './CreatedInstance'\nimport { DynamicTerrain as ExtensionsDynamicTerrain } from './extensions/DynamicTerrain'\nimport {\n  FiberAbstractButton3DProps,\n  FiberAbstractMeshProps,\n  FiberAdvancedDynamicTextureProps,\n  FiberAnaglyphArcRotateCameraProps,\n  FiberAnaglyphFreeCameraProps,\n  FiberAnaglyphGamepadCameraProps,\n  FiberAnaglyphPostProcessProps,\n  FiberAnaglyphUniversalCameraProps,\n  FiberArcFollowCameraProps,\n  FiberArcRotateCameraProps,\n  FiberAttachToBoxBehaviorProps,\n  FiberAutoRotationBehaviorProps,\n  FiberAxisDragGizmoProps,\n  FiberAxisScaleGizmoProps,\n  FiberBackgroundMaterialProps,\n  FiberBaseSixDofDragBehaviorProps,\n  FiberBaseSliderProps,\n  FiberBaseTextureProps,\n  FiberBlackAndWhitePostProcessProps,\n  FiberBloomMergePostProcessProps,\n  FiberBlurPostProcessProps,\n  FiberBouncingBehaviorProps,\n  FiberBoundingBoxGizmoProps,\n  FiberButton3DProps,\n  FiberButtonProps,\n  FiberCameraGizmoProps,\n  FiberCameraProps,\n  FiberCascadedShadowGeneratorProps,\n  FiberCheckboxProps,\n  FiberChromaticAberrationPostProcessProps,\n  FiberCircleOfConfusionPostProcessProps,\n  FiberColorCorrectionPostProcessProps,\n  FiberColorGradingTextureProps,\n  FiberColorPickerProps,\n  FiberContainer3DProps,\n  FiberContainerProps,\n  FiberContentDisplay3DProps,\n  FiberControl3DProps,\n  FiberControlProps,\n  FiberConvolutionPostProcessProps,\n  FiberCubeTextureProps,\n  FiberCustomProceduralTextureProps,\n  FiberCylinderPanelProps,\n  FiberDefaultBehaviorProps,\n  FiberDefaultRenderingPipelineProps,\n  FiberDepthOfFieldBlurPostProcessProps,\n  FiberDepthOfFieldMergePostProcessProps,\n  FiberDetailMapConfigurationProps,\n  FiberDeviceOrientationCameraProps,\n  FiberDirectionalLightProps,\n  FiberDisplayGridProps,\n  FiberDisplayPassPostProcessProps,\n  FiberDynamicTerrainProps,\n  FiberDynamicTextureProps,\n  FiberEffectLayerProps,\n  FiberEllipseProps,\n  FiberEngineViewProps,\n  FiberEnvironmentHelperProps,\n  FiberEquiRectangularCubeTextureProps,\n  FiberExtractHighlightsPostProcessProps,\n  FiberFadeInOutBehaviorProps,\n  FiberFilterPostProcessProps,\n  FiberFluentBackplateMaterialProps,\n  FiberFluentButtonMaterialProps,\n  FiberFluentMaterialProps,\n  FiberFlyCameraProps,\n  FiberFocusableButtonProps,\n  FiberFollowBehaviorProps,\n  FiberFollowCameraProps,\n  FiberFramingBehaviorProps,\n  FiberFreeCameraProps,\n  FiberFxaaPostProcessProps,\n  FiberGamepadCameraProps,\n  FiberGizmoManagerProps,\n  FiberGizmoProps,\n  FiberGlowLayerProps,\n  FiberGoldbergMeshProps,\n  FiberGrainPostProcessProps,\n  FiberGreasedLineBaseMeshProps,\n  FiberGreasedLineMeshProps,\n  FiberGreasedLineRibbonMeshProps,\n  FiberGreasedLineSimpleMaterialProps,\n  FiberGridProps,\n  FiberGroundMeshProps,\n  FiberGUI3DManagerProps,\n  FiberHandConstraintBehaviorProps,\n  FiberHandleMaterialProps,\n  FiberHandMenuProps,\n  FiberHDRCubeTextureProps,\n  FiberHemisphericLightProps,\n  FiberHighlightLayerProps,\n  FiberHighlightsPostProcessProps,\n  FiberHolographicBackplateProps,\n  FiberHolographicButtonProps,\n  FiberHolographicSlateProps,\n  FiberHtmlElementTextureProps,\n  FiberImageBasedSliderProps,\n  FiberImageProcessingConfigurationProps,\n  FiberImageProcessingPostProcessProps,\n  FiberImageProps,\n  FiberImageScrollBarProps,\n  FiberInputPasswordProps,\n  FiberInputTextAreaProps,\n  FiberInputTextProps,\n  FiberInstancedLinesMeshProps,\n  FiberInstancedMeshProps,\n  FiberLayerProps,\n  FiberLensRenderingPipelineProps,\n  FiberLightGizmoProps,\n  FiberLightProps,\n  FiberLineProps,\n  FiberLinesMeshProps,\n  FiberMaterialPluginBaseProps,\n  FiberMaterialProps,\n  FiberMeshButton3DProps,\n  FiberMeshProps,\n  FiberMirrorTextureProps,\n  FiberMotionBlurPostProcessProps,\n  FiberMRDLBackglowMaterialProps,\n  FiberMRDLBackplateMaterialProps,\n  FiberMRDLFrontplateMaterialProps,\n  FiberMRDLInnerquadMaterialProps,\n  FiberMRDLSliderBarMaterialProps,\n  FiberMRDLSliderThumbMaterialProps,\n  FiberMultiLineProps,\n  FiberMultiMaterialProps,\n  FiberMultiPointerScaleBehaviorProps,\n  FiberMultiRenderTargetProps,\n  FiberMultiviewRenderTargetProps,\n  FiberNearMenuProps,\n  FiberNodeMaterialProps,\n  FiberNodeProps,\n  FiberNoiseProceduralTextureProps,\n  FiberOcclusionMaterialProps,\n  FiberPassCubePostProcessProps,\n  FiberPassPostProcessProps,\n  FiberPBRAnisotropicConfigurationProps,\n  FiberPBRBaseMaterialProps,\n  FiberPBRBaseSimpleMaterialProps,\n  FiberPBRBRDFConfigurationProps,\n  FiberPBRClearCoatConfigurationProps,\n  FiberPBRIridescenceConfigurationProps,\n  FiberPBRMaterialProps,\n  FiberPBRMetallicRoughnessMaterialProps,\n  FiberPBRSheenConfigurationProps,\n  FiberPBRSpecularGlossinessMaterialProps,\n  FiberPBRSubSurfaceConfigurationProps,\n  FiberPhysicsAggregateProps,\n  FiberPhysicsImpostorProps,\n  FiberPlaneDragGizmoProps,\n  FiberPlanePanelProps,\n  FiberPlaneRotationGizmoProps,\n  FiberPointerDragBehaviorProps,\n  FiberPointLightProps,\n  FiberPointsCloudSystemProps,\n  FiberPositionGizmoProps,\n  FiberPostProcessProps,\n  FiberPostProcessRenderPipelineProps,\n  FiberPrePassConfigurationProps,\n  FiberPrePassRenderTargetProps,\n  FiberProceduralTextureProps,\n  FiberPushMaterialProps,\n  FiberRadioButtonProps,\n  FiberRawCubeTextureProps,\n  FiberRawTexture2DArrayProps,\n  FiberRawTexture3DProps,\n  FiberRawTextureProps,\n  FiberRectangleProps,\n  FiberRefractionPostProcessProps,\n  FiberRefractionTextureProps,\n  FiberRenderTargetTextureProps,\n  FiberRotationGizmoProps,\n  FiberScaleGizmoProps,\n  FiberScatterPanelProps,\n  FiberSceneProps,\n  FiberScreenSpaceCurvaturePostProcessProps,\n  FiberScreenSpaceReflectionPostProcessProps,\n  FiberScrollBarProps,\n  FiberScrollViewerProps,\n  FiberSelectionPanelProps,\n  FiberShaderMaterialProps,\n  FiberShadowGeneratorProps,\n  FiberShadowLightProps,\n  FiberSharpenPostProcessProps,\n  FiberSixDofDragBehaviorProps,\n  FiberSlateGizmoProps,\n  FiberSlider3DProps,\n  FiberSliderProps,\n  FiberSpherePanelProps,\n  FiberSpotLightProps,\n  FiberSSAO2RenderingPipelineProps,\n  FiberSSAORenderingPipelineProps,\n  FiberSSRRenderingPipelineProps,\n  FiberStackPanel3DProps,\n  FiberStackPanelProps,\n  FiberStandardMaterialProps,\n  FiberStandardRenderingPipelineProps,\n  FiberStereoscopicArcRotateCameraProps,\n  FiberStereoscopicFreeCameraProps,\n  FiberStereoscopicGamepadCameraProps,\n  FiberStereoscopicInterlacePostProcessIProps,\n  FiberStereoscopicInterlacePostProcessProps,\n  FiberStereoscopicScreenUniversalCameraProps,\n  FiberStereoscopicUniversalCameraProps,\n  FiberSubSurfaceScatteringPostProcessProps,\n  FiberSurfaceMagnetismBehaviorProps,\n  FiberTargetCameraProps,\n  FiberTextBlockProps,\n  FiberTextureProps,\n  FiberThinRenderTargetTextureProps,\n  FiberThinTextureProps,\n  FiberToggleButtonProps,\n  FiberTonemapPostProcessProps,\n  FiberTouchButton3DProps,\n  FiberTouchCameraProps,\n  FiberTouchHolographicButtonProps,\n  FiberTouchHolographicMenuProps,\n  FiberTouchMeshButton3DProps,\n  FiberTrailMeshProps,\n  FiberTransformNodeProps,\n  FiberUniversalCameraProps,\n  FiberUtilityLayerRendererProps,\n  FiberVideoTextureProps,\n  FiberViewportProps,\n  FiberVirtualJoysticksCameraProps,\n  FiberVirtualKeyboardProps,\n  FiberVolumeBasedPanelProps,\n  FiberVolumetricLightScatteringPostProcessProps,\n  FiberVRDeviceOrientationArcRotateCameraProps,\n  FiberVRDeviceOrientationFreeCameraProps,\n  FiberVRDeviceOrientationGamepadCameraProps,\n  FiberVRDistortionCorrectionPostProcessProps,\n  FiberVRExperienceHelperProps,\n  FiberVRMultiviewToSingleviewPostProcessProps,\n  FiberWebXRCameraProps,\n  FiberXRSpaceWarpRenderTargetProps,\n  Fiber_ScrollViewerWindowProps,\n} from './generatedProps'\nimport {\n  checkColor3Diff,\n  checkColor4Diff,\n  checkControlDiff,\n  checkFresnelParametersDiff,\n  checkLambdaDiff,\n  checkMethodDiff,\n  checkNumericArrayDiff,\n  checkObjectDiff,\n  checkObservableDiff,\n  checkPrimitiveDiff,\n  checkQuaternionDiff,\n  checkTextureDiff,\n  checkVector3Diff,\n  HasPropsHandlers,\n  PropertyUpdate,\n  PropsHandler,\n} from './PropsHandler'\n\nexport class FiberNodePropsHandler implements PropsHandler<FiberNodeProps> {\n  getPropertyUpdates(oldProps: FiberNodeProps, newProps: FiberNodeProps): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreIAccessibilityTag' property (not coded) BabylonjsCoreNode.accessibilityTag.\n    // type: 'BabylonjsCoreAnimationPropertiesOverride' property (not coded) BabylonjsCoreNode.animationPropertiesOverride.\n    // type: 'BabylonjsCoreAnimation[]' property (not coded) BabylonjsCoreNode.animations.\n    checkPrimitiveDiff(\n      oldProps.doNotSerialize,\n      newProps.doNotSerialize,\n      'doNotSerialize',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.id, newProps.id, 'id', changedProps)\n    // type: 'BabylonjsCoreIInspectable[]' property (not coded) BabylonjsCoreNode.inspectableCustomProperties.\n    // type: 'any' property (not coded) BabylonjsCoreNode.metadata.\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onAccessibilityTagChangedObservable,\n      newProps.onAccessibilityTagChangedObservable,\n      'onAccessibilityTagChangedObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onDispose, newProps.onDispose, 'onDispose', changedProps)\n    checkObservableDiff(\n      oldProps.onDisposeObservable,\n      newProps.onDisposeObservable,\n      'onDisposeObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onReady, newProps.onReady, 'onReady', changedProps)\n    // type: 'BabylonjsCoreNode' property (not coded) BabylonjsCoreNode.parent.\n    // type: 'any' property (not coded) BabylonjsCoreNode.reservedDataStore.\n    checkPrimitiveDiff(oldProps.state, newProps.state, 'state', changedProps)\n    checkPrimitiveDiff(oldProps.uniqueId, newProps.uniqueId, 'uniqueId', changedProps)\n    checkMethodDiff(oldProps.addBehavior, newProps.addBehavior, 'addBehavior', changedProps)\n    checkMethodDiff(oldProps.setEnabled, newProps.setEnabled, 'setEnabled', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Node is the basic class for all scene objects (Mesh, Light, Camera.)\n *\n * This code has been generated\n */\nexport class FiberNode implements HasPropsHandlers<FiberNodeProps> {\n  private propsHandlers: PropsHandler<FiberNodeProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberNodePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberNodeProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberNodeProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Node',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    className: 'FiberNode',\n  }\n}\n\nexport class FiberTransformNodePropsHandler implements PropsHandler<FiberTransformNodeProps> {\n  getPropertyUpdates(\n    oldProps: FiberTransformNodeProps,\n    newProps: FiberTransformNodeProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.billboardMode,\n      newProps.billboardMode,\n      'billboardMode',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ignoreNonUniformScaling,\n      newProps.ignoreNonUniformScaling,\n      'ignoreNonUniformScaling',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.infiniteDistance,\n      newProps.infiniteDistance,\n      'infiniteDistance',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterWorldMatrixUpdateObservable,\n      newProps.onAfterWorldMatrixUpdateObservable,\n      'onAfterWorldMatrixUpdateObservable',\n      changedProps\n    )\n    checkVector3Diff(oldProps.position, newProps.position, 'position', true, changedProps)\n    checkPrimitiveDiff(\n      oldProps.preserveParentRotationForBillboard,\n      newProps.preserveParentRotationForBillboard,\n      'preserveParentRotationForBillboard',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reIntegrateRotationIntoRotationQuaternion,\n      newProps.reIntegrateRotationIntoRotationQuaternion,\n      'reIntegrateRotationIntoRotationQuaternion',\n      changedProps\n    )\n    checkVector3Diff(oldProps.rotation, newProps.rotation, 'rotation', true, changedProps)\n    checkQuaternionDiff(\n      oldProps.rotationQuaternion,\n      newProps.rotationQuaternion,\n      'rotationQuaternion',\n      true,\n      changedProps\n    )\n    checkVector3Diff(oldProps.scaling, newProps.scaling, 'scaling', true, changedProps)\n    checkPrimitiveDiff(\n      oldProps.scalingDeterminant,\n      newProps.scalingDeterminant,\n      'scalingDeterminant',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addRotation, newProps.addRotation, 'addRotation', changedProps)\n    checkMethodDiff(\n      oldProps.setAbsolutePosition,\n      newProps.setAbsolutePosition,\n      'setAbsolutePosition',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setDirection, newProps.setDirection, 'setDirection', changedProps)\n    checkMethodDiff(oldProps.setParent, newProps.setParent, 'setParent', changedProps)\n    checkMethodDiff(\n      oldProps.setPivotMatrix,\n      newProps.setPivotMatrix,\n      'setPivotMatrix',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setPivotPoint, newProps.setPivotPoint, 'setPivotPoint', changedProps)\n    checkMethodDiff(\n      oldProps.setPositionWithLocalVector,\n      newProps.setPositionWithLocalVector,\n      'setPositionWithLocalVector',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setPreTransformMatrix,\n      newProps.setPreTransformMatrix,\n      'setPreTransformMatrix',\n      changedProps\n    )\n    checkMethodDiff(oldProps.translate, newProps.translate, 'translate', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A TransformNode is an object that is not rendered but can be used as a center of transformation. This can decrease memory usage and increase rendering speed compared to using an empty mesh as a parent and is less complicated than using a pivot matrix.\n *\n * This code has been generated\n */\nexport class FiberTransformNode implements HasPropsHandlers<FiberNodeProps> {\n  private propsHandlers: PropsHandler<FiberNodeProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberTransformNodePropsHandler(), new FiberNodePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberNodeProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberNodeProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TransformNode',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'isPure',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    className: 'FiberTransformNode',\n  }\n}\n\nexport class FiberAbstractMeshPropsHandler implements PropsHandler<FiberAbstractMeshProps> {\n  getPropertyUpdates(\n    oldProps: FiberAbstractMeshProps,\n    newProps: FiberAbstractMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreAbstractActionManager' property (not coded) BabylonjsCoreAbstractMesh.actionManager.\n    checkPrimitiveDiff(oldProps.alphaIndex, newProps.alphaIndex, 'alphaIndex', changedProps)\n    checkPrimitiveDiff(\n      oldProps.alwaysSelectAsActiveMesh,\n      newProps.alwaysSelectAsActiveMesh,\n      'alwaysSelectAsActiveMesh',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.applyFog, newProps.applyFog, 'applyFog', changedProps)\n    // type: 'BabylonjsCoreIBakedVertexAnimationManager' property (not coded) BabylonjsCoreAbstractMesh.bakedVertexAnimationManager.\n    checkPrimitiveDiff(\n      oldProps.checkCollisions,\n      newProps.checkCollisions,\n      'checkCollisions',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.collisionGroup,\n      newProps.collisionGroup,\n      'collisionGroup',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.collisionMask,\n      newProps.collisionMask,\n      'collisionMask',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.collisionResponse,\n      newProps.collisionResponse,\n      'collisionResponse',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.collisionRetryCount,\n      newProps.collisionRetryCount,\n      'collisionRetryCount',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.computeBonesUsingShaders,\n      newProps.computeBonesUsingShaders,\n      'computeBonesUsingShaders',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cullingStrategy,\n      newProps.cullingStrategy,\n      'cullingStrategy',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.definedFacingForward,\n      newProps.definedFacingForward,\n      'definedFacingForward',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.doNotSyncBoundingInfo,\n      newProps.doNotSyncBoundingInfo,\n      'doNotSyncBoundingInfo',\n      changedProps\n    )\n    checkColor4Diff(oldProps.edgesColor, newProps.edgesColor, 'edgesColor', changedProps)\n    checkPrimitiveDiff(oldProps.edgesWidth, newProps.edgesWidth, 'edgesWidth', changedProps)\n    checkVector3Diff(oldProps.ellipsoid, newProps.ellipsoid, 'ellipsoid', false, changedProps)\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-x'],\n      newProps['ellipsoid-x'],\n      'ellipsoid.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-y'],\n      newProps['ellipsoid-y'],\n      'ellipsoid.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-z'],\n      newProps['ellipsoid-z'],\n      'ellipsoid.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.ellipsoidOffset,\n      newProps.ellipsoidOffset,\n      'ellipsoidOffset',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-x'],\n      newProps['ellipsoidOffset-x'],\n      'ellipsoidOffset.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-y'],\n      newProps['ellipsoidOffset-y'],\n      'ellipsoidOffset.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-z'],\n      newProps['ellipsoidOffset-z'],\n      'ellipsoidOffset.z',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.enableDistantPicking,\n      newProps.enableDistantPicking,\n      'enableDistantPicking',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.enablePointerMoveEvents,\n      newProps.enablePointerMoveEvents,\n      'enablePointerMoveEvents',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.facetDepthSortFrom,\n      newProps.facetDepthSortFrom,\n      'facetDepthSortFrom',\n      true,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.hasVertexAlpha,\n      newProps.hasVertexAlpha,\n      'hasVertexAlpha',\n      changedProps\n    )\n    checkObjectDiff(\n      oldProps.instancedBuffers,\n      newProps.instancedBuffers,\n      'instancedBuffers',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isBlocker, newProps.isBlocker, 'isBlocker', changedProps)\n    checkPrimitiveDiff(\n      oldProps.isNearGrabbable,\n      newProps.isNearGrabbable,\n      'isNearGrabbable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isNearPickable,\n      newProps.isNearPickable,\n      'isNearPickable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isPickable, newProps.isPickable, 'isPickable', changedProps)\n    checkPrimitiveDiff(oldProps.isVisible, newProps.isVisible, 'isVisible', changedProps)\n    checkPrimitiveDiff(oldProps.layerMask, newProps.layerMask, 'layerMask', changedProps)\n    // type: 'BabylonjsCoreMaterial' property (not coded) BabylonjsCoreAbstractMesh.material.\n    // type: 'BabylonjsCoreMorphTargetManager' property (not coded) BabylonjsCoreAbstractMesh.morphTargetManager.\n    checkPrimitiveDiff(\n      oldProps.mustDepthSortFacets,\n      newProps.mustDepthSortFacets,\n      'mustDepthSortFacets',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.numBoneInfluencers,\n      newProps.numBoneInfluencers,\n      'numBoneInfluencers',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onCollide, newProps.onCollide, 'onCollide', changedProps)\n    checkObservableDiff(\n      oldProps.onCollideObservable,\n      newProps.onCollideObservable,\n      'onCollideObservable',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.onCollisionPositionChange,\n      newProps.onCollisionPositionChange,\n      'onCollisionPositionChange',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onCollisionPositionChangeObservable,\n      newProps.onCollisionPositionChangeObservable,\n      'onCollisionPositionChangeObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onMaterialChangedObservable,\n      newProps.onMaterialChangedObservable,\n      'onMaterialChangedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onRebuildObservable,\n      newProps.onRebuildObservable,\n      'onRebuildObservable',\n      changedProps\n    )\n    checkColor3Diff(oldProps.outlineColor, newProps.outlineColor, 'outlineColor', changedProps)\n    checkPrimitiveDiff(oldProps.outlineWidth, newProps.outlineWidth, 'outlineWidth', changedProps)\n    checkPrimitiveDiff(oldProps.overlayAlpha, newProps.overlayAlpha, 'overlayAlpha', changedProps)\n    checkColor3Diff(oldProps.overlayColor, newProps.overlayColor, 'overlayColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.partitioningBBoxRatio,\n      newProps.partitioningBBoxRatio,\n      'partitioningBBoxRatio',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.partitioningSubdivisions,\n      newProps.partitioningSubdivisions,\n      'partitioningSubdivisions',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pointerOverDisableMeshTesting,\n      newProps.pointerOverDisableMeshTesting,\n      'pointerOverDisableMeshTesting',\n      changedProps\n    )\n    // type: 'BabylonjsCoreBoundingInfo' property (not coded) BabylonjsCoreAbstractMesh.rawBoundingInfo.\n    checkPrimitiveDiff(\n      oldProps.receiveShadows,\n      newProps.receiveShadows,\n      'receiveShadows',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderingGroupId,\n      newProps.renderingGroupId,\n      'renderingGroupId',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.showSubMeshesBoundingBox,\n      newProps.showSubMeshesBoundingBox,\n      'showSubMeshesBoundingBox',\n      changedProps\n    )\n    // type: 'BabylonjsCoreSkeleton' property (not coded) BabylonjsCoreAbstractMesh.skeleton.\n    // type: 'BabylonjsCoreSubMesh[]' property (not coded) BabylonjsCoreAbstractMesh.subMeshes.\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreAbstractMesh.surroundingMeshes.\n    checkPrimitiveDiff(\n      oldProps.useOctreeForCollisions,\n      newProps.useOctreeForCollisions,\n      'useOctreeForCollisions',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useOctreeForPicking,\n      newProps.useOctreeForPicking,\n      'useOctreeForPicking',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useOctreeForRenderingSelection,\n      newProps.useOctreeForRenderingSelection,\n      'useOctreeForRenderingSelection',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useVertexColors,\n      newProps.useVertexColors,\n      'useVertexColors',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.visibility, newProps.visibility, 'visibility', changedProps)\n    checkMethodDiff(oldProps.addChild, newProps.addChild, 'addChild', changedProps)\n    checkMethodDiff(\n      oldProps.enableEdgesRendering,\n      newProps.enableEdgesRendering,\n      'enableEdgesRendering',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setBoundingInfo,\n      newProps.setBoundingInfo,\n      'setBoundingInfo',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setIndices, newProps.setIndices, 'setIndices', changedProps)\n    checkMethodDiff(\n      oldProps.setMaterialForRenderPass,\n      newProps.setMaterialForRenderPass,\n      'setMaterialForRenderPass',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setVerticesData,\n      newProps.setVerticesData,\n      'setVerticesData',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to store all common mesh properties\n *\n * This code has been generated\n */\nexport class FiberAbstractMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AbstractMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberAbstractMesh',\n  }\n}\n\nexport class FiberInstancedMeshPropsHandler implements PropsHandler<FiberInstancedMeshProps> {\n  getPropertyUpdates(\n    oldProps: FiberInstancedMeshProps,\n    newProps: FiberInstancedMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreMaterial' property (not coded) BabylonjsCoreInstancedMesh.material.\n    checkPrimitiveDiff(\n      oldProps.receiveShadows,\n      newProps.receiveShadows,\n      'receiveShadows',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderingGroupId,\n      newProps.renderingGroupId,\n      'renderingGroupId',\n      changedProps\n    )\n    // type: 'BabylonjsCoreSkeleton' property (not coded) BabylonjsCoreInstancedMesh.skeleton.\n    checkPrimitiveDiff(oldProps.visibility, newProps.visibility, 'visibility', changedProps)\n    checkMethodDiff(oldProps.setIndices, newProps.setIndices, 'setIndices', changedProps)\n    checkMethodDiff(\n      oldProps.setVerticesData,\n      newProps.setVerticesData,\n      'setVerticesData',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Creates an instance based on a source mesh.\n *\n * This code has been generated\n */\nexport class FiberInstancedMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberInstancedMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'InstancedMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'source',\n        type: 'BabylonjsCoreMesh',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberInstancedMesh',\n  }\n}\n\nexport class FiberInstancedLinesMeshPropsHandler\n  implements PropsHandler<FiberInstancedLinesMeshProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberInstancedLinesMeshProps,\n    newProps: FiberInstancedLinesMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.intersectionThreshold,\n      newProps.intersectionThreshold,\n      'intersectionThreshold',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Creates an instance based on a source LinesMesh\n *\n * This code has been generated\n */\nexport class FiberInstancedLinesMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberInstancedLinesMeshPropsHandler(),\n      new FiberInstancedMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'InstancedLinesMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'source',\n        type: 'BabylonjsCoreLinesMesh',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberInstancedLinesMesh',\n  }\n}\n\nexport class FiberMeshPropsHandler implements PropsHandler<FiberMeshProps> {\n  getPropertyUpdates(oldProps: FiberMeshProps, newProps: FiberMeshProps): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.computeBonesUsingShaders,\n      newProps.computeBonesUsingShaders,\n      'computeBonesUsingShaders',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.delayLoadingFile,\n      newProps.delayLoadingFile,\n      'delayLoadingFile',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.delayLoadState,\n      newProps.delayLoadState,\n      'delayLoadState',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forcedInstanceCount,\n      newProps.forcedInstanceCount,\n      'forcedInstanceCount',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceWorldMatrixInstancedBufferUpdate,\n      newProps.forceWorldMatrixInstancedBufferUpdate,\n      'forceWorldMatrixInstancedBufferUpdate',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ignoreCameraMaxZ,\n      newProps.ignoreCameraMaxZ,\n      'ignoreCameraMaxZ',\n      changedProps\n    )\n    // type: 'BabylonjsCoreInstancedMesh[]' property (not coded) BabylonjsCoreMesh.instances.\n    checkPrimitiveDiff(oldProps.isUnIndexed, newProps.isUnIndexed, 'isUnIndexed', changedProps)\n    checkPrimitiveDiff(\n      oldProps.manualUpdateOfPreviousWorldMatrixInstancedBuffer,\n      newProps.manualUpdateOfPreviousWorldMatrixInstancedBuffer,\n      'manualUpdateOfPreviousWorldMatrixInstancedBuffer',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.manualUpdateOfWorldMatrixInstancedBuffer,\n      newProps.manualUpdateOfWorldMatrixInstancedBuffer,\n      'manualUpdateOfWorldMatrixInstancedBuffer',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onBeforeDraw, newProps.onBeforeDraw, 'onBeforeDraw', changedProps)\n    checkLambdaDiff(\n      oldProps.onLODLevelSelection,\n      newProps.onLODLevelSelection,\n      'onLODLevelSelection',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onMeshReadyObservable,\n      newProps.onMeshReadyObservable,\n      'onMeshReadyObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.overrideMaterialSideOrientation,\n      newProps.overrideMaterialSideOrientation,\n      'overrideMaterialSideOrientation',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.overridenInstanceCount,\n      newProps.overridenInstanceCount,\n      'overridenInstanceCount',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.overrideRenderingFillMode,\n      newProps.overrideRenderingFillMode,\n      'overrideRenderingFillMode',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useLODScreenCoverage,\n      newProps.useLODScreenCoverage,\n      'useLODScreenCoverage',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addInstance, newProps.addInstance, 'addInstance', changedProps)\n    checkMethodDiff(oldProps.addLODLevel, newProps.addLODLevel, 'addLODLevel', changedProps)\n    checkMethodDiff(oldProps.setIndices, newProps.setIndices, 'setIndices', changedProps)\n    checkMethodDiff(\n      oldProps.setMaterialById,\n      newProps.setMaterialById,\n      'setMaterialById',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setMaterialByID,\n      newProps.setMaterialByID,\n      'setMaterialByID',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setVerticesBuffer,\n      newProps.setVerticesBuffer,\n      'setVerticesBuffer',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setVerticesData,\n      newProps.setVerticesData,\n      'setVerticesData',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to represent renderable models\n *\n * This code has been generated\n */\nexport class FiberMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Mesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'parent',\n        type: 'BabylonjsCoreNode',\n        optional: true,\n      },\n      {\n        name: 'source',\n        type: 'BabylonjsCoreMesh',\n        optional: true,\n      },\n      {\n        name: 'doNotCloneChildren',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'clonePhysicsImpostor',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberMesh',\n  }\n}\n\nexport class FiberGoldbergMeshPropsHandler implements PropsHandler<FiberGoldbergMeshProps> {\n  getPropertyUpdates(\n    oldProps: FiberGoldbergMeshProps,\n    newProps: FiberGoldbergMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreGoldbergData' property (not coded) BabylonjsCoreGoldbergMesh.goldbergData.\n    checkMethodDiff(\n      oldProps.setGoldbergFaceColors,\n      newProps.setGoldbergFaceColors,\n      'setGoldbergFaceColors',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setGoldbergFaceUVs,\n      newProps.setGoldbergFaceUVs,\n      'setGoldbergFaceUVs',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Mesh for a Goldberg Polyhedron which is made from 12 pentagonal and the rest hexagonal faces\n *\n * This code has been generated\n */\nexport class FiberGoldbergMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGoldbergMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GoldbergMesh',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberGoldbergMesh',\n  }\n}\n\nexport class FiberLinesMeshPropsHandler implements PropsHandler<FiberLinesMeshProps> {\n  getPropertyUpdates(\n    oldProps: FiberLinesMeshProps,\n    newProps: FiberLinesMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.alpha, newProps.alpha, 'alpha', changedProps)\n    checkPrimitiveDiff(\n      oldProps.checkCollisions,\n      newProps.checkCollisions,\n      'checkCollisions',\n      changedProps\n    )\n    checkColor3Diff(oldProps.color, newProps.color, 'color', changedProps)\n    checkPrimitiveDiff(\n      oldProps.intersectionThreshold,\n      newProps.intersectionThreshold,\n      'intersectionThreshold',\n      changedProps\n    )\n    // type: 'BabylonjsCoreMaterial' property (not coded) BabylonjsCoreLinesMesh.material.\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Line mesh\n *\n * This code has been generated\n */\nexport class FiberLinesMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberLinesMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'LinesMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'parent',\n        type: 'BabylonjsCoreNode',\n        optional: true,\n      },\n      {\n        name: 'source',\n        type: 'BabylonjsCoreLinesMesh',\n        optional: true,\n      },\n      {\n        name: 'doNotCloneChildren',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'useVertexColor',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'useVertexAlpha',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'material',\n        type: 'BabylonjsCoreMaterial',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberLinesMesh',\n  }\n}\n\nexport class FiberGroundMeshPropsHandler implements PropsHandler<FiberGroundMeshProps> {\n  getPropertyUpdates(\n    oldProps: FiberGroundMeshProps,\n    newProps: FiberGroundMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.generateOctree,\n      newProps.generateOctree,\n      'generateOctree',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Mesh representing the ground\n *\n * This code has been generated\n */\nexport class FiberGroundMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGroundMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GroundMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberGroundMesh',\n  }\n}\n\nexport class FiberTrailMeshPropsHandler implements PropsHandler<FiberTrailMeshProps> {\n  getPropertyUpdates(\n    oldProps: FiberTrailMeshProps,\n    newProps: FiberTrailMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.diameter, newProps.diameter, 'diameter', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a trail following a mesh\n *\n * This code has been generated\n */\nexport class FiberTrailMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTrailMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TrailMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'generator',\n        type: 'BabylonjsCoreTransformNode',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'diameter',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'length',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'autoStart',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberTrailMesh',\n  }\n}\n\nexport class FiberGreasedLineBaseMeshPropsHandler\n  implements PropsHandler<FiberGreasedLineBaseMeshProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberGreasedLineBaseMeshProps,\n    newProps: FiberGreasedLineBaseMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkNumericArrayDiff(\n      oldProps.colorPointers,\n      newProps.colorPointers,\n      'colorPointers',\n      changedProps\n    )\n    checkNumericArrayDiff(oldProps.offsets, newProps.offsets, 'offsets', changedProps)\n    checkNumericArrayDiff(oldProps.widths, newProps.widths, 'widths', changedProps)\n    checkMethodDiff(oldProps.addPoints, newProps.addPoints, 'addPoints', changedProps)\n    checkMethodDiff(oldProps.setPoints, newProps.setPoints, 'setPoints', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * GreasedLineBaseMesh\n *\n * This code has been generated\n */\nexport class FiberGreasedLineBaseMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGreasedLineBaseMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GreasedLineBaseMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: '_options',\n        type: 'BabylonjsCoreGreasedLineMeshOptions',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberGreasedLineBaseMesh',\n  }\n}\n\nexport class FiberGreasedLineMeshPropsHandler implements PropsHandler<FiberGreasedLineMeshProps> {\n  getPropertyUpdates(\n    oldProps: FiberGreasedLineMeshProps,\n    newProps: FiberGreasedLineMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.intersectionThreshold,\n      newProps.intersectionThreshold,\n      'intersectionThreshold',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * GreasedLineMesh\n * Use the GreasedLineBuilder.CreateGreasedLine function to create an instance of this class.\n *\n * This code has been generated\n */\nexport class FiberGreasedLineMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGreasedLineMeshPropsHandler(),\n      new FiberGreasedLineBaseMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GreasedLineMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: '_options',\n        type: 'BabylonjsCoreGreasedLineMeshOptions',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberGreasedLineMesh',\n  }\n}\n\nexport class FiberGreasedLineRibbonMeshPropsHandler\n  implements PropsHandler<FiberGreasedLineRibbonMeshProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberGreasedLineRibbonMeshProps,\n    newProps: FiberGreasedLineRibbonMeshProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkNumericArrayDiff(oldProps.slopes, newProps.slopes, 'slopes', changedProps)\n    checkMethodDiff(oldProps.addPoints, newProps.addPoints, 'addPoints', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * GreasedLineRibbonMesh\n * Use the GreasedLineBuilder.CreateGreasedLine function to create an instance of this class.\n *\n * This code has been generated\n */\nexport class FiberGreasedLineRibbonMesh implements HasPropsHandlers<FiberAbstractMeshProps> {\n  private propsHandlers: PropsHandler<FiberAbstractMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGreasedLineRibbonMeshPropsHandler(),\n      new FiberGreasedLineBaseMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAbstractMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAbstractMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GreasedLineRibbonMesh',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: '_options',\n        type: 'BabylonjsCoreGreasedLineMeshOptions',\n        optional: false,\n      },\n      {\n        name: '_pathOptions',\n        type: '{ options: BabylonjsCoreGreasedLineMeshOptions; pathCount: number; }[]',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    acceptsMaterials: true,\n    isMesh: true,\n    className: 'FiberGreasedLineRibbonMesh',\n  }\n}\n\nexport class FiberCameraPropsHandler implements PropsHandler<FiberCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberCameraProps,\n    newProps: FiberCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.cameraRigMode,\n      newProps.cameraRigMode,\n      'cameraRigMode',\n      changedProps\n    )\n    // type: 'BabylonjsCoreRenderTargetTexture[]' property (not coded) BabylonjsCoreCamera.customRenderTargets.\n    checkPrimitiveDiff(oldProps.fov, newProps.fov, 'fov', changedProps)\n    checkPrimitiveDiff(oldProps.fovMode, newProps.fovMode, 'fovMode', changedProps)\n    checkPrimitiveDiff(oldProps.inertia, newProps.inertia, 'inertia', changedProps)\n    // type: 'BabylonjsCoreCameraInputsManager<BabylonjsCoreCamera>' property (not coded) BabylonjsCoreCamera.inputs.\n    checkPrimitiveDiff(\n      oldProps.interaxialDistance,\n      newProps.interaxialDistance,\n      'interaxialDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isIntermediate,\n      newProps.isIntermediate,\n      'isIntermediate',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isRigCamera, newProps.isRigCamera, 'isRigCamera', changedProps)\n    checkPrimitiveDiff(\n      oldProps.isStereoscopicSideBySide,\n      newProps.isStereoscopicSideBySide,\n      'isStereoscopicSideBySide',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.layerMask, newProps.layerMask, 'layerMask', changedProps)\n    checkPrimitiveDiff(oldProps.maxZ, newProps.maxZ, 'maxZ', changedProps)\n    checkPrimitiveDiff(oldProps.minZ, newProps.minZ, 'minZ', changedProps)\n    checkPrimitiveDiff(oldProps.mode, newProps.mode, 'mode', changedProps)\n    // type: 'BabylonjsCoreIObliqueParams' property (not coded) BabylonjsCoreCamera.oblique.\n    checkObservableDiff(\n      oldProps.onAfterCheckInputsObservable,\n      newProps.onAfterCheckInputsObservable,\n      'onAfterCheckInputsObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onProjectionMatrixChangedObservable,\n      newProps.onProjectionMatrixChangedObservable,\n      'onProjectionMatrixChangedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onRestoreStateObservable,\n      newProps.onRestoreStateObservable,\n      'onRestoreStateObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onViewMatrixChangedObservable,\n      newProps.onViewMatrixChangedObservable,\n      'onViewMatrixChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.orthoBottom, newProps.orthoBottom, 'orthoBottom', changedProps)\n    checkPrimitiveDiff(oldProps.orthoLeft, newProps.orthoLeft, 'orthoLeft', changedProps)\n    checkPrimitiveDiff(oldProps.orthoRight, newProps.orthoRight, 'orthoRight', changedProps)\n    checkPrimitiveDiff(oldProps.orthoTop, newProps.orthoTop, 'orthoTop', changedProps)\n    // type: 'BabylonjsCoreRenderTargetTexture' property (not coded) BabylonjsCoreCamera.outputRenderTarget.\n    checkVector3Diff(oldProps.position, newProps.position, 'position', true, changedProps)\n    checkPrimitiveDiff(\n      oldProps.projectionPlaneTilt,\n      newProps.projectionPlaneTilt,\n      'projectionPlaneTilt',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.renderPassId, newProps.renderPassId, 'renderPassId', changedProps)\n    // type: 'BabylonjsCoreCamera' property (not coded) BabylonjsCoreCamera.rigParent.\n    checkVector3Diff(oldProps.upVector, newProps.upVector, 'upVector', true, changedProps)\n    // type: 'BabylonjsCoreViewport' property (not coded) BabylonjsCoreCamera.viewport.\n    checkMethodDiff(\n      oldProps.setCameraRigMode,\n      newProps.setCameraRigMode,\n      'setCameraRigMode',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setCameraRigParameter,\n      newProps.setCameraRigParameter,\n      'setCameraRigParameter',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This is the base class of all the camera used in the application.\n *\n * This code has been generated\n */\nexport class FiberCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberCameraPropsHandler(), new FiberNodePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Camera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'setActiveOnSceneIfNoneActive',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberCamera',\n  }\n}\n\nexport class FiberTargetCameraPropsHandler implements PropsHandler<FiberTargetCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberTargetCameraProps,\n    newProps: FiberTargetCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkVector3Diff(\n      oldProps.cameraDirection,\n      newProps.cameraDirection,\n      'cameraDirection',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['cameraDirection-x'],\n      newProps['cameraDirection-x'],\n      'cameraDirection.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['cameraDirection-y'],\n      newProps['cameraDirection-y'],\n      'cameraDirection.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['cameraDirection-z'],\n      newProps['cameraDirection-z'],\n      'cameraDirection.z',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreTargetCamera.cameraRotation.\n    checkPrimitiveDiff(\n      oldProps.ignoreParentScaling,\n      newProps.ignoreParentScaling,\n      'ignoreParentScaling',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.inverseRotationSpeed,\n      newProps.inverseRotationSpeed,\n      'inverseRotationSpeed',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertRotation,\n      newProps.invertRotation,\n      'invertRotation',\n      changedProps\n    )\n    // type: 'any' property (not coded) BabylonjsCoreTargetCamera.lockedTarget.\n    checkPrimitiveDiff(\n      oldProps.noRotationConstraint,\n      newProps.noRotationConstraint,\n      'noRotationConstraint',\n      changedProps\n    )\n    checkVector3Diff(oldProps.rotation, newProps.rotation, 'rotation', false, changedProps)\n    checkPrimitiveDiff(oldProps['rotation-x'], newProps['rotation-x'], 'rotation.x', changedProps)\n    checkPrimitiveDiff(oldProps['rotation-y'], newProps['rotation-y'], 'rotation.y', changedProps)\n    checkPrimitiveDiff(oldProps['rotation-z'], newProps['rotation-z'], 'rotation.z', changedProps)\n    checkQuaternionDiff(\n      oldProps.rotationQuaternion,\n      newProps.rotationQuaternion,\n      'rotationQuaternion',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.speed, newProps.speed, 'speed', changedProps)\n    checkVector3Diff(oldProps.target, newProps.target, 'target', true, changedProps)\n    checkPrimitiveDiff(\n      oldProps.updateUpVectorFromRotation,\n      newProps.updateUpVectorFromRotation,\n      'updateUpVectorFromRotation',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setTarget, newProps.setTarget, 'setTarget', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A target camera takes a mesh or position as a target and continues to look at it while it moves.\n * This is the base of the follow, arc rotate cameras and Free camera\n *\n * This code has been generated\n */\nexport class FiberTargetCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TargetCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'setActiveOnSceneIfNoneActive',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberTargetCamera',\n  }\n}\n\nexport class FiberFreeCameraPropsHandler implements PropsHandler<FiberFreeCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberFreeCameraProps,\n    newProps: FiberFreeCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.angularSensibility,\n      newProps.angularSensibility,\n      'angularSensibility',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.applyGravity, newProps.applyGravity, 'applyGravity', changedProps)\n    checkPrimitiveDiff(\n      oldProps.checkCollisions,\n      newProps.checkCollisions,\n      'checkCollisions',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.collisionMask,\n      newProps.collisionMask,\n      'collisionMask',\n      changedProps\n    )\n    checkVector3Diff(oldProps.ellipsoid, newProps.ellipsoid, 'ellipsoid', false, changedProps)\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-x'],\n      newProps['ellipsoid-x'],\n      'ellipsoid.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-y'],\n      newProps['ellipsoid-y'],\n      'ellipsoid.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-z'],\n      newProps['ellipsoid-z'],\n      'ellipsoid.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.ellipsoidOffset,\n      newProps.ellipsoidOffset,\n      'ellipsoidOffset',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-x'],\n      newProps['ellipsoidOffset-x'],\n      'ellipsoidOffset.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-y'],\n      newProps['ellipsoidOffset-y'],\n      'ellipsoidOffset.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-z'],\n      newProps['ellipsoidOffset-z'],\n      'ellipsoidOffset.z',\n      changedProps\n    )\n    // type: 'BabylonjsCoreFreeCameraInputsManager' property (not coded) BabylonjsCoreFreeCamera.inputs.\n    checkNumericArrayDiff(oldProps.keysDown, newProps.keysDown, 'keysDown', changedProps)\n    checkNumericArrayDiff(\n      oldProps.keysDownward,\n      newProps.keysDownward,\n      'keysDownward',\n      changedProps\n    )\n    checkNumericArrayDiff(oldProps.keysLeft, newProps.keysLeft, 'keysLeft', changedProps)\n    checkNumericArrayDiff(oldProps.keysRight, newProps.keysRight, 'keysRight', changedProps)\n    checkNumericArrayDiff(\n      oldProps.keysRotateDown,\n      newProps.keysRotateDown,\n      'keysRotateDown',\n      changedProps\n    )\n    checkNumericArrayDiff(\n      oldProps.keysRotateLeft,\n      newProps.keysRotateLeft,\n      'keysRotateLeft',\n      changedProps\n    )\n    checkNumericArrayDiff(\n      oldProps.keysRotateRight,\n      newProps.keysRotateRight,\n      'keysRotateRight',\n      changedProps\n    )\n    checkNumericArrayDiff(\n      oldProps.keysRotateUp,\n      newProps.keysRotateUp,\n      'keysRotateUp',\n      changedProps\n    )\n    checkNumericArrayDiff(oldProps.keysUp, newProps.keysUp, 'keysUp', changedProps)\n    checkNumericArrayDiff(oldProps.keysUpward, newProps.keysUpward, 'keysUpward', changedProps)\n    checkPrimitiveDiff(\n      oldProps.needMoveForGravity,\n      newProps.needMoveForGravity,\n      'needMoveForGravity',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onCollide, newProps.onCollide, 'onCollide', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents a free type of camera. It can be useful in First Person Shooter game for instance.\n * Please consider using the new UniversalCamera instead as it adds more functionality like the gamepad.\n *\n * This code has been generated\n */\nexport class FiberFreeCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FreeCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'setActiveOnSceneIfNoneActive',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberFreeCamera',\n  }\n}\n\nexport class FiberWebXRCameraPropsHandler implements PropsHandler<FiberWebXRCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberWebXRCameraProps,\n    newProps: FiberWebXRCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.compensateOnFirstFrame,\n      newProps.compensateOnFirstFrame,\n      'compensateOnFirstFrame',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterCameraTeleport,\n      newProps.onAfterCameraTeleport,\n      'onAfterCameraTeleport',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeCameraTeleport,\n      newProps.onBeforeCameraTeleport,\n      'onBeforeCameraTeleport',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTrackingStateChanged,\n      newProps.onTrackingStateChanged,\n      'onTrackingStateChanged',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onXRCameraInitializedObservable,\n      newProps.onXRCameraInitializedObservable,\n      'onXRCameraInitializedObservable',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setTarget, newProps.setTarget, 'setTarget', changedProps)\n    checkMethodDiff(\n      oldProps.setTransformationFromNonVRCamera,\n      newProps.setTransformationFromNonVRCamera,\n      'setTransformationFromNonVRCamera',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * WebXR Camera which holds the views for the xrSession\n *\n * This code has been generated\n */\nexport class FiberWebXRCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberWebXRCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'WebXRCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: '_xrSessionManager',\n        type: 'BabylonjsCoreWebXRSessionManager',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberWebXRCamera',\n  }\n}\n\nexport class FiberTouchCameraPropsHandler implements PropsHandler<FiberTouchCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberTouchCameraProps,\n    newProps: FiberTouchCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.touchAngularSensibility,\n      newProps.touchAngularSensibility,\n      'touchAngularSensibility',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.touchMoveSensibility,\n      newProps.touchMoveSensibility,\n      'touchMoveSensibility',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents a FPS type of camera controlled by touch.\n * This is like a universal camera minus the Gamepad controls.\n *\n * This code has been generated\n */\nexport class FiberTouchCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTouchCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TouchCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberTouchCamera',\n  }\n}\n\nexport class FiberUniversalCameraPropsHandler implements PropsHandler<FiberUniversalCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberUniversalCameraProps,\n    newProps: FiberUniversalCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.gamepadAngularSensibility,\n      newProps.gamepadAngularSensibility,\n      'gamepadAngularSensibility',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.gamepadMoveSensibility,\n      newProps.gamepadMoveSensibility,\n      'gamepadMoveSensibility',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The Universal Camera is the one to choose for first person shooter type games, and works with all the keyboard, mouse, touch and gamepads. This replaces the earlier Free Camera,\n * which still works and will still be found in many Playgrounds.\n *\n * This code has been generated\n */\nexport class FiberUniversalCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberUniversalCameraPropsHandler(),\n      new FiberTouchCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'UniversalCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberUniversalCamera',\n  }\n}\n\nexport class FiberGamepadCameraPropsHandler implements PropsHandler<FiberGamepadCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberGamepadCameraProps,\n    newProps: FiberGamepadCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * This represents a FPS type of camera. This is only here for back compat purpose.\n * Please use the UniversalCamera instead as both are identical.\n *\n * This code has been generated\n */\nexport class FiberGamepadCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGamepadCameraPropsHandler(),\n      new FiberUniversalCameraPropsHandler(),\n      new FiberTouchCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GamepadCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberGamepadCamera',\n  }\n}\n\nexport class FiberAnaglyphGamepadCameraPropsHandler\n  implements PropsHandler<FiberAnaglyphGamepadCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberAnaglyphGamepadCameraProps,\n    newProps: FiberAnaglyphGamepadCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate anaglyphic rendering (based on GamepadCamera)\n *\n * This code has been generated\n */\nexport class FiberAnaglyphGamepadCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAnaglyphGamepadCameraPropsHandler(),\n      new FiberGamepadCameraPropsHandler(),\n      new FiberUniversalCameraPropsHandler(),\n      new FiberTouchCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AnaglyphGamepadCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'interaxialDistance',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberAnaglyphGamepadCamera',\n  }\n}\n\nexport class FiberStereoscopicGamepadCameraPropsHandler\n  implements PropsHandler<FiberStereoscopicGamepadCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberStereoscopicGamepadCameraProps,\n    newProps: FiberStereoscopicGamepadCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate stereoscopic rendering (based on GamepadCamera)\n *\n * This code has been generated\n */\nexport class FiberStereoscopicGamepadCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStereoscopicGamepadCameraPropsHandler(),\n      new FiberGamepadCameraPropsHandler(),\n      new FiberUniversalCameraPropsHandler(),\n      new FiberTouchCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StereoscopicGamepadCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'interaxialDistance',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'isStereoscopicSideBySide',\n        type: 'boolean',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberStereoscopicGamepadCamera',\n  }\n}\n\nexport class FiberAnaglyphUniversalCameraPropsHandler\n  implements PropsHandler<FiberAnaglyphUniversalCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberAnaglyphUniversalCameraProps,\n    newProps: FiberAnaglyphUniversalCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate anaglyphic rendering (based on UniversalCamera)\n *\n * This code has been generated\n */\nexport class FiberAnaglyphUniversalCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAnaglyphUniversalCameraPropsHandler(),\n      new FiberUniversalCameraPropsHandler(),\n      new FiberTouchCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AnaglyphUniversalCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'interaxialDistance',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberAnaglyphUniversalCamera',\n  }\n}\n\nexport class FiberStereoscopicUniversalCameraPropsHandler\n  implements PropsHandler<FiberStereoscopicUniversalCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberStereoscopicUniversalCameraProps,\n    newProps: FiberStereoscopicUniversalCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate stereoscopic rendering (based on UniversalCamera)\n *\n * This code has been generated\n */\nexport class FiberStereoscopicUniversalCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStereoscopicUniversalCameraPropsHandler(),\n      new FiberUniversalCameraPropsHandler(),\n      new FiberTouchCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StereoscopicUniversalCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'interaxialDistance',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'isStereoscopicSideBySide',\n        type: 'boolean',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberStereoscopicUniversalCamera',\n  }\n}\n\nexport class FiberStereoscopicScreenUniversalCameraPropsHandler\n  implements PropsHandler<FiberStereoscopicScreenUniversalCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberStereoscopicScreenUniversalCameraProps,\n    newProps: FiberStereoscopicScreenUniversalCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.distanceBetweenEyes,\n      newProps.distanceBetweenEyes,\n      'distanceBetweenEyes',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.distanceToProjectionPlane,\n      newProps.distanceToProjectionPlane,\n      'distanceToProjectionPlane',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Camera used to simulate stereoscopic rendering on real screens (based on UniversalCamera)\n *\n * This code has been generated\n */\nexport class FiberStereoscopicScreenUniversalCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStereoscopicScreenUniversalCameraPropsHandler(),\n      new FiberUniversalCameraPropsHandler(),\n      new FiberTouchCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StereoscopicScreenUniversalCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'distanceToProjectionPlane',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'distanceBetweenEyes',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberStereoscopicScreenUniversalCamera',\n  }\n}\n\nexport class FiberDeviceOrientationCameraPropsHandler\n  implements PropsHandler<FiberDeviceOrientationCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberDeviceOrientationCameraProps,\n    newProps: FiberDeviceOrientationCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.disablePointerInputWhenUsingDeviceOrientation,\n      newProps.disablePointerInputWhenUsingDeviceOrientation,\n      'disablePointerInputWhenUsingDeviceOrientation',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.enableHorizontalDragging,\n      newProps.enableHorizontalDragging,\n      'enableHorizontalDragging',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This is a camera specifically designed to react to device orientation events such as a modern mobile device\n * being tilted forward or back and left or right.\n *\n * This code has been generated\n */\nexport class FiberDeviceOrientationCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberDeviceOrientationCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DeviceOrientationCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberDeviceOrientationCamera',\n  }\n}\n\nexport class FiberVRDeviceOrientationFreeCameraPropsHandler\n  implements PropsHandler<FiberVRDeviceOrientationFreeCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberVRDeviceOrientationFreeCameraProps,\n    newProps: FiberVRDeviceOrientationFreeCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate VR rendering (based on FreeCamera)\n *\n * This code has been generated\n */\nexport class FiberVRDeviceOrientationFreeCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVRDeviceOrientationFreeCameraPropsHandler(),\n      new FiberDeviceOrientationCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VRDeviceOrientationFreeCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'compensateDistortion',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'vrCameraMetrics',\n        type: 'BabylonjsCoreVRCameraMetrics',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberVRDeviceOrientationFreeCamera',\n  }\n}\n\nexport class FiberVRDeviceOrientationGamepadCameraPropsHandler\n  implements PropsHandler<FiberVRDeviceOrientationGamepadCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberVRDeviceOrientationGamepadCameraProps,\n    newProps: FiberVRDeviceOrientationGamepadCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate VR rendering (based on VRDeviceOrientationFreeCamera)\n *\n * This code has been generated\n */\nexport class FiberVRDeviceOrientationGamepadCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVRDeviceOrientationGamepadCameraPropsHandler(),\n      new FiberVRDeviceOrientationFreeCameraPropsHandler(),\n      new FiberDeviceOrientationCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VRDeviceOrientationGamepadCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'compensateDistortion',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'vrCameraMetrics',\n        type: 'BabylonjsCoreVRCameraMetrics',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberVRDeviceOrientationGamepadCamera',\n  }\n}\n\nexport class FiberAnaglyphFreeCameraPropsHandler\n  implements PropsHandler<FiberAnaglyphFreeCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberAnaglyphFreeCameraProps,\n    newProps: FiberAnaglyphFreeCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate anaglyphic rendering (based on FreeCamera)\n *\n * This code has been generated\n */\nexport class FiberAnaglyphFreeCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAnaglyphFreeCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AnaglyphFreeCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'interaxialDistance',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberAnaglyphFreeCamera',\n  }\n}\n\nexport class FiberStereoscopicFreeCameraPropsHandler\n  implements PropsHandler<FiberStereoscopicFreeCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberStereoscopicFreeCameraProps,\n    newProps: FiberStereoscopicFreeCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate stereoscopic rendering (based on FreeCamera)\n *\n * This code has been generated\n */\nexport class FiberStereoscopicFreeCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStereoscopicFreeCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StereoscopicFreeCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'interaxialDistance',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'isStereoscopicSideBySide',\n        type: 'boolean',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberStereoscopicFreeCamera',\n  }\n}\n\nexport class FiberVirtualJoysticksCameraPropsHandler\n  implements PropsHandler<FiberVirtualJoysticksCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberVirtualJoysticksCameraProps,\n    newProps: FiberVirtualJoysticksCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * This represents a free type of camera. It can be useful in First Person Shooter game for instance.\n * It is identical to the Free Camera and simply adds by default a virtual joystick.\n * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\n *\n * This code has been generated\n */\nexport class FiberVirtualJoysticksCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVirtualJoysticksCameraPropsHandler(),\n      new FiberFreeCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VirtualJoysticksCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberVirtualJoysticksCamera',\n  }\n}\n\nexport class FiberArcRotateCameraPropsHandler implements PropsHandler<FiberArcRotateCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberArcRotateCameraProps,\n    newProps: FiberArcRotateCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.allowUpsideDown,\n      newProps.allowUpsideDown,\n      'allowUpsideDown',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.alpha, newProps.alpha, 'alpha', changedProps)\n    checkPrimitiveDiff(\n      oldProps.angularSensibilityX,\n      newProps.angularSensibilityX,\n      'angularSensibilityX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.angularSensibilityY,\n      newProps.angularSensibilityY,\n      'angularSensibilityY',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.beta, newProps.beta, 'beta', changedProps)\n    checkPrimitiveDiff(\n      oldProps.checkCollisions,\n      newProps.checkCollisions,\n      'checkCollisions',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.collisionRadius,\n      newProps.collisionRadius,\n      'collisionRadius',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['collisionRadius-x'],\n      newProps['collisionRadius-x'],\n      'collisionRadius.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['collisionRadius-y'],\n      newProps['collisionRadius-y'],\n      'collisionRadius.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['collisionRadius-z'],\n      newProps['collisionRadius-z'],\n      'collisionRadius.z',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.inertialAlphaOffset,\n      newProps.inertialAlphaOffset,\n      'inertialAlphaOffset',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.inertialBetaOffset,\n      newProps.inertialBetaOffset,\n      'inertialBetaOffset',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.inertialPanningX,\n      newProps.inertialPanningX,\n      'inertialPanningX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.inertialPanningY,\n      newProps.inertialPanningY,\n      'inertialPanningY',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.inertialRadiusOffset,\n      newProps.inertialRadiusOffset,\n      'inertialRadiusOffset',\n      changedProps\n    )\n    // type: 'BabylonjsCoreArcRotateCameraInputsManager' property (not coded) BabylonjsCoreArcRotateCamera.inputs.\n    checkNumericArrayDiff(oldProps.keysDown, newProps.keysDown, 'keysDown', changedProps)\n    checkNumericArrayDiff(oldProps.keysLeft, newProps.keysLeft, 'keysLeft', changedProps)\n    checkNumericArrayDiff(oldProps.keysRight, newProps.keysRight, 'keysRight', changedProps)\n    checkNumericArrayDiff(oldProps.keysUp, newProps.keysUp, 'keysUp', changedProps)\n    checkPrimitiveDiff(\n      oldProps.lowerAlphaLimit,\n      newProps.lowerAlphaLimit,\n      'lowerAlphaLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lowerBetaLimit,\n      newProps.lowerBetaLimit,\n      'lowerBetaLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lowerRadiusLimit,\n      newProps.lowerRadiusLimit,\n      'lowerRadiusLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.mapPanning, newProps.mapPanning, 'mapPanning', changedProps)\n    checkLambdaDiff(oldProps.onCollide, newProps.onCollide, 'onCollide', changedProps)\n    checkObservableDiff(\n      oldProps.onMeshTargetChangedObservable,\n      newProps.onMeshTargetChangedObservable,\n      'onMeshTargetChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.overrideCloneAlphaBetaRadius,\n      newProps.overrideCloneAlphaBetaRadius,\n      'overrideCloneAlphaBetaRadius',\n      changedProps\n    )\n    checkVector3Diff(oldProps.panningAxis, newProps.panningAxis, 'panningAxis', false, changedProps)\n    checkPrimitiveDiff(\n      oldProps['panningAxis-x'],\n      newProps['panningAxis-x'],\n      'panningAxis.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['panningAxis-y'],\n      newProps['panningAxis-y'],\n      'panningAxis.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['panningAxis-z'],\n      newProps['panningAxis-z'],\n      'panningAxis.z',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.panningDistanceLimit,\n      newProps.panningDistanceLimit,\n      'panningDistanceLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.panningInertia,\n      newProps.panningInertia,\n      'panningInertia',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.panningOriginTarget,\n      newProps.panningOriginTarget,\n      'panningOriginTarget',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['panningOriginTarget-x'],\n      newProps['panningOriginTarget-x'],\n      'panningOriginTarget.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['panningOriginTarget-y'],\n      newProps['panningOriginTarget-y'],\n      'panningOriginTarget.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['panningOriginTarget-z'],\n      newProps['panningOriginTarget-z'],\n      'panningOriginTarget.z',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.panningSensibility,\n      newProps.panningSensibility,\n      'panningSensibility',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pinchDeltaPercentage,\n      newProps.pinchDeltaPercentage,\n      'pinchDeltaPercentage',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pinchPrecision,\n      newProps.pinchPrecision,\n      'pinchPrecision',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pinchToPanMaxDistance,\n      newProps.pinchToPanMaxDistance,\n      'pinchToPanMaxDistance',\n      changedProps\n    )\n    checkVector3Diff(oldProps.position, newProps.position, 'position', true, changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkVector3Diff(oldProps.target, newProps.target, 'target', true, changedProps)\n    // type: 'BabylonjsCoreAbstractMesh' property (not coded) BabylonjsCoreArcRotateCamera.targetHost.\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreArcRotateCamera.targetScreenOffset.\n    checkPrimitiveDiff(\n      oldProps.upperAlphaLimit,\n      newProps.upperAlphaLimit,\n      'upperAlphaLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.upperBetaLimit,\n      newProps.upperBetaLimit,\n      'upperBetaLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.upperRadiusLimit,\n      newProps.upperRadiusLimit,\n      'upperRadiusLimit',\n      changedProps\n    )\n    checkVector3Diff(oldProps.upVector, newProps.upVector, 'upVector', true, changedProps)\n    checkPrimitiveDiff(\n      oldProps.useAutoRotationBehavior,\n      newProps.useAutoRotationBehavior,\n      'useAutoRotationBehavior',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useBouncingBehavior,\n      newProps.useBouncingBehavior,\n      'useBouncingBehavior',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useFramingBehavior,\n      newProps.useFramingBehavior,\n      'useFramingBehavior',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useInputToRestoreState,\n      newProps.useInputToRestoreState,\n      'useInputToRestoreState',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useNaturalPinchZoom,\n      newProps.useNaturalPinchZoom,\n      'useNaturalPinchZoom',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.wheelDeltaPercentage,\n      newProps.wheelDeltaPercentage,\n      'wheelDeltaPercentage',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.wheelPrecision,\n      newProps.wheelPrecision,\n      'wheelPrecision',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.zoomOnFactor, newProps.zoomOnFactor, 'zoomOnFactor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.zoomToMouseLocation,\n      newProps.zoomToMouseLocation,\n      'zoomToMouseLocation',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setPosition, newProps.setPosition, 'setPosition', changedProps)\n    checkMethodDiff(oldProps.setTarget, newProps.setTarget, 'setTarget', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents an orbital type of camera.\n *\n * This camera always points towards a given target position and can be rotated around that target with the target as the centre of rotation. It can be controlled with cursors and mouse, or with touch events.\n * Think of this camera as one orbiting its target position, or more imaginatively as a spy satellite orbiting the earth. Its position relative to the target (earth) can be set by three parameters, alpha (radians) the longitudinal rotation, beta (radians) the latitudinal rotation and radius the distance from the target position.\n *\n * This code has been generated\n */\nexport class FiberArcRotateCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberArcRotateCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ArcRotateCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'alpha',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'beta',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'radius',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'target',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'setActiveOnSceneIfNoneActive',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberArcRotateCamera',\n  }\n}\n\nexport class FiberAnaglyphArcRotateCameraPropsHandler\n  implements PropsHandler<FiberAnaglyphArcRotateCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberAnaglyphArcRotateCameraProps,\n    newProps: FiberAnaglyphArcRotateCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate anaglyphic rendering (based on ArcRotateCamera)\n *\n * This code has been generated\n */\nexport class FiberAnaglyphArcRotateCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAnaglyphArcRotateCameraPropsHandler(),\n      new FiberArcRotateCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AnaglyphArcRotateCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'alpha',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'beta',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'radius',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'target',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'interaxialDistance',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberAnaglyphArcRotateCamera',\n  }\n}\n\nexport class FiberStereoscopicArcRotateCameraPropsHandler\n  implements PropsHandler<FiberStereoscopicArcRotateCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberStereoscopicArcRotateCameraProps,\n    newProps: FiberStereoscopicArcRotateCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate stereoscopic rendering (based on ArcRotateCamera)\n *\n * This code has been generated\n */\nexport class FiberStereoscopicArcRotateCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStereoscopicArcRotateCameraPropsHandler(),\n      new FiberArcRotateCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StereoscopicArcRotateCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'alpha',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'beta',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'radius',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'target',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'interaxialDistance',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'isStereoscopicSideBySide',\n        type: 'boolean',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberStereoscopicArcRotateCamera',\n  }\n}\n\nexport class FiberVRDeviceOrientationArcRotateCameraPropsHandler\n  implements PropsHandler<FiberVRDeviceOrientationArcRotateCameraProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberVRDeviceOrientationArcRotateCameraProps,\n    newProps: FiberVRDeviceOrientationArcRotateCameraProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Camera used to simulate VR rendering (based on ArcRotateCamera)\n *\n * This code has been generated\n */\nexport class FiberVRDeviceOrientationArcRotateCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVRDeviceOrientationArcRotateCameraPropsHandler(),\n      new FiberArcRotateCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VRDeviceOrientationArcRotateCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'alpha',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'beta',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'radius',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'target',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'compensateDistortion',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'vrCameraMetrics',\n        type: 'BabylonjsCoreVRCameraMetrics',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberVRDeviceOrientationArcRotateCamera',\n  }\n}\n\nexport class FiberFlyCameraPropsHandler implements PropsHandler<FiberFlyCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberFlyCameraProps,\n    newProps: FiberFlyCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.angularSensibility,\n      newProps.angularSensibility,\n      'angularSensibility',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.applyGravity, newProps.applyGravity, 'applyGravity', changedProps)\n    checkPrimitiveDiff(oldProps.bankedTurn, newProps.bankedTurn, 'bankedTurn', changedProps)\n    checkPrimitiveDiff(\n      oldProps.bankedTurnLimit,\n      newProps.bankedTurnLimit,\n      'bankedTurnLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.bankedTurnMultiplier,\n      newProps.bankedTurnMultiplier,\n      'bankedTurnMultiplier',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.cameraDirection,\n      newProps.cameraDirection,\n      'cameraDirection',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['cameraDirection-x'],\n      newProps['cameraDirection-x'],\n      'cameraDirection.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['cameraDirection-y'],\n      newProps['cameraDirection-y'],\n      'cameraDirection.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['cameraDirection-z'],\n      newProps['cameraDirection-z'],\n      'cameraDirection.z',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.checkCollisions,\n      newProps.checkCollisions,\n      'checkCollisions',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.collisionMask,\n      newProps.collisionMask,\n      'collisionMask',\n      changedProps\n    )\n    checkVector3Diff(oldProps.ellipsoid, newProps.ellipsoid, 'ellipsoid', false, changedProps)\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-x'],\n      newProps['ellipsoid-x'],\n      'ellipsoid.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-y'],\n      newProps['ellipsoid-y'],\n      'ellipsoid.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoid-z'],\n      newProps['ellipsoid-z'],\n      'ellipsoid.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.ellipsoidOffset,\n      newProps.ellipsoidOffset,\n      'ellipsoidOffset',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-x'],\n      newProps['ellipsoidOffset-x'],\n      'ellipsoidOffset.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-y'],\n      newProps['ellipsoidOffset-y'],\n      'ellipsoidOffset.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['ellipsoidOffset-z'],\n      newProps['ellipsoidOffset-z'],\n      'ellipsoidOffset.z',\n      changedProps\n    )\n    // type: 'BabylonjsCoreFlyCameraInputsManager' property (not coded) BabylonjsCoreFlyCamera.inputs.\n    checkNumericArrayDiff(\n      oldProps.keysBackward,\n      newProps.keysBackward,\n      'keysBackward',\n      changedProps\n    )\n    checkNumericArrayDiff(oldProps.keysDown, newProps.keysDown, 'keysDown', changedProps)\n    checkNumericArrayDiff(oldProps.keysForward, newProps.keysForward, 'keysForward', changedProps)\n    checkNumericArrayDiff(oldProps.keysLeft, newProps.keysLeft, 'keysLeft', changedProps)\n    checkNumericArrayDiff(oldProps.keysRight, newProps.keysRight, 'keysRight', changedProps)\n    checkNumericArrayDiff(oldProps.keysUp, newProps.keysUp, 'keysUp', changedProps)\n    checkPrimitiveDiff(\n      oldProps.needMoveForGravity,\n      newProps.needMoveForGravity,\n      'needMoveForGravity',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onCollide, newProps.onCollide, 'onCollide', changedProps)\n    checkPrimitiveDiff(oldProps.rollCorrect, newProps.rollCorrect, 'rollCorrect', changedProps)\n    checkQuaternionDiff(\n      oldProps.rotationQuaternion,\n      newProps.rotationQuaternion,\n      'rotationQuaternion',\n      false,\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This is a flying camera, designed for 3D movement and rotation in all directions,\n * such as in a 3D Space Shooter or a Flight Simulator.\n *\n * This code has been generated\n */\nexport class FiberFlyCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFlyCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FlyCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'setActiveOnSceneIfNoneActive',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberFlyCamera',\n  }\n}\n\nexport class FiberFollowCameraPropsHandler implements PropsHandler<FiberFollowCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberFollowCameraProps,\n    newProps: FiberFollowCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.cameraAcceleration,\n      newProps.cameraAcceleration,\n      'cameraAcceleration',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.heightOffset, newProps.heightOffset, 'heightOffset', changedProps)\n    // type: 'BabylonjsCoreFollowCameraInputsManager' property (not coded) BabylonjsCoreFollowCamera.inputs.\n    // type: 'BabylonjsCoreAbstractMesh' property (not coded) BabylonjsCoreFollowCamera.lockedTarget.\n    checkPrimitiveDiff(\n      oldProps.lowerHeightOffsetLimit,\n      newProps.lowerHeightOffsetLimit,\n      'lowerHeightOffsetLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lowerRadiusLimit,\n      newProps.lowerRadiusLimit,\n      'lowerRadiusLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lowerRotationOffsetLimit,\n      newProps.lowerRotationOffsetLimit,\n      'lowerRotationOffsetLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.maxCameraSpeed,\n      newProps.maxCameraSpeed,\n      'maxCameraSpeed',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkPrimitiveDiff(\n      oldProps.rotationOffset,\n      newProps.rotationOffset,\n      'rotationOffset',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.upperHeightOffsetLimit,\n      newProps.upperHeightOffsetLimit,\n      'upperHeightOffsetLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.upperRadiusLimit,\n      newProps.upperRadiusLimit,\n      'upperRadiusLimit',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.upperRotationOffsetLimit,\n      newProps.upperRotationOffsetLimit,\n      'upperRotationOffsetLimit',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A follow camera takes a mesh as a target and follows it as it moves. Both a free camera version followCamera and\n * an arc rotate version arcFollowCamera are available.\n *\n * This code has been generated\n */\nexport class FiberFollowCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFollowCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FollowCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'lockedTarget',\n        type: 'BabylonjsCoreAbstractMesh',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberFollowCamera',\n  }\n}\n\nexport class FiberArcFollowCameraPropsHandler implements PropsHandler<FiberArcFollowCameraProps> {\n  getPropertyUpdates(\n    oldProps: FiberArcFollowCameraProps,\n    newProps: FiberArcFollowCameraProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.alpha, newProps.alpha, 'alpha', changedProps)\n    checkPrimitiveDiff(oldProps.beta, newProps.beta, 'beta', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkMethodDiff(oldProps.setMeshTarget, newProps.setMeshTarget, 'setMeshTarget', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Arc Rotate version of the follow camera.\n * It still follows a Defined mesh but in an Arc Rotate Camera fashion.\n *\n * This code has been generated\n */\nexport class FiberArcFollowCamera implements HasPropsHandlers<FiberCameraProps> {\n  public readonly isTargetable = true\n  private propsHandlers: PropsHandler<FiberCameraProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberArcFollowCameraPropsHandler(),\n      new FiberTargetCameraPropsHandler(),\n      new FiberCameraPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCameraProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCameraProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ArcFollowCamera',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'alpha',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'beta',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'radius',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'target',\n        type: 'BabylonjsCoreAbstractMesh',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isCamera: true,\n    isNode: true,\n    className: 'FiberArcFollowCamera',\n  }\n}\n\n/**\n * Creates a box mesh\n * * The parameter `size` sets the size (float) of each box side (default 1)\n * * You can set some different box dimensions by using the parameters `width`, `height` and `depth` (all by default have the same value of `size`)\n * * You can set different colors and different images to each box side by using the parameters `faceColors` (an array of 6 Color3 elements) and `faceUV` (an array of 6 Vector4 elements)\n * * Please read this tutorial : https://doc.babylonjs.com/features/featuresDeepDive/materials/using/texturePerBoxFace\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberBox implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateBox',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'size',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'width',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'height',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'depth',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'faceUV',\n            type: 'BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'faceColors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'wrap',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'topBaseAt',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'bottomBaseAt',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberBox',\n  }\n}\n\n/**\n * Creates a tiled box mesh\n *\n * This code has been generated\n */\nexport class FiberTiledBox implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateTiledBox',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'pattern',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'width',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'height',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'depth',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tileSize',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tileWidth',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tileHeight',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'alignHorizontal',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'alignVertical',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'faceUV',\n            type: 'BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'faceColors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberTiledBox',\n  }\n}\n\n/**\n * Creates a sphere mesh\n * * The parameter `diameter` sets the diameter size (float) of the sphere (default 1)\n * * You can set some different sphere dimensions, for instance to build an ellipsoid, by using the parameters `diameterX`, `diameterY` and `diameterZ` (all by default have the same value of `diameter`)\n * * The parameter `segments` sets the sphere number of horizontal stripes (positive integer, default 32)\n * * You can create an unclosed sphere with the parameter `arc` (positive float, default 1), valued between 0 and 1, what is the ratio of the circumference (latitude) : 2 x PI x ratio\n * * You can create an unclosed sphere on its height with the parameter `slice` (positive float, default1), valued between 0 and 1, what is the height ratio (longitude)\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberSphere implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateSphere',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'segments',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'diameter',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'diameterX',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'diameterY',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'diameterZ',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'arc',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'slice',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberSphere',\n  }\n}\n\n/**\n * Creates a plane polygonal mesh.  By default, this is a disc\n * * The parameter `radius` sets the radius size (float) of the polygon (default 0.5)\n * * The parameter `tessellation` sets the number of polygon sides (positive integer, default 64). So a tessellation valued to 3 will build a triangle, to 4 a square, etc\n * * You can create an unclosed polygon with the parameter `arc` (positive float, default 1), valued between 0 and 1, what is the ratio of the circumference : 2 x PI x ratio\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberDisc implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateDisc',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'radius',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tessellation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'arc',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberDisc',\n  }\n}\n\n/**\n * Creates a sphere based upon an icosahedron with 20 triangular faces which can be subdivided\n * * The parameter `radius` sets the radius size (float) of the icosphere (default 1)\n * * You can set some different icosphere dimensions, for instance to build an ellipsoid, by using the parameters `radiusX`, `radiusY` and `radiusZ` (all by default have the same value of `radius`)\n * * The parameter `subdivisions` sets the number of subdivisions (positive integer, default 4). The more subdivisions, the more faces on the icosphere whatever its size\n * * The parameter `flat` (boolean, default true) gives each side its own normals. Set it to false to get a smooth continuous light reflection on the surface\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberIcoSphere implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateIcoSphere',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'radius',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'radiusX',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'radiusY',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'radiusZ',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'flat',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'subdivisions',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberIcoSphere',\n  }\n}\n\n/**\n * Creates a ribbon mesh. The ribbon is a parametric shape.  It has no predefined shape. Its final shape will depend on the input parameters\n * * The parameter `pathArray` is a required array of paths, what are each an array of successive Vector3. The pathArray parameter depicts the ribbon geometry\n * * The parameter `closeArray` (boolean, default false) creates a seam between the first and the last paths of the path array\n * * The parameter `closePath` (boolean, default false) creates a seam between the first and the last points of each path of the path array\n * * The parameter `offset` (positive integer, default : rounded half size of the pathArray length), is taken in account only if the `pathArray` is containing a single path\n * * It's the offset to join the points from the same path. Ex : offset = 10 means the point 1 is joined to the point 11\n * * The optional parameter `instance` is an instance of an existing Ribbon object to be updated with the passed `pathArray` parameter : https://doc.babylonjs.com/features/featuresDeepDive/mesh/dynamicMeshMorph#ribbon\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The optional parameter `invertUV` (boolean, default false) swaps in the geometry the U and V coordinates to apply a texture\n * * The parameter `uvs` is an optional flat array of `Vector2` to update/set each ribbon vertex with its own custom UV values instead of the computed ones\n * * The parameters `colors` is an optional flat array of `Color4` to set/update each ribbon vertex with its own custom color values\n * * Note that if you use the parameters `uvs` or `colors`, the passed arrays must be populated with the right number of elements, it is to say the number of ribbon vertices. Remember that if you set `closePath` to `true`, there's one extra vertex per path in the geometry\n * * Moreover, you can use the parameter `color` with `instance` (to update the ribbon), only if you previously used it at creation time\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberRibbon implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateRibbon',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'pathArray',\n            type: 'BabylonjsCoreVector3[][]',\n            optional: false,\n          },\n          {\n            name: 'closeArray',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'closePath',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'offset',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'instance',\n            type: 'BabylonjsCoreMesh',\n            optional: true,\n          },\n          {\n            name: 'invertUV',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'uvs',\n            type: 'BabylonjsCoreVector2[]',\n            optional: true,\n          },\n          {\n            name: 'colors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberRibbon',\n  }\n}\n\n/**\n * Creates a cylinder or a cone mesh\n * * The parameter `height` sets the height size (float) of the cylinder/cone (float, default 2).\n * * The parameter `diameter` sets the diameter of the top and bottom cap at once (float, default 1).\n * * The parameters `diameterTop` and `diameterBottom` overwrite the parameter `diameter` and set respectively the top cap and bottom cap diameter (floats, default 1). The parameter \"diameterBottom\" can't be zero.\n * * The parameter `tessellation` sets the number of cylinder sides (positive integer, default 24). Set it to 3 to get a prism for instance.\n * * The parameter `subdivisions` sets the number of rings along the cylinder height (positive integer, default 1).\n * * The parameter `hasRings` (boolean, default false) makes the subdivisions independent from each other, so they become different faces.\n * * The parameter `enclose`  (boolean, default false) adds two extra faces per subdivision to a sliced cylinder to close it around its height axis.\n * * The parameter `cap` sets the way the cylinder is capped. Possible values : BABYLON.Mesh.NO_CAP, BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL (default).\n * * The parameter `arc` (float, default 1) is the ratio (max 1) to apply to the circumference to slice the cylinder.\n * * You can set different colors and different images to each box side by using the parameters `faceColors` (an array of n Color3 elements) and `faceUV` (an array of n Vector4 elements).\n * * The value of n is the number of cylinder faces. If the cylinder has only 1 subdivisions, n equals : top face + cylinder surface + bottom face = 3\n * * Now, if the cylinder has 5 independent subdivisions (hasRings = true), n equals : top face + 5 stripe surfaces + bottom face = 2 + 5 = 7\n * * Finally, if the cylinder has 5 independent subdivisions and is enclose, n equals : top face + 5 x (stripe surface + 2 closing faces) + bottom face = 2 + 5 * 3 = 17\n * * Each array (color or UVs) is always ordered the same way : the first element is the bottom cap, the last element is the top cap. The other elements are each a ring surface.\n * * If `enclose` is false, a ring surface is one element.\n * * If `enclose` is true, a ring surface is 3 successive elements in the array : the tubular surface, then the two closing faces.\n * * Example how to set colors and textures on a sliced cylinder : https://www.html5gamedevs.com/topic/17945-creating-a-closed-slice-of-a-cylinder/#comment-106379\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created.\n *\n * This code has been generated\n */\nexport class FiberCylinder implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateCylinder',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'height',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'diameterTop',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'diameterBottom',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'diameter',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tessellation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'subdivisions',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'arc',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'faceColors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'faceUV',\n            type: 'BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'hasRings',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'enclose',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'cap',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberCylinder',\n  }\n}\n\n/**\n * Creates a torus mesh\n * * The parameter `diameter` sets the diameter size (float) of the torus (default 1)\n * * The parameter `thickness` sets the diameter size of the tube of the torus (float, default 0.5)\n * * The parameter `tessellation` sets the number of torus sides (positive integer, default 16)\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created.\n *\n * This code has been generated\n */\nexport class FiberTorus implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateTorus',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'diameter',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'thickness',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tessellation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberTorus',\n  }\n}\n\n/**\n * Creates a torus knot mesh\n * * The parameter `radius` sets the global radius size (float) of the torus knot (default 2)\n * * The parameter `radialSegments` sets the number of sides on each tube segments (positive integer, default 32)\n * * The parameter `tubularSegments` sets the number of tubes to decompose the knot into (positive integer, default 32)\n * * The parameters `p` and `q` are the number of windings on each axis (positive integers, default 2 and 3)\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created.\n *\n * This code has been generated\n */\nexport class FiberTorusKnot implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateTorusKnot',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'radius',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tube',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'radialSegments',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tubularSegments',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'p',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'q',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberTorusKnot',\n  }\n}\n\n/**\n * Creates a line system mesh. A line system is a pool of many lines gathered in a single mesh\n * * A line system mesh is considered as a parametric shape since it has no predefined original shape. Its shape is determined by the passed array of lines as an input parameter\n * * Like every other parametric shape, it is dynamically updatable by passing an existing instance of LineSystem to this static function\n * * The parameter `lines` is an array of lines, each line being an array of successive Vector3\n * * The optional parameter `instance` is an instance of an existing LineSystem object to be updated with the passed `lines` parameter\n * * The optional parameter `colors` is an array of line colors, each line colors being an array of successive Color4, one per line point\n * * The optional parameter `useVertexAlpha` is to be set to `false` (default `true`) when you don't need the alpha blending (faster)\n * * The optional parameter `material` is the material to use to draw the lines if provided. If not, a default material will be created\n * * Updating a simple Line mesh, you just need to update every line in the `lines` array : https://doc.babylonjs.com/features/featuresDeepDive/mesh/dynamicMeshMorph#lines-and-dashedlines\n * * When updating an instance, remember that only line point positions can change, not the number of points, neither the number of lines\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberLineSystem implements HasPropsHandlers<FiberLinesMeshProps> {\n  private propsHandlers: PropsHandler<FiberLinesMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberLinesMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLinesMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLinesMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateLineSystem',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'lines',\n            type: 'BabylonjsCoreVector3[][]',\n            optional: false,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'instance',\n            type: 'BabylonjsCoreLinesMesh',\n            optional: true,\n          },\n          {\n            name: 'colors',\n            type: 'BabylonjsCoreColor4[][]',\n            optional: true,\n          },\n          {\n            name: 'useVertexAlpha',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'material',\n            type: 'BabylonjsCoreMaterial',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberLineSystem',\n  }\n}\n\n/**\n * Creates a line mesh\n * A line mesh is considered as a parametric shape since it has no predefined original shape. Its shape is determined by the passed array of points as an input parameter\n * * Like every other parametric shape, it is dynamically updatable by passing an existing instance of LineMesh to this static function\n * * The parameter `points` is an array successive Vector3\n * * The optional parameter `instance` is an instance of an existing LineMesh object to be updated with the passed `points` parameter : https://doc.babylonjs.com/features/featuresDeepDive/mesh/dynamicMeshMorph#lines-and-dashedlines\n * * The optional parameter `colors` is an array of successive Color4, one per line point\n * * The optional parameter `useVertexAlpha` is to be set to `false` (default `true`) when you don't need alpha blending (faster)\n * * The optional parameter `material` is the material to use to draw the lines if provided. If not, a default material will be created\n * * When updating an instance, remember that only point positions can change, not the number of points\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberLines implements HasPropsHandlers<FiberLinesMeshProps> {\n  private propsHandlers: PropsHandler<FiberLinesMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberLinesMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLinesMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLinesMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateLines',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'points',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'instance',\n            type: 'BabylonjsCoreLinesMesh',\n            optional: true,\n          },\n          {\n            name: 'colors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'useVertexAlpha',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'material',\n            type: 'BabylonjsCoreMaterial',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberLines',\n  }\n}\n\n/**\n * Creates a dashed line mesh\n * * A dashed line mesh is considered as a parametric shape since it has no predefined original shape. Its shape is determined by the passed array of points as an input parameter\n * * Like every other parametric shape, it is dynamically updatable by passing an existing instance of LineMesh to this static function\n * * The parameter `points` is an array successive Vector3\n * * The parameter `dashNb` is the intended total number of dashes (positive integer, default 200)\n * * The parameter `dashSize` is the size of the dashes relatively the dash number (positive float, default 3)\n * * The parameter `gapSize` is the size of the gap between two successive dashes relatively the dash number (positive float, default 1)\n * * The optional parameter `instance` is an instance of an existing LineMesh object to be updated with the passed `points` parameter : https://doc.babylonjs.com/features/featuresDeepDive/mesh/dynamicMeshMorph#lines-and-dashedlines\n * * The optional parameter `useVertexAlpha` is to be set to `false` (default `true`) when you don't need the alpha blending (faster)\n * * The optional parameter `material` is the material to use to draw the lines if provided. If not, a default material will be created\n * * When updating an instance, remember that only point positions can change, not the number of points\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberDashedLines implements HasPropsHandlers<FiberLinesMeshProps> {\n  private propsHandlers: PropsHandler<FiberLinesMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberLinesMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLinesMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLinesMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateDashedLines',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'points',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'dashSize',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'gapSize',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'dashNb',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'instance',\n            type: 'BabylonjsCoreLinesMesh',\n            optional: true,\n          },\n          {\n            name: 'useVertexAlpha',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'material',\n            type: 'BabylonjsCoreMaterial',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberDashedLines',\n  }\n}\n\n/**\n * Creates an extruded shape mesh. The extrusion is a parametric shape. It has no predefined shape. Its final shape will depend on the input parameters.\n * * The parameter `shape` is a required array of successive Vector3. This array depicts the shape to be extruded in its local space : the shape must be designed in the xOy plane and will be extruded along the Z axis.\n * * The parameter `path` is a required array of successive Vector3. This is the axis curve the shape is extruded along.\n * * The parameter `rotation` (float, default 0 radians) is the angle value to rotate the shape each step (each path point), from the former step (so rotation added each step) along the curve.\n * * The parameter `scale` (float, default 1) is the value to scale the shape.\n * * The parameter `closeShape` (boolean, default false) closes the shape when true, since v5.0.0.\n * * The parameter `closePath` (boolean, default false) closes the path when true and no caps, since v5.0.0.\n * * The parameter `cap` sets the way the extruded shape is capped. Possible values : BABYLON.Mesh.NO_CAP (default), BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL\n * * The optional parameter `instance` is an instance of an existing ExtrudedShape object to be updated with the passed `shape`, `path`, `scale` or `rotation` parameters : https://doc.babylonjs.com/features/featuresDeepDive/mesh/dynamicMeshMorph#extruded-shape\n * * Remember you can only change the shape or path point positions, not their number when updating an extruded shape.\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The optional parameter `invertUV` (boolean, default false) swaps in the geometry the U and V coordinates to apply a texture.\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created.\n * * The optional parameter `firstNormal` (Vector3) defines the direction of the first normal of the supplied path. Consider using this for any path that is straight, and particular for paths in the xy plane.\n * * The optional `adjustFrame` (boolean, default false) will cause the internally generated Path3D tangents, normals, and binormals to be adjusted so that a) they are always well-defined, and b) they do not reverse from one path point to the next. This prevents the extruded shape from being flipped and/or rotated with resulting mesh self-intersections. This is primarily useful for straight paths that can reverse direction.\n *\n * This code has been generated\n */\nexport class FiberExtrudeShape implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'ExtrudeShape',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'shape',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'path',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'scale',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'rotation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'closeShape',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'closePath',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'cap',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'instance',\n            type: 'BabylonjsCoreMesh',\n            optional: true,\n          },\n          {\n            name: 'invertUV',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'firstNormal',\n            type: 'BabylonjsCoreVector3',\n            optional: true,\n          },\n          {\n            name: 'adjustFrame',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberExtrudeShape',\n  }\n}\n\n/**\n * Creates an custom extruded shape mesh.\n * The custom extrusion is a parametric shape. It has no predefined shape. Its final shape will depend on the input parameters.\n * * The parameter `shape` is a required array of successive Vector3. This array depicts the shape to be extruded in its local space : the shape must be designed in the xOy plane and will be extruded along the Z axis.\n * * The parameter `path` is a required array of successive Vector3. This is the axis curve the shape is extruded along.\n * * The parameter `rotationFunction` (JS function) is a custom Javascript function called on each path point. This function is passed the position i of the point in the path and the distance of this point from the beginning of the path\n * * It must returns a float value that will be the rotation in radians applied to the shape on each path point.\n * * The parameter `scaleFunction` (JS function) is a custom Javascript function called on each path point. This function is passed the position i of the point in the path and the distance of this point from the beginning of the path\n * * It must returns a float value that will be the scale value applied to the shape on each path point\n * * The parameter `closeShape` (boolean, default false) closes the shape when true, since v5.0.0.\n * * The parameter `closePath` (boolean, default false) closes the path when true and no caps, since v5.0.0.\n * * The parameter `ribbonClosePath` (boolean, default false) forces the extrusion underlying ribbon to close all the paths in its `pathArray` - depreciated in favor of closeShape\n * * The parameter `ribbonCloseArray` (boolean, default false) forces the extrusion underlying ribbon to close its `pathArray` - depreciated in favor of closePath\n * * The parameter `cap` sets the way the extruded shape is capped. Possible values : BABYLON.Mesh.NO_CAP (default), BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL\n * * The optional parameter `instance` is an instance of an existing ExtrudedShape object to be updated with the passed `shape`, `path`, `scale` or `rotation` parameters : https://doc.babylonjs.com/features/featuresDeepDive/mesh/dynamicMeshMorph#extruded-shape\n * * Remember you can only change the shape or path point positions, not their number when updating an extruded shape\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The optional parameter `invertUV` (boolean, default false) swaps in the geometry the U and V coordinates to apply a texture\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n * * The optional parameter `firstNormal` (Vector3) defines the direction of the first normal of the supplied path. It should be supplied when the path is in the xy plane, and particularly if these sections are straight, because the underlying Path3D object will pick a normal in the xy plane that causes the extrusion to be collapsed into the plane. This should be used for any path that is straight.\n * * The optional `adjustFrame` (boolean, default false) will cause the internally generated Path3D tangents, normals, and binormals to be adjusted so that a) they are always well-defined, and b) they do not reverse from one path point to the next. This prevents the extruded shape from being flipped and/or rotated with resulting mesh self-intersections. This is primarily useful for straight paths that can reverse direction.\n *\n * This code has been generated\n */\nexport class FiberExtrudeShapeCustom implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'ExtrudeShapeCustom',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'shape',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'path',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'scaleFunction',\n            type: '(i: number, distance: number) => number',\n            optional: true,\n          },\n          {\n            name: 'rotationFunction',\n            type: '(i: number, distance: number) => number',\n            optional: true,\n          },\n          {\n            name: 'ribbonCloseArray',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'ribbonClosePath',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'closeShape',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'closePath',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'cap',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'instance',\n            type: 'BabylonjsCoreMesh',\n            optional: true,\n          },\n          {\n            name: 'invertUV',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'firstNormal',\n            type: 'BabylonjsCoreVector3',\n            optional: true,\n          },\n          {\n            name: 'adjustFrame',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberExtrudeShapeCustom',\n  }\n}\n\n/**\n * Creates lathe mesh.\n * The lathe is a shape with a symmetry axis : a 2D model shape is rotated around this axis to design the lathe\n * * The parameter `shape` is a required array of successive Vector3. This array depicts the shape to be rotated in its local space : the shape must be designed in the xOy plane and will be rotated around the Y axis. It's usually a 2D shape, so the Vector3 z coordinates are often set to zero\n * * The parameter `radius` (positive float, default 1) is the radius value of the lathe\n * * The parameter `tessellation` (positive integer, default 64) is the side number of the lathe\n * * The parameter `clip` (positive integer, default 0) is the number of sides to not create without effecting the general shape of the sides\n * * The parameter `arc` (positive float, default 1) is the ratio of the lathe. 0.5 builds for instance half a lathe, so an opened shape\n * * The parameter `closed` (boolean, default true) opens/closes the lathe circumference. This should be set to false when used with the parameter \"arc\"\n * * The parameter `cap` sets the way the extruded shape is capped. Possible values : BABYLON.Mesh.NO_CAP (default), BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The optional parameter `invertUV` (boolean, default false) swaps in the geometry the U and V coordinates to apply a texture\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberLathe implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateLathe',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'shape',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'radius',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tessellation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'clip',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'arc',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'closed',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'cap',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'invertUV',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberLathe',\n  }\n}\n\n/**\n * Creates a tiled plane mesh\n *\n * This code has been generated\n */\nexport class FiberTiledPlane implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateTiledPlane',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'pattern',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tileSize',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tileWidth',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tileHeight',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'size',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'width',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'height',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'alignHorizontal',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'alignVertical',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberTiledPlane',\n  }\n}\n\n/**\n * Creates a plane mesh\n * * The parameter `size` sets the size (float) of both sides of the plane at once (default 1)\n * * You can set some different plane dimensions by using the parameters `width` and `height` (both by default have the same value of `size`)\n * * The parameter `sourcePlane` is a Plane instance. It builds a mesh plane from a Math plane\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberPlane implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreatePlane',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'size',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'width',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'height',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sourcePlane',\n            type: 'BabylonjsCorePlane',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberPlane',\n  }\n}\n\n/**\n * Creates a ground mesh\n * * The parameters `width` and `height` (floats, default 1) set the width and height sizes of the ground\n * * The parameter `subdivisions` (positive integer) sets the number of subdivisions per side\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberGround implements HasPropsHandlers<FiberGroundMeshProps> {\n  private propsHandlers: PropsHandler<FiberGroundMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGroundMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGroundMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGroundMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateGround',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'width',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'height',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'subdivisions',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'subdivisionsX',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'subdivisionsY',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberGround',\n  }\n}\n\n/**\n * Creates a tiled ground mesh\n * * The parameters `xmin` and `xmax` (floats, default -1 and 1) set the ground minimum and maximum X coordinates\n * * The parameters `zmin` and `zmax` (floats, default -1 and 1) set the ground minimum and maximum Z coordinates\n * * The parameter `subdivisions` is a javascript object `{w: positive integer, h: positive integer}` (default `{w: 6, h: 6}`). `w` and `h` are the numbers of subdivisions on the ground width and height. Each subdivision is called a tile\n * * The parameter `precision` is a javascript object `{w: positive integer, h: positive integer}` (default `{w: 2, h: 2}`). `w` and `h` are the numbers of subdivisions on the ground width and height of each tile\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created.\n *\n * This code has been generated\n */\nexport class FiberTiledGround implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateTiledGround',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'xmin',\n            type: 'number',\n            optional: false,\n          },\n          {\n            name: 'zmin',\n            type: 'number',\n            optional: false,\n          },\n          {\n            name: 'xmax',\n            type: 'number',\n            optional: false,\n          },\n          {\n            name: 'zmax',\n            type: 'number',\n            optional: false,\n          },\n          {\n            name: 'subdivisions',\n            type: '{ w: number; h: number; }',\n            optional: true,\n          },\n          {\n            name: 'precision',\n            type: '{ w: number; h: number; }',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberTiledGround',\n  }\n}\n\n/**\n * Creates a ground mesh from a height map\n * * The parameter `url` sets the URL of the height map image resource.\n * * The parameters `width` and `height` (positive floats, default 10) set the ground width and height sizes.\n * * The parameter `subdivisions` (positive integer, default 1) sets the number of subdivision per side.\n * * The parameter `minHeight` (float, default 0) is the minimum altitude on the ground.\n * * The parameter `maxHeight` (float, default 1) is the maximum altitude on the ground.\n * * The parameter `colorFilter` (optional Color3, default (0.3, 0.59, 0.11) ) is the filter to apply to the image pixel colors to compute the height.\n * * The parameter `onReady` is a javascript callback function that will be called  once the mesh is just built (the height map download can last some time).\n * * The parameter `alphaFilter` will filter any data where the alpha channel is below this value, defaults 0 (all data visible)\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created.\n *\n * This code has been generated\n */\nexport class FiberGroundFromHeightMap implements HasPropsHandlers<FiberGroundMeshProps> {\n  private propsHandlers: PropsHandler<FiberGroundMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGroundMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGroundMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGroundMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateGroundFromHeightMap',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'url',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'width',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'height',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'subdivisions',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'minHeight',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'maxHeight',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'colorFilter',\n            type: 'BabylonjsCoreColor3',\n            optional: true,\n          },\n          {\n            name: 'alphaFilter',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'onReady',\n            type: '(mesh: BabylonjsCoreGroundMesh) => void',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberGroundFromHeightMap',\n  }\n}\n\n/**\n * Creates a polygon mesh\n * The polygon's shape will depend on the input parameters and is constructed parallel to a ground mesh\n * * The parameter `shape` is a required array of successive Vector3 representing the corners of the polygon in th XoZ plane, that is y = 0 for all vectors\n * * You can set the mesh side orientation with the values : Mesh.FRONTSIDE (default), Mesh.BACKSIDE or Mesh.DOUBLESIDE\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4)\n * * Remember you can only change the shape positions, not their number when updating a polygon\n *\n * This code has been generated\n */\nexport class FiberPolygon implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreatePolygon',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'shape',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'holes',\n            type: 'BabylonjsCoreVector3[][]',\n            optional: true,\n          },\n          {\n            name: 'depth',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'smoothingThreshold',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'faceUV',\n            type: 'BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'faceColors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'wrap',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'earcutInjection',\n        type: 'any',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberPolygon',\n  }\n}\n\n/**\n * Creates an extruded polygon mesh, with depth in the Y direction.\n * * You can set different colors and different images to the top, bottom and extruded side by using the parameters `faceColors` (an array of 3 Color3 elements) and `faceUV` (an array of 3 Vector4 elements)\n *\n * This code has been generated\n */\nexport class FiberExtrudePolygon implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'ExtrudePolygon',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'shape',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'holes',\n            type: 'BabylonjsCoreVector3[][]',\n            optional: true,\n          },\n          {\n            name: 'depth',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'faceUV',\n            type: 'BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'faceColors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'wrap',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'earcutInjection',\n        type: 'any',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberExtrudePolygon',\n  }\n}\n\n/**\n * Creates a tube mesh.\n * The tube is a parametric shape. It has no predefined shape. Its final shape will depend on the input parameters\n * * The parameter `path` is a required array of successive Vector3. It is the curve used as the axis of the tube\n * * The parameter `radius` (positive float, default 1) sets the tube radius size\n * * The parameter `tessellation` (positive float, default 64) is the number of sides on the tubular surface\n * * The parameter `radiusFunction` (javascript function, default null) is a vanilla javascript function. If it is not null, it overrides the parameter `radius`\n * * This function is called on each point of the tube path and is passed the index `i` of the i-th point and the distance of this point from the first point of the path. It must return a radius value (positive float)\n * * The parameter `arc` (positive float, maximum 1, default 1) is the ratio to apply to the tube circumference : 2 x PI x arc\n * * The parameter `cap` sets the way the extruded shape is capped. Possible values : BABYLON.Mesh.NO_CAP (default), BABYLON.Mesh.CAP_START, BABYLON.Mesh.CAP_END, BABYLON.Mesh.CAP_ALL\n * * The optional parameter `instance` is an instance of an existing Tube object to be updated with the passed `pathArray` parameter. The `path`Array HAS to have the SAME number of points as the previous one: https://doc.babylonjs.com/features/featuresDeepDive/mesh/dynamicMeshMorph#tube\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The optional parameter `invertUV` (boolean, default false) swaps in the geometry the U and V coordinates to apply a texture\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created. The NUMBER of points CAN'T CHANGE, only their positions.\n *\n * This code has been generated\n */\nexport class FiberTube implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateTube',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'path',\n            type: 'BabylonjsCoreVector3[]',\n            optional: false,\n          },\n          {\n            name: 'radius',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'tessellation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'radiusFunction',\n            type: '(i: number, distance: number) => number',\n            optional: true,\n          },\n          {\n            name: 'cap',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'arc',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'instance',\n            type: 'BabylonjsCoreMesh',\n            optional: true,\n          },\n          {\n            name: 'invertUV',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberTube',\n  }\n}\n\n/**\n * Creates a polyhedron mesh\n * * The parameter `type` (positive integer, max 14, default 0) sets the polyhedron type to build among the 15 embbeded types. Please refer to the type sheet in the tutorial to choose the wanted type\n * * The parameter `size` (positive float, default 1) sets the polygon size\n * * You can overwrite the `size` on each dimension bu using the parameters `sizeX`, `sizeY` or `sizeZ` (positive floats, default to `size` value)\n * * You can build other polyhedron types than the 15 embbeded ones by setting the parameter `custom` (`polyhedronObject`, default null). If you set the parameter `custom`, this overrides the parameter `type`\n * * A `polyhedronObject` is a formatted javascript object. You'll find a full file with pre-set polyhedra here : https://github.com/BabylonJS/Extensions/tree/master/Polyhedron\n * * You can set the color and the UV of each side of the polyhedron with the parameters `faceColors` (Color4, default `(1, 1, 1, 1)`) and faceUV (Vector4, default `(0, 0, 1, 1)`)\n * * To understand how to set `faceUV` or `faceColors`, please read this by considering the right number of faces of your polyhedron, instead of only 6 for the box : https://doc.babylonjs.com/features/featuresDeepDive/materials/using/texturePerBoxFace\n * * The parameter `flat` (boolean, default true). If set to false, it gives the polyhedron a single global face, so less vertices and shared normals. In this case, `faceColors` and `faceUV` are ignored\n * * You can also set the mesh side orientation with the values : BABYLON.Mesh.FRONTSIDE (default), BABYLON.Mesh.BACKSIDE or BABYLON.Mesh.DOUBLESIDE\n * * If you create a double-sided mesh, you can choose what parts of the texture image to crop and stick respectively on the front and the back sides with the parameters `frontUVs` and `backUVs` (Vector4). Detail here : https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set#side-orientation\n * * The mesh can be set to updatable with the boolean parameter `updatable` (default false) if its internal geometry is supposed to change once created\n *\n * This code has been generated\n */\nexport class FiberPolyhedron implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreatePolyhedron',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'type',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'size',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sizeX',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sizeY',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sizeZ',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'custom',\n            type: 'any',\n            optional: true,\n          },\n          {\n            name: 'faceUV',\n            type: 'BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'faceColors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'flat',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberPolyhedron',\n  }\n}\n\n/**\n * Creates the Mesh for a Geodesic Polyhedron\n *\n * This code has been generated\n */\nexport class FiberGeodesic implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateGeodesic',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'm',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'n',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'size',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sizeX',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sizeY',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sizeZ',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'faceUV',\n            type: 'BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'faceColors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'flat',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'frontUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n          {\n            name: 'backUVs',\n            type: 'BabylonjsCoreVector4',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberGeodesic',\n  }\n}\n\n/**\n * Creates the Mesh for a Goldberg Polyhedron which is made from 12 pentagonal and the rest hexagonal faces\n *\n * This code has been generated\n */\nexport class FiberGoldberg implements HasPropsHandlers<FiberGoldbergMeshProps> {\n  private propsHandlers: PropsHandler<FiberGoldbergMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGoldbergMeshPropsHandler(),\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGoldbergMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGoldbergMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateGoldberg',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreGoldbergCreationOption',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberGoldberg',\n  }\n}\n\n/**\n * Creates a decal mesh.\n * A decal is a mesh usually applied as a model onto the surface of another mesh. So don't forget the parameter `sourceMesh` depicting the decal\n * * The parameter `position` (Vector3, default `(0, 0, 0)`) sets the position of the decal in World coordinates\n * * The parameter `normal` (Vector3, default `Vector3.Up`) sets the normal of the mesh where the decal is applied onto in World coordinates\n * * The parameter `size` (Vector3, default `(1, 1, 1)`) sets the decal scaling\n * * The parameter `angle` (float in radian, default 0) sets the angle to rotate the decal\n * * The parameter `captureUVS` defines if we need to capture the uvs or compute them\n * * The parameter `cullBackFaces` defines if the back faces should be removed from the decal mesh\n * * The parameter `localMode` defines that the computations should be done with the local mesh coordinates instead of the world space coordinates.\n * *    Use this mode if you want the decal to be parented to the sourceMesh and move/rotate with it.\n * Note: Meshes with morph targets are not supported!\n *\n * This code has been generated\n */\nexport class FiberDecal implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateDecal',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'sourceMesh',\n        type: 'BabylonjsCoreAbstractMesh',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'position',\n            type: 'BabylonjsCoreVector3',\n            optional: true,\n          },\n          {\n            name: 'normal',\n            type: 'BabylonjsCoreVector3',\n            optional: true,\n          },\n          {\n            name: 'size',\n            type: 'BabylonjsCoreVector3',\n            optional: true,\n          },\n          {\n            name: 'angle',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'captureUVS',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'cullBackFaces',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'localMode',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberDecal',\n  }\n}\n\n/**\n * Creates a capsule or a pill mesh\n *\n * This code has been generated\n */\nexport class FiberCapsule implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateCapsule',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreICreateCapsuleOptions',\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberCapsule',\n  }\n}\n\n/**\n * Create a text mesh\n *\n * This code has been generated\n */\nexport class FiberText implements HasPropsHandlers<FiberMeshProps> {\n  private propsHandlers: PropsHandler<FiberMeshProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshPropsHandler(),\n      new FiberAbstractMeshPropsHandler(),\n      new FiberTransformNodePropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMeshProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMeshProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'meshBuilder',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateText',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'text',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'fontData',\n        type: 'BabylonjsCoreIFontData',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'size',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'resolution',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'depth',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'sideOrientation',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'faceUV',\n            type: 'BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'faceColors',\n            type: 'BabylonjsCoreColor4[]',\n            optional: true,\n          },\n          {\n            name: 'perLetterFaceUV',\n            type: '(letterIndex: number) => BabylonjsCoreVector4[]',\n            optional: true,\n          },\n          {\n            name: 'perLetterFaceColors',\n            type: '(letterIndex: number) => BabylonjsCoreColor4[]',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'earcutInjection',\n        type: 'any',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    isNode: true,\n    isMesh: true,\n    className: 'FiberText',\n  }\n}\n\nexport class FiberMaterialPropsHandler implements PropsHandler<FiberMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberMaterialProps,\n    newProps: FiberMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.allowShaderHotSwapping,\n      newProps.allowShaderHotSwapping,\n      'allowShaderHotSwapping',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.alpha, newProps.alpha, 'alpha', changedProps)\n    checkPrimitiveDiff(oldProps.alphaMode, newProps.alphaMode, 'alphaMode', changedProps)\n    // type: 'BabylonjsCoreAnimation[]' property (not coded) BabylonjsCoreMaterial.animations.\n    checkPrimitiveDiff(\n      oldProps.backFaceCulling,\n      newProps.backFaceCulling,\n      'backFaceCulling',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blockDirtyMechanism,\n      newProps.blockDirtyMechanism,\n      'blockDirtyMechanism',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.checkReadyOnEveryCall,\n      newProps.checkReadyOnEveryCall,\n      'checkReadyOnEveryCall',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.checkReadyOnlyOnce,\n      newProps.checkReadyOnlyOnce,\n      'checkReadyOnlyOnce',\n      changedProps\n    )\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreMaterial.clipPlane.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreMaterial.clipPlane2.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreMaterial.clipPlane3.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreMaterial.clipPlane4.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreMaterial.clipPlane5.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreMaterial.clipPlane6.\n    checkPrimitiveDiff(\n      oldProps.cullBackFaces,\n      newProps.cullBackFaces,\n      'cullBackFaces',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.customShaderNameResolve,\n      newProps.customShaderNameResolve,\n      'customShaderNameResolve',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.depthFunction,\n      newProps.depthFunction,\n      'depthFunction',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.disableColorWrite,\n      newProps.disableColorWrite,\n      'disableColorWrite',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.disableDepthWrite,\n      newProps.disableDepthWrite,\n      'disableDepthWrite',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.doNotSerialize,\n      newProps.doNotSerialize,\n      'doNotSerialize',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.fillMode, newProps.fillMode, 'fillMode', changedProps)\n    checkPrimitiveDiff(oldProps.fogEnabled, newProps.fogEnabled, 'fogEnabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.forceDepthWrite,\n      newProps.forceDepthWrite,\n      'forceDepthWrite',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.getRenderTargetTextures,\n      newProps.getRenderTargetTextures,\n      'getRenderTargetTextures',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.id, newProps.id, 'id', changedProps)\n    // type: 'BabylonjsCoreIInspectable[]' property (not coded) BabylonjsCoreMaterial.inspectableCustomProperties.\n    // type: '{ [id: string]: BabylonjsCoreAbstractMesh; }' property (not coded) BabylonjsCoreMaterial.meshMap.\n    // type: 'any' property (not coded) BabylonjsCoreMaterial.metadata.\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(\n      oldProps.needDepthPrePass,\n      newProps.needDepthPrePass,\n      'needDepthPrePass',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onBind, newProps.onBind, 'onBind', changedProps)\n    checkLambdaDiff(oldProps.onCompiled, newProps.onCompiled, 'onCompiled', changedProps)\n    checkLambdaDiff(oldProps.onDispose, newProps.onDispose, 'onDispose', changedProps)\n    checkObservableDiff(\n      oldProps.onDisposeObservable,\n      newProps.onDisposeObservable,\n      'onDisposeObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onError, newProps.onError, 'onError', changedProps)\n    checkPrimitiveDiff(oldProps.pointsCloud, newProps.pointsCloud, 'pointsCloud', changedProps)\n    checkPrimitiveDiff(oldProps.pointSize, newProps.pointSize, 'pointSize', changedProps)\n    // type: 'any' property (not coded) BabylonjsCoreMaterial.releaseVertexArrayObject.\n    // type: 'any' property (not coded) BabylonjsCoreMaterial.reservedDataStore.\n    checkPrimitiveDiff(\n      oldProps.separateCullingPass,\n      newProps.separateCullingPass,\n      'separateCullingPass',\n      changedProps\n    )\n    // type: 'BabylonjsCoreShadowDepthWrapper' property (not coded) BabylonjsCoreMaterial.shadowDepthWrapper.\n    checkPrimitiveDiff(\n      oldProps.sideOrientation,\n      newProps.sideOrientation,\n      'sideOrientation',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.state, newProps.state, 'state', changedProps)\n    checkPrimitiveDiff(\n      oldProps.transparencyMode,\n      newProps.transparencyMode,\n      'transparencyMode',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.uniqueId, newProps.uniqueId, 'uniqueId', changedProps)\n    checkPrimitiveDiff(oldProps.wireframe, newProps.wireframe, 'wireframe', changedProps)\n    checkPrimitiveDiff(oldProps.zOffset, newProps.zOffset, 'zOffset', changedProps)\n    checkPrimitiveDiff(oldProps.zOffsetUnits, newProps.zOffsetUnits, 'zOffsetUnits', changedProps)\n    checkMethodDiff(\n      oldProps.setPrePassRenderer,\n      newProps.setPrePassRenderer,\n      'setPrePassRenderer',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Base class for the main features of a material in Babylon.js\n *\n * This code has been generated\n */\nexport class FiberMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberMaterialPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Material',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'doNotAdd',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberMaterial',\n  }\n}\n\nexport class FiberPushMaterialPropsHandler implements PropsHandler<FiberPushMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberPushMaterialProps,\n    newProps: FiberPushMaterialProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Base class of materials working in push mode in babylon JS\n *\n * This code has been generated\n */\nexport class FiberPushMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPushMaterialPropsHandler(), new FiberMaterialPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PushMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'storeEffectOnSubMeshes',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberPushMaterial',\n  }\n}\n\nexport class FiberNodeMaterialPropsHandler implements PropsHandler<FiberNodeMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberNodeMaterialProps,\n    newProps: FiberNodeMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreNodeMaterialBlock[]' property (not coded) BabylonjsCoreNodeMaterial.attachedBlocks.\n    // type: 'any' property (not coded) BabylonjsCoreNodeMaterial.BJSNODEMATERIALEDITOR.\n    checkPrimitiveDiff(oldProps.buildId, newProps.buildId, 'buildId', changedProps)\n    checkPrimitiveDiff(oldProps.comment, newProps.comment, 'comment', changedProps)\n    // type: 'any' property (not coded) BabylonjsCoreNodeMaterial.editorData.\n    checkPrimitiveDiff(\n      oldProps.forceAlphaBlending,\n      newProps.forceAlphaBlending,\n      'forceAlphaBlending',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.ignoreAlpha, newProps.ignoreAlpha, 'ignoreAlpha', changedProps)\n    // type: 'BabylonjsCoreImageProcessingConfiguration' property (not coded) BabylonjsCoreNodeMaterial.imageProcessingConfiguration.\n    checkPrimitiveDiff(\n      oldProps.maxSimultaneousLights,\n      newProps.maxSimultaneousLights,\n      'maxSimultaneousLights',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.mode, newProps.mode, 'mode', changedProps)\n    checkObservableDiff(\n      oldProps.onBuildObservable,\n      newProps.onBuildObservable,\n      'onBuildObservable',\n      changedProps\n    )\n    // type: 'BabylonjsCoreINodeMaterialOptions' property (not coded) BabylonjsCoreNodeMaterial.options.\n    checkPrimitiveDiff(oldProps.snippetId, newProps.snippetId, 'snippetId', changedProps)\n    checkMethodDiff(oldProps.addOutputNode, newProps.addOutputNode, 'addOutputNode', changedProps)\n    checkMethodDiff(\n      oldProps.setPrePassRenderer,\n      newProps.setPrePassRenderer,\n      'setPrePassRenderer',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a node based material built by assembling shader blocks\n *\n * This code has been generated\n */\nexport class FiberNodeMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberNodeMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'NodeMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'options',\n        type: 'Partial<BabylonjsCoreINodeMaterialOptions>',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberNodeMaterial',\n  }\n}\n\nexport class FiberShaderMaterialPropsHandler implements PropsHandler<FiberShaderMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberShaderMaterialProps,\n    newProps: FiberShaderMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'any' property (not coded) BabylonjsCoreShaderMaterial.shaderPath.\n    checkPrimitiveDiff(oldProps.snippetId, newProps.snippetId, 'snippetId', changedProps)\n    checkMethodDiff(oldProps.setArray2, newProps.setArray2, 'setArray2', changedProps)\n    checkMethodDiff(oldProps.setArray3, newProps.setArray3, 'setArray3', changedProps)\n    checkMethodDiff(oldProps.setArray4, newProps.setArray4, 'setArray4', changedProps)\n    checkMethodDiff(oldProps.setColor3, newProps.setColor3, 'setColor3', changedProps)\n    checkMethodDiff(\n      oldProps.setColor3Array,\n      newProps.setColor3Array,\n      'setColor3Array',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setColor4, newProps.setColor4, 'setColor4', changedProps)\n    checkMethodDiff(\n      oldProps.setColor4Array,\n      newProps.setColor4Array,\n      'setColor4Array',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setDefine, newProps.setDefine, 'setDefine', changedProps)\n    checkMethodDiff(\n      oldProps.setExternalTexture,\n      newProps.setExternalTexture,\n      'setExternalTexture',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setFloat, newProps.setFloat, 'setFloat', changedProps)\n    checkMethodDiff(oldProps.setFloats, newProps.setFloats, 'setFloats', changedProps)\n    checkMethodDiff(oldProps.setInt, newProps.setInt, 'setInt', changedProps)\n    checkMethodDiff(oldProps.setMatrices, newProps.setMatrices, 'setMatrices', changedProps)\n    checkMethodDiff(oldProps.setMatrix, newProps.setMatrix, 'setMatrix', changedProps)\n    checkMethodDiff(oldProps.setMatrix2x2, newProps.setMatrix2x2, 'setMatrix2x2', changedProps)\n    checkMethodDiff(oldProps.setMatrix3x3, newProps.setMatrix3x3, 'setMatrix3x3', changedProps)\n    checkMethodDiff(oldProps.setQuaternion, newProps.setQuaternion, 'setQuaternion', changedProps)\n    checkMethodDiff(\n      oldProps.setQuaternionArray,\n      newProps.setQuaternionArray,\n      'setQuaternionArray',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setStorageBuffer,\n      newProps.setStorageBuffer,\n      'setStorageBuffer',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setTexture, newProps.setTexture, 'setTexture', changedProps)\n    checkMethodDiff(\n      oldProps.setTextureArray,\n      newProps.setTextureArray,\n      'setTextureArray',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setTextureSampler,\n      newProps.setTextureSampler,\n      'setTextureSampler',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setUInt, newProps.setUInt, 'setUInt', changedProps)\n    checkMethodDiff(\n      oldProps.setUniformBuffer,\n      newProps.setUniformBuffer,\n      'setUniformBuffer',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setVector2, newProps.setVector2, 'setVector2', changedProps)\n    checkMethodDiff(oldProps.setVector3, newProps.setVector3, 'setVector3', changedProps)\n    checkMethodDiff(oldProps.setVector4, newProps.setVector4, 'setVector4', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The ShaderMaterial object has the necessary methods to pass data from your scene to the Vertex and Fragment Shaders and returns a material that can be applied to any mesh.\n *\n * This returned material effects how the mesh will look based on the code in the shaders.\n *\n * This code has been generated\n */\nexport class FiberShaderMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberShaderMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ShaderMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'shaderPath',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'Partial<BabylonjsCoreIShaderMaterialOptions>',\n        optional: true,\n      },\n      {\n        name: 'storeEffectOnSubMeshes',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberShaderMaterial',\n  }\n}\n\nexport class FiberOcclusionMaterialPropsHandler\n  implements PropsHandler<FiberOcclusionMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberOcclusionMaterialProps,\n    newProps: FiberOcclusionMaterialProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * A material to use for fast depth-only rendering.\n *\n * This code has been generated\n */\nexport class FiberOcclusionMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberOcclusionMaterialPropsHandler(),\n      new FiberShaderMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'OcclusionMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberOcclusionMaterial',\n  }\n}\n\nexport class FiberGreasedLineSimpleMaterialPropsHandler\n  implements PropsHandler<FiberGreasedLineSimpleMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberGreasedLineSimpleMaterialProps,\n    newProps: FiberGreasedLineSimpleMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(oldProps.color, newProps.color, 'color', changedProps)\n    checkPrimitiveDiff(oldProps.colorMode, newProps.colorMode, 'colorMode', changedProps)\n    // type: 'BabylonjsCoreColor3[]' property (not coded) BabylonjsCoreGreasedLineSimpleMaterial.colors.\n    checkPrimitiveDiff(\n      oldProps.colorsDistributionType,\n      newProps.colorsDistributionType,\n      'colorsDistributionType',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.colorsSampling,\n      newProps.colorsSampling,\n      'colorsSampling',\n      changedProps\n    )\n    // type: 'BabylonjsCoreRawTexture' property (not coded) BabylonjsCoreGreasedLineSimpleMaterial.colorsTexture.\n    checkPrimitiveDiff(oldProps.dashCount, newProps.dashCount, 'dashCount', changedProps)\n    checkPrimitiveDiff(oldProps.dashOffset, newProps.dashOffset, 'dashOffset', changedProps)\n    checkPrimitiveDiff(oldProps.dashRatio, newProps.dashRatio, 'dashRatio', changedProps)\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreGreasedLineSimpleMaterial.resolution.\n    checkPrimitiveDiff(\n      oldProps.sizeAttenuation,\n      newProps.sizeAttenuation,\n      'sizeAttenuation',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.useColors, newProps.useColors, 'useColors', changedProps)\n    checkPrimitiveDiff(oldProps.useDash, newProps.useDash, 'useDash', changedProps)\n    checkPrimitiveDiff(oldProps.visibility, newProps.visibility, 'visibility', changedProps)\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    checkMethodDiff(oldProps.setColor, newProps.setColor, 'setColor', changedProps)\n    checkMethodDiff(oldProps.setColors, newProps.setColors, 'setColors', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * GreasedLineSimpleMaterial\n *\n * This code has been generated\n */\nexport class FiberGreasedLineSimpleMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGreasedLineSimpleMaterialPropsHandler(),\n      new FiberShaderMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GreasedLineSimpleMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreGreasedLineMaterialOptions',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberGreasedLineSimpleMaterial',\n  }\n}\n\nexport class FiberHandleMaterialPropsHandler implements PropsHandler<FiberHandleMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberHandleMaterialProps,\n    newProps: FiberHandleMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.animationLength,\n      newProps.animationLength,\n      'animationLength',\n      changedProps\n    )\n    checkColor3Diff(oldProps.baseColor, newProps.baseColor, 'baseColor', changedProps)\n    checkPrimitiveDiff(oldProps.baseScale, newProps.baseScale, 'baseScale', changedProps)\n    checkPrimitiveDiff(oldProps.drag, newProps.drag, 'drag', changedProps)\n    checkPrimitiveDiff(oldProps.dragScale, newProps.dragScale, 'dragScale', changedProps)\n    checkPrimitiveDiff(oldProps.hover, newProps.hover, 'hover', changedProps)\n    checkColor3Diff(oldProps.hoverColor, newProps.hoverColor, 'hoverColor', changedProps)\n    checkPrimitiveDiff(oldProps.hoverScale, newProps.hoverScale, 'hoverScale', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render gizmo handles with fluent design\n *\n * This code has been generated\n */\nexport class FiberHandleMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHandleMaterialPropsHandler(),\n      new FiberShaderMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HandleMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberHandleMaterial',\n  }\n}\n\nexport class FiberPBRBaseMaterialPropsHandler implements PropsHandler<FiberPBRBaseMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberPBRBaseMaterialProps,\n    newProps: FiberPBRBaseMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.debugFactor, newProps.debugFactor, 'debugFactor', changedProps)\n    checkPrimitiveDiff(oldProps.debugLimit, newProps.debugLimit, 'debugLimit', changedProps)\n    checkPrimitiveDiff(oldProps.debugMode, newProps.debugMode, 'debugMode', changedProps)\n    checkPrimitiveDiff(\n      oldProps.realTimeFiltering,\n      newProps.realTimeFiltering,\n      'realTimeFiltering',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.realTimeFilteringQuality,\n      newProps.realTimeFilteringQuality,\n      'realTimeFilteringQuality',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useLogarithmicDepth,\n      newProps.useLogarithmicDepth,\n      'useLogarithmicDepth',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The Physically based material base class of BJS.\n *\n * This offers the main features of a standard PBR material.\n * For more information, please refer to the documentation :\n * https://doc.babylonjs.com/features/featuresDeepDive/materials/using/introToPBR\n *\n * This code has been generated\n */\nexport class FiberPBRBaseMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRBaseMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRBaseMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberPBRBaseMaterial',\n  }\n}\n\nexport class FiberPBRBaseSimpleMaterialPropsHandler\n  implements PropsHandler<FiberPBRBaseSimpleMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRBaseSimpleMaterialProps,\n    newProps: FiberPBRBaseSimpleMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.alphaCutOff, newProps.alphaCutOff, 'alphaCutOff', changedProps)\n    checkPrimitiveDiff(\n      oldProps.disableLighting,\n      newProps.disableLighting,\n      'disableLighting',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.doubleSided, newProps.doubleSided, 'doubleSided', changedProps)\n    checkColor3Diff(oldProps.emissiveColor, newProps.emissiveColor, 'emissiveColor', changedProps)\n    checkTextureDiff(\n      oldProps.emissiveTexture,\n      newProps.emissiveTexture,\n      'emissiveTexture',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.environmentTexture,\n      newProps.environmentTexture,\n      'environmentTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertNormalMapX,\n      newProps.invertNormalMapX,\n      'invertNormalMapX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertNormalMapY,\n      newProps.invertNormalMapY,\n      'invertNormalMapY',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.lightmapTexture,\n      newProps.lightmapTexture,\n      'lightmapTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.maxSimultaneousLights,\n      newProps.maxSimultaneousLights,\n      'maxSimultaneousLights',\n      changedProps\n    )\n    checkTextureDiff(oldProps.normalTexture, newProps.normalTexture, 'normalTexture', changedProps)\n    checkPrimitiveDiff(\n      oldProps.occlusionStrength,\n      newProps.occlusionStrength,\n      'occlusionStrength',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.occlusionTexture,\n      newProps.occlusionTexture,\n      'occlusionTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useLightmapAsShadowmap,\n      newProps.useLightmapAsShadowmap,\n      'useLightmapAsShadowmap',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The Physically based simple base material of BJS.\n *\n * This enables better naming and convention enforcements on top of the pbrMaterial.\n * It is used as the base class for both the specGloss and metalRough conventions.\n *\n * This code has been generated\n */\nexport class FiberPBRBaseSimpleMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRBaseSimpleMaterialPropsHandler(),\n      new FiberPBRBaseMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRBaseSimpleMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberPBRBaseSimpleMaterial',\n  }\n}\n\nexport class FiberPBRMetallicRoughnessMaterialPropsHandler\n  implements PropsHandler<FiberPBRMetallicRoughnessMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRMetallicRoughnessMaterialProps,\n    newProps: FiberPBRMetallicRoughnessMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(oldProps.baseColor, newProps.baseColor, 'baseColor', changedProps)\n    checkTextureDiff(oldProps.baseTexture, newProps.baseTexture, 'baseTexture', changedProps)\n    checkPrimitiveDiff(oldProps.metallic, newProps.metallic, 'metallic', changedProps)\n    checkTextureDiff(\n      oldProps.metallicRoughnessTexture,\n      newProps.metallicRoughnessTexture,\n      'metallicRoughnessTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.roughness, newProps.roughness, 'roughness', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The PBR material of BJS following the metal roughness convention.\n *\n * This fits to the PBR convention in the GLTF definition:\n * https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Archived/KHR_materials_pbrSpecularGlossiness/README.md\n *\n * This code has been generated\n */\nexport class FiberPBRMetallicRoughnessMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRMetallicRoughnessMaterialPropsHandler(),\n      new FiberPBRBaseSimpleMaterialPropsHandler(),\n      new FiberPBRBaseMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRMetallicRoughnessMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberPBRMetallicRoughnessMaterial',\n  }\n}\n\nexport class FiberPBRSpecularGlossinessMaterialPropsHandler\n  implements PropsHandler<FiberPBRSpecularGlossinessMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRSpecularGlossinessMaterialProps,\n    newProps: FiberPBRSpecularGlossinessMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(oldProps.diffuseColor, newProps.diffuseColor, 'diffuseColor', changedProps)\n    checkTextureDiff(\n      oldProps.diffuseTexture,\n      newProps.diffuseTexture,\n      'diffuseTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.glossiness, newProps.glossiness, 'glossiness', changedProps)\n    checkColor3Diff(oldProps.specularColor, newProps.specularColor, 'specularColor', changedProps)\n    checkTextureDiff(\n      oldProps.specularGlossinessTexture,\n      newProps.specularGlossinessTexture,\n      'specularGlossinessTexture',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The PBR material of BJS following the specular glossiness convention.\n *\n * This fits to the PBR convention in the GLTF definition:\n * https://github.com/KhronosGroup/glTF/tree/2.0/extensions/Khronos/KHR_materials_pbrSpecularGlossiness\n *\n * This code has been generated\n */\nexport class FiberPBRSpecularGlossinessMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRSpecularGlossinessMaterialPropsHandler(),\n      new FiberPBRBaseSimpleMaterialPropsHandler(),\n      new FiberPBRBaseMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRSpecularGlossinessMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberPBRSpecularGlossinessMaterial',\n  }\n}\n\nexport class FiberPBRMaterialPropsHandler implements PropsHandler<FiberPBRMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberPBRMaterialProps,\n    newProps: FiberPBRMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(oldProps.albedoColor, newProps.albedoColor, 'albedoColor', changedProps)\n    checkTextureDiff(oldProps.albedoTexture, newProps.albedoTexture, 'albedoTexture', changedProps)\n    checkPrimitiveDiff(oldProps.alphaCutOff, newProps.alphaCutOff, 'alphaCutOff', changedProps)\n    checkColor3Diff(oldProps.ambientColor, newProps.ambientColor, 'ambientColor', changedProps)\n    checkTextureDiff(\n      oldProps.ambientTexture,\n      newProps.ambientTexture,\n      'ambientTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ambientTextureImpactOnAnalyticalLights,\n      newProps.ambientTextureImpactOnAnalyticalLights,\n      'ambientTextureImpactOnAnalyticalLights',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ambientTextureStrength,\n      newProps.ambientTextureStrength,\n      'ambientTextureStrength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.applyDecalMapAfterDetailMap,\n      newProps.applyDecalMapAfterDetailMap,\n      'applyDecalMapAfterDetailMap',\n      changedProps\n    )\n    checkTextureDiff(oldProps.bumpTexture, newProps.bumpTexture, 'bumpTexture', changedProps)\n    // type: 'BabylonjsCoreColorCurves' property (not coded) BabylonjsCorePBRMaterial.cameraColorCurves.\n    checkPrimitiveDiff(\n      oldProps.cameraColorCurvesEnabled,\n      newProps.cameraColorCurvesEnabled,\n      'cameraColorCurvesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraColorGradingEnabled,\n      newProps.cameraColorGradingEnabled,\n      'cameraColorGradingEnabled',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.cameraColorGradingTexture,\n      newProps.cameraColorGradingTexture,\n      'cameraColorGradingTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraContrast,\n      newProps.cameraContrast,\n      'cameraContrast',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraExposure,\n      newProps.cameraExposure,\n      'cameraExposure',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraToneMappingEnabled,\n      newProps.cameraToneMappingEnabled,\n      'cameraToneMappingEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.directIntensity,\n      newProps.directIntensity,\n      'directIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.disableBumpMap,\n      newProps.disableBumpMap,\n      'disableBumpMap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.disableLighting,\n      newProps.disableLighting,\n      'disableLighting',\n      changedProps\n    )\n    checkColor3Diff(oldProps.emissiveColor, newProps.emissiveColor, 'emissiveColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.emissiveIntensity,\n      newProps.emissiveIntensity,\n      'emissiveIntensity',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.emissiveTexture,\n      newProps.emissiveTexture,\n      'emissiveTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.enableSpecularAntiAliasing,\n      newProps.enableSpecularAntiAliasing,\n      'enableSpecularAntiAliasing',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.environmentBRDFTexture,\n      newProps.environmentBRDFTexture,\n      'environmentBRDFTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.environmentIntensity,\n      newProps.environmentIntensity,\n      'environmentIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceAlphaTest,\n      newProps.forceAlphaTest,\n      'forceAlphaTest',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceIrradianceInFragment,\n      newProps.forceIrradianceInFragment,\n      'forceIrradianceInFragment',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceNormalForward,\n      newProps.forceNormalForward,\n      'forceNormalForward',\n      changedProps\n    )\n    // type: 'BabylonjsCoreImageProcessingConfiguration' property (not coded) BabylonjsCorePBRMaterial.imageProcessingConfiguration.\n    checkPrimitiveDiff(\n      oldProps.indexOfRefraction,\n      newProps.indexOfRefraction,\n      'indexOfRefraction',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertNormalMapX,\n      newProps.invertNormalMapX,\n      'invertNormalMapX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertNormalMapY,\n      newProps.invertNormalMapY,\n      'invertNormalMapY',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertRefractionY,\n      newProps.invertRefractionY,\n      'invertRefractionY',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.lightmapTexture,\n      newProps.lightmapTexture,\n      'lightmapTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.linkRefractionWithTransparency,\n      newProps.linkRefractionWithTransparency,\n      'linkRefractionWithTransparency',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.maxSimultaneousLights,\n      newProps.maxSimultaneousLights,\n      'maxSimultaneousLights',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.metallic, newProps.metallic, 'metallic', changedProps)\n    checkPrimitiveDiff(\n      oldProps.metallicF0Factor,\n      newProps.metallicF0Factor,\n      'metallicF0Factor',\n      changedProps\n    )\n    checkColor3Diff(\n      oldProps.metallicReflectanceColor,\n      newProps.metallicReflectanceColor,\n      'metallicReflectanceColor',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.metallicReflectanceTexture,\n      newProps.metallicReflectanceTexture,\n      'metallicReflectanceTexture',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.metallicTexture,\n      newProps.metallicTexture,\n      'metallicTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.microSurface, newProps.microSurface, 'microSurface', changedProps)\n    checkTextureDiff(\n      oldProps.microSurfaceTexture,\n      newProps.microSurfaceTexture,\n      'microSurfaceTexture',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.opacityTexture,\n      newProps.opacityTexture,\n      'opacityTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.parallaxScaleBias,\n      newProps.parallaxScaleBias,\n      'parallaxScaleBias',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.reflectanceTexture,\n      newProps.reflectanceTexture,\n      'reflectanceTexture',\n      changedProps\n    )\n    checkColor3Diff(\n      oldProps.reflectionColor,\n      newProps.reflectionColor,\n      'reflectionColor',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.reflectionTexture,\n      newProps.reflectionTexture,\n      'reflectionTexture',\n      changedProps\n    )\n    checkColor3Diff(\n      oldProps.reflectivityColor,\n      newProps.reflectivityColor,\n      'reflectivityColor',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.reflectivityTexture,\n      newProps.reflectivityTexture,\n      'reflectivityTexture',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.refractionTexture,\n      newProps.refractionTexture,\n      'refractionTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.roughness, newProps.roughness, 'roughness', changedProps)\n    checkPrimitiveDiff(\n      oldProps.specularIntensity,\n      newProps.specularIntensity,\n      'specularIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.twoSidedLighting,\n      newProps.twoSidedLighting,\n      'twoSidedLighting',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.unlit, newProps.unlit, 'unlit', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useAlphaFresnel,\n      newProps.useAlphaFresnel,\n      'useAlphaFresnel',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useAlphaFromAlbedoTexture,\n      newProps.useAlphaFromAlbedoTexture,\n      'useAlphaFromAlbedoTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useAmbientInGrayScale,\n      newProps.useAmbientInGrayScale,\n      'useAmbientInGrayScale',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useAmbientOcclusionFromMetallicTextureRed,\n      newProps.useAmbientOcclusionFromMetallicTextureRed,\n      'useAmbientOcclusionFromMetallicTextureRed',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useAutoMicroSurfaceFromReflectivityMap,\n      newProps.useAutoMicroSurfaceFromReflectivityMap,\n      'useAutoMicroSurfaceFromReflectivityMap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useGLTFLightFalloff,\n      newProps.useGLTFLightFalloff,\n      'useGLTFLightFalloff',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useHorizonOcclusion,\n      newProps.useHorizonOcclusion,\n      'useHorizonOcclusion',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useLightmapAsShadowmap,\n      newProps.useLightmapAsShadowmap,\n      'useLightmapAsShadowmap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useLinearAlphaFresnel,\n      newProps.useLinearAlphaFresnel,\n      'useLinearAlphaFresnel',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useMetallnessFromMetallicTextureBlue,\n      newProps.useMetallnessFromMetallicTextureBlue,\n      'useMetallnessFromMetallicTextureBlue',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useMicroSurfaceFromReflectivityMapAlpha,\n      newProps.useMicroSurfaceFromReflectivityMapAlpha,\n      'useMicroSurfaceFromReflectivityMapAlpha',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useObjectSpaceNormalMap,\n      newProps.useObjectSpaceNormalMap,\n      'useObjectSpaceNormalMap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useOnlyMetallicFromMetallicReflectanceTexture,\n      newProps.useOnlyMetallicFromMetallicReflectanceTexture,\n      'useOnlyMetallicFromMetallicReflectanceTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.useParallax, newProps.useParallax, 'useParallax', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useParallaxOcclusion,\n      newProps.useParallaxOcclusion,\n      'useParallaxOcclusion',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.usePhysicalLightFalloff,\n      newProps.usePhysicalLightFalloff,\n      'usePhysicalLightFalloff',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useRadianceOcclusion,\n      newProps.useRadianceOcclusion,\n      'useRadianceOcclusion',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useRadianceOverAlpha,\n      newProps.useRadianceOverAlpha,\n      'useRadianceOverAlpha',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useRoughnessFromMetallicTextureAlpha,\n      newProps.useRoughnessFromMetallicTextureAlpha,\n      'useRoughnessFromMetallicTextureAlpha',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useRoughnessFromMetallicTextureGreen,\n      newProps.useRoughnessFromMetallicTextureGreen,\n      'useRoughnessFromMetallicTextureGreen',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useSpecularOverAlpha,\n      newProps.useSpecularOverAlpha,\n      'useSpecularOverAlpha',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The Physically based material of BJS.\n *\n * This offers the main features of a standard PBR material.\n * For more information, please refer to the documentation :\n * https://doc.babylonjs.com/features/featuresDeepDive/materials/using/introToPBR\n *\n * This code has been generated\n */\nexport class FiberPBRMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRMaterialPropsHandler(),\n      new FiberPBRBaseMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberPBRMaterial',\n  }\n}\n\nexport class FiberStandardMaterialPropsHandler implements PropsHandler<FiberStandardMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberStandardMaterialProps,\n    newProps: FiberStandardMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.alphaCutOff, newProps.alphaCutOff, 'alphaCutOff', changedProps)\n    checkColor3Diff(oldProps.ambientColor, newProps.ambientColor, 'ambientColor', changedProps)\n    checkTextureDiff(\n      oldProps.ambientTexture,\n      newProps.ambientTexture,\n      'ambientTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.AmbientTextureEnabled,\n      newProps.AmbientTextureEnabled,\n      'AmbientTextureEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.applyDecalMapAfterDetailMap,\n      newProps.applyDecalMapAfterDetailMap,\n      'applyDecalMapAfterDetailMap',\n      changedProps\n    )\n    checkTextureDiff(oldProps.bumpTexture, newProps.bumpTexture, 'bumpTexture', changedProps)\n    checkPrimitiveDiff(\n      oldProps.BumpTextureEnabled,\n      newProps.BumpTextureEnabled,\n      'BumpTextureEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCoreColorCurves' property (not coded) BabylonjsCoreStandardMaterial.cameraColorCurves.\n    checkPrimitiveDiff(\n      oldProps.cameraColorCurvesEnabled,\n      newProps.cameraColorCurvesEnabled,\n      'cameraColorCurvesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraColorGradingEnabled,\n      newProps.cameraColorGradingEnabled,\n      'cameraColorGradingEnabled',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.cameraColorGradingTexture,\n      newProps.cameraColorGradingTexture,\n      'cameraColorGradingTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraContrast,\n      newProps.cameraContrast,\n      'cameraContrast',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraExposure,\n      newProps.cameraExposure,\n      'cameraExposure',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraToneMappingEnabled,\n      newProps.cameraToneMappingEnabled,\n      'cameraToneMappingEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ColorGradingTextureEnabled,\n      newProps.ColorGradingTextureEnabled,\n      'ColorGradingTextureEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.DetailTextureEnabled,\n      newProps.DetailTextureEnabled,\n      'DetailTextureEnabled',\n      changedProps\n    )\n    checkColor3Diff(oldProps.diffuseColor, newProps.diffuseColor, 'diffuseColor', changedProps)\n    checkFresnelParametersDiff(\n      oldProps.diffuseFresnelParameters,\n      newProps.diffuseFresnelParameters,\n      'diffuseFresnelParameters',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.diffuseTexture,\n      newProps.diffuseTexture,\n      'diffuseTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.DiffuseTextureEnabled,\n      newProps.DiffuseTextureEnabled,\n      'DiffuseTextureEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.disableLighting,\n      newProps.disableLighting,\n      'disableLighting',\n      changedProps\n    )\n    checkColor3Diff(oldProps.emissiveColor, newProps.emissiveColor, 'emissiveColor', changedProps)\n    checkFresnelParametersDiff(\n      oldProps.emissiveFresnelParameters,\n      newProps.emissiveFresnelParameters,\n      'emissiveFresnelParameters',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.emissiveTexture,\n      newProps.emissiveTexture,\n      'emissiveTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.EmissiveTextureEnabled,\n      newProps.EmissiveTextureEnabled,\n      'EmissiveTextureEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.FresnelEnabled,\n      newProps.FresnelEnabled,\n      'FresnelEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCoreImageProcessingConfiguration' property (not coded) BabylonjsCoreStandardMaterial.imageProcessingConfiguration.\n    checkPrimitiveDiff(\n      oldProps.indexOfRefraction,\n      newProps.indexOfRefraction,\n      'indexOfRefraction',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertNormalMapX,\n      newProps.invertNormalMapX,\n      'invertNormalMapX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertNormalMapY,\n      newProps.invertNormalMapY,\n      'invertNormalMapY',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertRefractionY,\n      newProps.invertRefractionY,\n      'invertRefractionY',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.lightmapTexture,\n      newProps.lightmapTexture,\n      'lightmapTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.LightmapTextureEnabled,\n      newProps.LightmapTextureEnabled,\n      'LightmapTextureEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.linkEmissiveWithDiffuse,\n      newProps.linkEmissiveWithDiffuse,\n      'linkEmissiveWithDiffuse',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.maxSimultaneousLights,\n      newProps.maxSimultaneousLights,\n      'maxSimultaneousLights',\n      changedProps\n    )\n    checkFresnelParametersDiff(\n      oldProps.opacityFresnelParameters,\n      newProps.opacityFresnelParameters,\n      'opacityFresnelParameters',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.opacityTexture,\n      newProps.opacityTexture,\n      'opacityTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.OpacityTextureEnabled,\n      newProps.OpacityTextureEnabled,\n      'OpacityTextureEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.parallaxScaleBias,\n      newProps.parallaxScaleBias,\n      'parallaxScaleBias',\n      changedProps\n    )\n    checkFresnelParametersDiff(\n      oldProps.reflectionFresnelParameters,\n      newProps.reflectionFresnelParameters,\n      'reflectionFresnelParameters',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.reflectionTexture,\n      newProps.reflectionTexture,\n      'reflectionTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ReflectionTextureEnabled,\n      newProps.ReflectionTextureEnabled,\n      'ReflectionTextureEnabled',\n      changedProps\n    )\n    checkFresnelParametersDiff(\n      oldProps.refractionFresnelParameters,\n      newProps.refractionFresnelParameters,\n      'refractionFresnelParameters',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.refractionTexture,\n      newProps.refractionTexture,\n      'refractionTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.RefractionTextureEnabled,\n      newProps.RefractionTextureEnabled,\n      'RefractionTextureEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.roughness, newProps.roughness, 'roughness', changedProps)\n    checkColor3Diff(oldProps.specularColor, newProps.specularColor, 'specularColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.specularPower,\n      newProps.specularPower,\n      'specularPower',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.specularTexture,\n      newProps.specularTexture,\n      'specularTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SpecularTextureEnabled,\n      newProps.SpecularTextureEnabled,\n      'SpecularTextureEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.twoSidedLighting,\n      newProps.twoSidedLighting,\n      'twoSidedLighting',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useAlphaFromDiffuseTexture,\n      newProps.useAlphaFromDiffuseTexture,\n      'useAlphaFromDiffuseTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useEmissiveAsIllumination,\n      newProps.useEmissiveAsIllumination,\n      'useEmissiveAsIllumination',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useGlossinessFromSpecularMapAlpha,\n      newProps.useGlossinessFromSpecularMapAlpha,\n      'useGlossinessFromSpecularMapAlpha',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useLightmapAsShadowmap,\n      newProps.useLightmapAsShadowmap,\n      'useLightmapAsShadowmap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useLogarithmicDepth,\n      newProps.useLogarithmicDepth,\n      'useLogarithmicDepth',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useObjectSpaceNormalMap,\n      newProps.useObjectSpaceNormalMap,\n      'useObjectSpaceNormalMap',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.useParallax, newProps.useParallax, 'useParallax', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useParallaxOcclusion,\n      newProps.useParallaxOcclusion,\n      'useParallaxOcclusion',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useReflectionFresnelFromSpecular,\n      newProps.useReflectionFresnelFromSpecular,\n      'useReflectionFresnelFromSpecular',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useReflectionOverAlpha,\n      newProps.useReflectionOverAlpha,\n      'useReflectionOverAlpha',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useSpecularOverAlpha,\n      newProps.useSpecularOverAlpha,\n      'useSpecularOverAlpha',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This is the default material used in Babylon. It is the best trade off between quality\n * and performances.\n *\n * This code has been generated\n */\nexport class FiberStandardMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStandardMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StandardMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberStandardMaterial',\n  }\n}\n\nexport class FiberBackgroundMaterialPropsHandler\n  implements PropsHandler<FiberBackgroundMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberBackgroundMaterialProps,\n    newProps: FiberBackgroundMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(\n      oldProps._perceptualColor,\n      newProps._perceptualColor,\n      '_perceptualColor',\n      changedProps\n    )\n    // type: 'BabylonjsCoreColorCurves' property (not coded) BabylonjsCoreBackgroundMaterial.cameraColorCurves.\n    checkPrimitiveDiff(\n      oldProps.cameraColorCurvesEnabled,\n      newProps.cameraColorCurvesEnabled,\n      'cameraColorCurvesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraColorGradingEnabled,\n      newProps.cameraColorGradingEnabled,\n      'cameraColorGradingEnabled',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.cameraColorGradingTexture,\n      newProps.cameraColorGradingTexture,\n      'cameraColorGradingTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraContrast,\n      newProps.cameraContrast,\n      'cameraContrast',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraExposure,\n      newProps.cameraExposure,\n      'cameraExposure',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cameraToneMappingEnabled,\n      newProps.cameraToneMappingEnabled,\n      'cameraToneMappingEnabled',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.diffuseTexture,\n      newProps.diffuseTexture,\n      'diffuseTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.enableNoise, newProps.enableNoise, 'enableNoise', changedProps)\n    checkPrimitiveDiff(\n      oldProps.fovMultiplier,\n      newProps.fovMultiplier,\n      'fovMultiplier',\n      changedProps\n    )\n    // type: 'BabylonjsCoreImageProcessingConfiguration' property (not coded) BabylonjsCoreBackgroundMaterial.imageProcessingConfiguration.\n    checkPrimitiveDiff(\n      oldProps.maxSimultaneousLights,\n      newProps.maxSimultaneousLights,\n      'maxSimultaneousLights',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.opacityFresnel,\n      newProps.opacityFresnel,\n      'opacityFresnel',\n      changedProps\n    )\n    checkColor3Diff(oldProps.primaryColor, newProps.primaryColor, 'primaryColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.primaryColorHighlightLevel,\n      newProps.primaryColorHighlightLevel,\n      'primaryColorHighlightLevel',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.primaryColorShadowLevel,\n      newProps.primaryColorShadowLevel,\n      'primaryColorShadowLevel',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionAmount,\n      newProps.reflectionAmount,\n      'reflectionAmount',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionBlur,\n      newProps.reflectionBlur,\n      'reflectionBlur',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionFalloffDistance,\n      newProps.reflectionFalloffDistance,\n      'reflectionFalloffDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionFresnel,\n      newProps.reflectionFresnel,\n      'reflectionFresnel',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionReflectance0,\n      newProps.reflectionReflectance0,\n      'reflectionReflectance0',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionReflectance90,\n      newProps.reflectionReflectance90,\n      'reflectionReflectance90',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionStandardFresnelWeight,\n      newProps.reflectionStandardFresnelWeight,\n      'reflectionStandardFresnelWeight',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.reflectionTexture,\n      newProps.reflectionTexture,\n      'reflectionTexture',\n      changedProps\n    )\n    checkVector3Diff(oldProps.sceneCenter, newProps.sceneCenter, 'sceneCenter', false, changedProps)\n    checkPrimitiveDiff(\n      oldProps['sceneCenter-x'],\n      newProps['sceneCenter-x'],\n      'sceneCenter.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['sceneCenter-y'],\n      newProps['sceneCenter-y'],\n      'sceneCenter.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['sceneCenter-z'],\n      newProps['sceneCenter-z'],\n      'sceneCenter.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.shadowLevel, newProps.shadowLevel, 'shadowLevel', changedProps)\n    // type: 'BabylonjsCoreIShadowLight[]' property (not coded) BabylonjsCoreBackgroundMaterial.shadowLights.\n    checkPrimitiveDiff(oldProps.shadowOnly, newProps.shadowOnly, 'shadowOnly', changedProps)\n    checkPrimitiveDiff(oldProps.switchToBGR, newProps.switchToBGR, 'switchToBGR', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useEquirectangularFOV,\n      newProps.useEquirectangularFOV,\n      'useEquirectangularFOV',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.useRGBColor, newProps.useRGBColor, 'useRGBColor', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Background material used to create an efficient environment around your scene.\n *\n * This code has been generated\n */\nexport class FiberBackgroundMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberBackgroundMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BackgroundMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberBackgroundMaterial',\n  }\n}\n\nexport class FiberFluentMaterialPropsHandler implements PropsHandler<FiberFluentMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberFluentMaterialProps,\n    newProps: FiberFluentMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(oldProps.albedoColor, newProps.albedoColor, 'albedoColor', changedProps)\n    checkTextureDiff(oldProps.albedoTexture, newProps.albedoTexture, 'albedoTexture', changedProps)\n    checkPrimitiveDiff(\n      oldProps.borderMinValue,\n      newProps.borderMinValue,\n      'borderMinValue',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.borderWidth, newProps.borderWidth, 'borderWidth', changedProps)\n    checkPrimitiveDiff(\n      oldProps.edgeSmoothingValue,\n      newProps.edgeSmoothingValue,\n      'edgeSmoothingValue',\n      changedProps\n    )\n    checkColor4Diff(oldProps.hoverColor, newProps.hoverColor, 'hoverColor', changedProps)\n    checkVector3Diff(\n      oldProps.hoverPosition,\n      newProps.hoverPosition,\n      'hoverPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['hoverPosition-x'],\n      newProps['hoverPosition-x'],\n      'hoverPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['hoverPosition-y'],\n      newProps['hoverPosition-y'],\n      'hoverPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['hoverPosition-z'],\n      newProps['hoverPosition-z'],\n      'hoverPosition.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.hoverRadius, newProps.hoverRadius, 'hoverRadius', changedProps)\n    checkColor3Diff(\n      oldProps.innerGlowColor,\n      newProps.innerGlowColor,\n      'innerGlowColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.innerGlowColorIntensity,\n      newProps.innerGlowColorIntensity,\n      'innerGlowColorIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderBorders,\n      newProps.renderBorders,\n      'renderBorders',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderHoverLight,\n      newProps.renderHoverLight,\n      'renderHoverLight',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render controls with fluent design\n *\n * This code has been generated\n */\nexport class FiberFluentMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFluentMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FluentMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberFluentMaterial',\n  }\n}\n\nexport class FiberFluentButtonMaterialPropsHandler\n  implements PropsHandler<FiberFluentButtonMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberFluentButtonMaterialProps,\n    newProps: FiberFluentButtonMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkVector3Diff(\n      oldProps.activeFaceDir,\n      newProps.activeFaceDir,\n      'activeFaceDir',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['activeFaceDir-x'],\n      newProps['activeFaceDir-x'],\n      'activeFaceDir.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['activeFaceDir-y'],\n      newProps['activeFaceDir-y'],\n      'activeFaceDir.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['activeFaceDir-z'],\n      newProps['activeFaceDir-z'],\n      'activeFaceDir.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.activeFaceUp,\n      newProps.activeFaceUp,\n      'activeFaceUp',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['activeFaceUp-x'],\n      newProps['activeFaceUp-x'],\n      'activeFaceUp.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['activeFaceUp-y'],\n      newProps['activeFaceUp-y'],\n      'activeFaceUp.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['activeFaceUp-z'],\n      newProps['activeFaceUp-z'],\n      'activeFaceUp.z',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobFadeLength,\n      newProps.blobFadeLength,\n      'blobFadeLength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobFarDistance,\n      newProps.blobFarDistance,\n      'blobFarDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobFarSize, newProps.blobFarSize, 'blobFarSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobIntensity,\n      newProps.blobIntensity,\n      'blobIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobNearDistance,\n      newProps.blobNearDistance,\n      'blobNearDistance',\n      changedProps\n    )\n    checkColor4Diff(oldProps.edgeColor, newProps.edgeColor, 'edgeColor', changedProps)\n    checkPrimitiveDiff(oldProps.edgeWidth, newProps.edgeWidth, 'edgeWidth', changedProps)\n    checkPrimitiveDiff(oldProps.enableFade, newProps.enableFade, 'enableFade', changedProps)\n    checkPrimitiveDiff(oldProps.fadeWidth, newProps.fadeWidth, 'fadeWidth', changedProps)\n    checkVector3Diff(\n      oldProps.globalLeftIndexTipPosition,\n      newProps.globalLeftIndexTipPosition,\n      'globalLeftIndexTipPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalLeftIndexTipPosition-x'],\n      newProps['globalLeftIndexTipPosition-x'],\n      'globalLeftIndexTipPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalLeftIndexTipPosition-y'],\n      newProps['globalLeftIndexTipPosition-y'],\n      'globalLeftIndexTipPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalLeftIndexTipPosition-z'],\n      newProps['globalLeftIndexTipPosition-z'],\n      'globalLeftIndexTipPosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.globalRightIndexTipPosition,\n      newProps.globalRightIndexTipPosition,\n      'globalRightIndexTipPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalRightIndexTipPosition-x'],\n      newProps['globalRightIndexTipPosition-x'],\n      'globalRightIndexTipPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalRightIndexTipPosition-y'],\n      newProps['globalRightIndexTipPosition-y'],\n      'globalRightIndexTipPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalRightIndexTipPosition-z'],\n      newProps['globalRightIndexTipPosition-z'],\n      'globalRightIndexTipPosition.z',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.leftBlobEnable,\n      newProps.leftBlobEnable,\n      'leftBlobEnable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.leftBlobFade, newProps.leftBlobFade, 'leftBlobFade', changedProps)\n    checkPrimitiveDiff(\n      oldProps.leftBlobInnerFade,\n      newProps.leftBlobInnerFade,\n      'leftBlobInnerFade',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.leftBlobNearSize,\n      newProps.leftBlobNearSize,\n      'leftBlobNearSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.leftBlobPulse,\n      newProps.leftBlobPulse,\n      'leftBlobPulse',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.proximityAnisotropy,\n      newProps.proximityAnisotropy,\n      'proximityAnisotropy',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.proximityFarDistance,\n      newProps.proximityFarDistance,\n      'proximityFarDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.proximityMaxIntensity,\n      newProps.proximityMaxIntensity,\n      'proximityMaxIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.proximityNearRadius,\n      newProps.proximityNearRadius,\n      'proximityNearRadius',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rightBlobEnable,\n      newProps.rightBlobEnable,\n      'rightBlobEnable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rightBlobFade,\n      newProps.rightBlobFade,\n      'rightBlobFade',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rightBlobInnerFade,\n      newProps.rightBlobInnerFade,\n      'rightBlobInnerFade',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rightBlobNearSize,\n      newProps.rightBlobNearSize,\n      'rightBlobNearSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rightBlobPulse,\n      newProps.rightBlobPulse,\n      'rightBlobPulse',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.selected, newProps.selected, 'selected', changedProps)\n    checkPrimitiveDiff(\n      oldProps.selectedDistance,\n      newProps.selectedDistance,\n      'selectedDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectedFadeLength,\n      newProps.selectedFadeLength,\n      'selectedFadeLength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectionFade,\n      newProps.selectionFade,\n      'selectionFade',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectionFadeSize,\n      newProps.selectionFadeSize,\n      'selectionFadeSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectionFuzz,\n      newProps.selectionFuzz,\n      'selectionFuzz',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.showFrame, newProps.showFrame, 'showFrame', changedProps)\n    checkPrimitiveDiff(\n      oldProps.smoothActiveFace,\n      newProps.smoothActiveFace,\n      'smoothActiveFace',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useBlobTexture,\n      newProps.useBlobTexture,\n      'useBlobTexture',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render square buttons with fluent design\n *\n * This code has been generated\n */\nexport class FiberFluentButtonMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFluentButtonMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FluentButtonMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberFluentButtonMaterial',\n  }\n}\n\nexport class FiberFluentBackplateMaterialPropsHandler\n  implements PropsHandler<FiberFluentBackplateMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberFluentBackplateMaterialProps,\n    newProps: FiberFluentBackplateMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.absoluteSizes,\n      newProps.absoluteSizes,\n      'absoluteSizes',\n      changedProps\n    )\n    checkColor4Diff(oldProps.baseColor, newProps.baseColor, 'baseColor', changedProps)\n    checkPrimitiveDiff(oldProps.blobFade, newProps.blobFade, 'blobFade', changedProps)\n    checkPrimitiveDiff(oldProps.blobFade2, newProps.blobFade2, 'blobFade2', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobFadeLength,\n      newProps.blobFadeLength,\n      'blobFadeLength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobFarDistance,\n      newProps.blobFarDistance,\n      'blobFarDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobFarSize, newProps.blobFarSize, 'blobFarSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobIntensity,\n      newProps.blobIntensity,\n      'blobIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobNearDistance,\n      newProps.blobNearDistance,\n      'blobNearDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobNearSize, newProps.blobNearSize, 'blobNearSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobNearSize2,\n      newProps.blobNearSize2,\n      'blobNearSize2',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobPulse, newProps.blobPulse, 'blobPulse', changedProps)\n    checkPrimitiveDiff(oldProps.blobPulse2, newProps.blobPulse2, 'blobPulse2', changedProps)\n    checkPrimitiveDiff(oldProps.fadeOut, newProps.fadeOut, 'fadeOut', changedProps)\n    checkVector3Diff(\n      oldProps.globalLeftIndexTipPosition,\n      newProps.globalLeftIndexTipPosition,\n      'globalLeftIndexTipPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalLeftIndexTipPosition-x'],\n      newProps['globalLeftIndexTipPosition-x'],\n      'globalLeftIndexTipPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalLeftIndexTipPosition-y'],\n      newProps['globalLeftIndexTipPosition-y'],\n      'globalLeftIndexTipPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalLeftIndexTipPosition-z'],\n      newProps['globalLeftIndexTipPosition-z'],\n      'globalLeftIndexTipPosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.globalRightIndexTipPosition,\n      newProps.globalRightIndexTipPosition,\n      'globalRightIndexTipPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalRightIndexTipPosition-x'],\n      newProps['globalRightIndexTipPosition-x'],\n      'globalRightIndexTipPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalRightIndexTipPosition-y'],\n      newProps['globalRightIndexTipPosition-y'],\n      'globalRightIndexTipPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['globalRightIndexTipPosition-z'],\n      newProps['globalRightIndexTipPosition-z'],\n      'globalRightIndexTipPosition.z',\n      changedProps\n    )\n    checkColor4Diff(\n      oldProps.highlightColor,\n      newProps.highlightColor,\n      'highlightColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.highlightWidth,\n      newProps.highlightWidth,\n      'highlightWidth',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.iridescenceEdgeIntensity,\n      newProps.iridescenceEdgeIntensity,\n      'iridescenceEdgeIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.iridescenceIntensity,\n      newProps.iridescenceIntensity,\n      'iridescenceIntensity',\n      changedProps\n    )\n    checkColor4Diff(oldProps.lineColor, newProps.lineColor, 'lineColor', changedProps)\n    checkPrimitiveDiff(oldProps.lineWidth, newProps.lineWidth, 'lineWidth', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render square buttons with fluent design\n *\n * This code has been generated\n */\nexport class FiberFluentBackplateMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFluentBackplateMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FluentBackplateMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberFluentBackplateMaterial',\n  }\n}\n\nexport class FiberMRDLSliderBarMaterialPropsHandler\n  implements PropsHandler<FiberMRDLSliderBarMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMRDLSliderBarMaterialProps,\n    newProps: FiberMRDLSliderBarMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor4Diff(oldProps.albedo, newProps.albedo, 'albedo', changedProps)\n    checkPrimitiveDiff(oldProps.bevelBack, newProps.bevelBack, 'bevelBack', changedProps)\n    checkPrimitiveDiff(\n      oldProps.bevelBackStretch,\n      newProps.bevelBackStretch,\n      'bevelBackStretch',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.bevelFront, newProps.bevelFront, 'bevelFront', changedProps)\n    checkPrimitiveDiff(\n      oldProps.bevelFrontStretch,\n      newProps.bevelFrontStretch,\n      'bevelFrontStretch',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobFade, newProps.blobFade, 'blobFade', changedProps)\n    checkPrimitiveDiff(oldProps.blobFade2, newProps.blobFade2, 'blobFade2', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobFadeLength,\n      newProps.blobFadeLength,\n      'blobFadeLength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobFarDistance,\n      newProps.blobFarDistance,\n      'blobFarDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobFarSize, newProps.blobFarSize, 'blobFarSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobIntensity,\n      newProps.blobIntensity,\n      'blobIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobNearDistance,\n      newProps.blobNearDistance,\n      'blobNearDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobNearSize, newProps.blobNearSize, 'blobNearSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobNearSize2,\n      newProps.blobNearSize2,\n      'blobNearSize2',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.blobPosition,\n      newProps.blobPosition,\n      'blobPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-x'],\n      newProps['blobPosition-x'],\n      'blobPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-y'],\n      newProps['blobPosition-y'],\n      'blobPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-z'],\n      newProps['blobPosition-z'],\n      'blobPosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.blobPosition2,\n      newProps.blobPosition2,\n      'blobPosition2',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-x'],\n      newProps['blobPosition2-x'],\n      'blobPosition2.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-y'],\n      newProps['blobPosition2-y'],\n      'blobPosition2.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-z'],\n      newProps['blobPosition2-z'],\n      'blobPosition2.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobPulse, newProps.blobPulse, 'blobPulse', changedProps)\n    checkPrimitiveDiff(oldProps.blobPulse2, newProps.blobPulse2, 'blobPulse2', changedProps)\n    // type: 'BabylonjsCoreTexture' property (not coded) BabylonjsGuiMRDLSliderBarMaterial.blobTexture.\n    checkPrimitiveDiff(oldProps.bulgeEnabled, newProps.bulgeEnabled, 'bulgeEnabled', changedProps)\n    checkPrimitiveDiff(oldProps.bulgeHeight, newProps.bulgeHeight, 'bulgeHeight', changedProps)\n    checkPrimitiveDiff(oldProps.bulgeRadius, newProps.bulgeRadius, 'bulgeRadius', changedProps)\n    checkPrimitiveDiff(oldProps.clipFade, newProps.clipFade, 'clipFade', changedProps)\n    checkPrimitiveDiff(\n      oldProps.decalFrontOnly,\n      newProps.decalFrontOnly,\n      'decalFrontOnly',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsGuiMRDLSliderBarMaterial.decalScaleXY.\n    checkPrimitiveDiff(oldProps.edgeReflect, newProps.edgeReflect, 'edgeReflect', changedProps)\n    checkPrimitiveDiff(oldProps.frontReflect, newProps.frontReflect, 'frontReflect', changedProps)\n    checkPrimitiveDiff(oldProps.fuzz, newProps.fuzz, 'fuzz', changedProps)\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderBarMaterial.globalLeftIndexMiddlePosition.\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderBarMaterial.globalLeftIndexTipPosition.\n    checkPrimitiveDiff(\n      oldProps.globalLeftIndexTipProximity,\n      newProps.globalLeftIndexTipProximity,\n      'globalLeftIndexTipProximity',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderBarMaterial.globalLeftThumbTipPosition.\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderBarMaterial.globalRightIndexMiddlePosition.\n    checkPrimitiveDiff(\n      oldProps.globalRightIndexTipProximity,\n      newProps.globalRightIndexTipProximity,\n      'globalRightIndexTipProximity',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderBarMaterial.globalRightThumbTipPosition.\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderBarMaterial.globaRightIndexTipPosition.\n    checkColor4Diff(oldProps.groundColor, newProps.groundColor, 'groundColor', changedProps)\n    checkColor4Diff(oldProps.horizonColor, newProps.horizonColor, 'horizonColor', changedProps)\n    checkPrimitiveDiff(oldProps.horizonPower, newProps.horizonPower, 'horizonPower', changedProps)\n    checkPrimitiveDiff(oldProps.hueShift, newProps.hueShift, 'hueShift', changedProps)\n    checkPrimitiveDiff(\n      oldProps.indirectDiffuse,\n      newProps.indirectDiffuse,\n      'indirectDiffuse',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.iridescenceIntensity,\n      newProps.iridescenceIntensity,\n      'iridescenceIntensity',\n      changedProps\n    )\n    checkColor4Diff(\n      oldProps.leftGradientColor,\n      newProps.leftGradientColor,\n      'leftGradientColor',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.leftIndexMiddlePosition,\n      newProps.leftIndexMiddlePosition,\n      'leftIndexMiddlePosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexMiddlePosition-x'],\n      newProps['leftIndexMiddlePosition-x'],\n      'leftIndexMiddlePosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexMiddlePosition-y'],\n      newProps['leftIndexMiddlePosition-y'],\n      'leftIndexMiddlePosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexMiddlePosition-z'],\n      newProps['leftIndexMiddlePosition-z'],\n      'leftIndexMiddlePosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.leftIndexPosition,\n      newProps.leftIndexPosition,\n      'leftIndexPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexPosition-x'],\n      newProps['leftIndexPosition-x'],\n      'leftIndexPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexPosition-y'],\n      newProps['leftIndexPosition-y'],\n      'leftIndexPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexPosition-z'],\n      newProps['leftIndexPosition-z'],\n      'leftIndexPosition.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.minFuzz, newProps.minFuzz, 'minFuzz', changedProps)\n    checkPrimitiveDiff(oldProps.power, newProps.power, 'power', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkPrimitiveDiff(\n      oldProps.radiusBottomLeft,\n      newProps.radiusBottomLeft,\n      'radiusBottomLeft',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusBottomRight,\n      newProps.radiusBottomRight,\n      'radiusBottomRight',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusTopLeft,\n      newProps.radiusTopLeft,\n      'radiusTopLeft',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusTopRight,\n      newProps.radiusTopRight,\n      'radiusTopRight',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.reflection, newProps.reflection, 'reflection', changedProps)\n    checkColor4Diff(\n      oldProps.rightGradientColor,\n      newProps.rightGradientColor,\n      'rightGradientColor',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.rightIndexMiddlePosition,\n      newProps.rightIndexMiddlePosition,\n      'rightIndexMiddlePosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexMiddlePosition-x'],\n      newProps['rightIndexMiddlePosition-x'],\n      'rightIndexMiddlePosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexMiddlePosition-y'],\n      newProps['rightIndexMiddlePosition-y'],\n      'rightIndexMiddlePosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexMiddlePosition-z'],\n      newProps['rightIndexMiddlePosition-z'],\n      'rightIndexMiddlePosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.rightIndexPosition,\n      newProps.rightIndexPosition,\n      'rightIndexPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexPosition-x'],\n      newProps['rightIndexPosition-x'],\n      'rightIndexPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexPosition-y'],\n      newProps['rightIndexPosition-y'],\n      'rightIndexPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexPosition-z'],\n      newProps['rightIndexPosition-z'],\n      'rightIndexPosition.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.rimHueShift, newProps.rimHueShift, 'rimHueShift', changedProps)\n    checkPrimitiveDiff(oldProps.rimIntensity, newProps.rimIntensity, 'rimIntensity', changedProps)\n    checkPrimitiveDiff(\n      oldProps.rimSaturationShift,\n      newProps.rimSaturationShift,\n      'rimSaturationShift',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rimValueShift,\n      newProps.rimValueShift,\n      'rimValueShift',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.saturationShift,\n      newProps.saturationShift,\n      'saturationShift',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.sharpness, newProps.sharpness, 'sharpness', changedProps)\n    checkPrimitiveDiff(oldProps.shininess, newProps.shininess, 'shininess', changedProps)\n    checkColor4Diff(oldProps.skyColor, newProps.skyColor, 'skyColor', changedProps)\n    checkPrimitiveDiff(oldProps.specular, newProps.specular, 'specular', changedProps)\n    checkPrimitiveDiff(oldProps.subsurface, newProps.subsurface, 'subsurface', changedProps)\n    checkPrimitiveDiff(oldProps.sunIntensity, newProps.sunIntensity, 'sunIntensity', changedProps)\n    checkPrimitiveDiff(oldProps.sunPhi, newProps.sunPhi, 'sunPhi', changedProps)\n    checkPrimitiveDiff(oldProps.sunTheta, newProps.sunTheta, 'sunTheta', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useGlobalLeftIndex,\n      newProps.useGlobalLeftIndex,\n      'useGlobalLeftIndex',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useGlobalRightIndex,\n      newProps.useGlobalRightIndex,\n      'useGlobalRightIndex',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.valueShift, newProps.valueShift, 'valueShift', changedProps)\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render Slider Bar material with MRDL\n *\n * This code has been generated\n */\nexport class FiberMRDLSliderBarMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMRDLSliderBarMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MRDLSliderBarMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberMRDLSliderBarMaterial',\n  }\n}\n\nexport class FiberMRDLSliderThumbMaterialPropsHandler\n  implements PropsHandler<FiberMRDLSliderThumbMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMRDLSliderThumbMaterialProps,\n    newProps: FiberMRDLSliderThumbMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor4Diff(oldProps.albedo, newProps.albedo, 'albedo', changedProps)\n    checkPrimitiveDiff(oldProps.bevelBack, newProps.bevelBack, 'bevelBack', changedProps)\n    checkPrimitiveDiff(\n      oldProps.bevelBackStretch,\n      newProps.bevelBackStretch,\n      'bevelBackStretch',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.bevelFront, newProps.bevelFront, 'bevelFront', changedProps)\n    checkPrimitiveDiff(\n      oldProps.bevelFrontStretch,\n      newProps.bevelFrontStretch,\n      'bevelFrontStretch',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobFade, newProps.blobFade, 'blobFade', changedProps)\n    checkPrimitiveDiff(oldProps.blobFade2, newProps.blobFade2, 'blobFade2', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobFadeLength,\n      newProps.blobFadeLength,\n      'blobFadeLength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobFarDistance,\n      newProps.blobFarDistance,\n      'blobFarDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobFarSize, newProps.blobFarSize, 'blobFarSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobIntensity,\n      newProps.blobIntensity,\n      'blobIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobNearDistance,\n      newProps.blobNearDistance,\n      'blobNearDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobNearSize, newProps.blobNearSize, 'blobNearSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobNearSize2,\n      newProps.blobNearSize2,\n      'blobNearSize2',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.blobPosition,\n      newProps.blobPosition,\n      'blobPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-x'],\n      newProps['blobPosition-x'],\n      'blobPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-y'],\n      newProps['blobPosition-y'],\n      'blobPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-z'],\n      newProps['blobPosition-z'],\n      'blobPosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.blobPosition2,\n      newProps.blobPosition2,\n      'blobPosition2',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-x'],\n      newProps['blobPosition2-x'],\n      'blobPosition2.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-y'],\n      newProps['blobPosition2-y'],\n      'blobPosition2.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-z'],\n      newProps['blobPosition2-z'],\n      'blobPosition2.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobPulse, newProps.blobPulse, 'blobPulse', changedProps)\n    checkPrimitiveDiff(oldProps.blobPulse2, newProps.blobPulse2, 'blobPulse2', changedProps)\n    // type: 'BabylonjsCoreTexture' property (not coded) BabylonjsGuiMRDLSliderThumbMaterial.blobTexture.\n    checkPrimitiveDiff(oldProps.bulgeEnabled, newProps.bulgeEnabled, 'bulgeEnabled', changedProps)\n    checkPrimitiveDiff(oldProps.bulgeHeight, newProps.bulgeHeight, 'bulgeHeight', changedProps)\n    checkPrimitiveDiff(oldProps.bulgeRadius, newProps.bulgeRadius, 'bulgeRadius', changedProps)\n    checkPrimitiveDiff(oldProps.clipFade, newProps.clipFade, 'clipFade', changedProps)\n    checkPrimitiveDiff(\n      oldProps.decalFrontOnly,\n      newProps.decalFrontOnly,\n      'decalFrontOnly',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsGuiMRDLSliderThumbMaterial.decalScaleXY.\n    checkPrimitiveDiff(oldProps.edgeReflect, newProps.edgeReflect, 'edgeReflect', changedProps)\n    checkPrimitiveDiff(oldProps.frontReflect, newProps.frontReflect, 'frontReflect', changedProps)\n    checkPrimitiveDiff(oldProps.fuzz, newProps.fuzz, 'fuzz', changedProps)\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderThumbMaterial.globalLeftIndexMiddlePosition.\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderThumbMaterial.globalLeftIndexTipPosition.\n    checkPrimitiveDiff(\n      oldProps.globalLeftIndexTipProximity,\n      newProps.globalLeftIndexTipProximity,\n      'globalLeftIndexTipProximity',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderThumbMaterial.globalLeftThumbTipPosition.\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderThumbMaterial.globalRightIndexMiddlePosition.\n    checkPrimitiveDiff(\n      oldProps.globalRightIndexTipProximity,\n      newProps.globalRightIndexTipProximity,\n      'globalRightIndexTipProximity',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderThumbMaterial.globalRightThumbTipPosition.\n    // type: 'BabylonjsCoreVector4' property (not coded) BabylonjsGuiMRDLSliderThumbMaterial.globaRightIndexTipPosition.\n    checkColor4Diff(oldProps.groundColor, newProps.groundColor, 'groundColor', changedProps)\n    checkColor4Diff(oldProps.horizonColor, newProps.horizonColor, 'horizonColor', changedProps)\n    checkPrimitiveDiff(oldProps.horizonPower, newProps.horizonPower, 'horizonPower', changedProps)\n    checkPrimitiveDiff(oldProps.hueShift, newProps.hueShift, 'hueShift', changedProps)\n    checkPrimitiveDiff(\n      oldProps.indirectDiffuse,\n      newProps.indirectDiffuse,\n      'indirectDiffuse',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.iridescenceIntensity,\n      newProps.iridescenceIntensity,\n      'iridescenceIntensity',\n      changedProps\n    )\n    checkColor4Diff(\n      oldProps.leftGradientColor,\n      newProps.leftGradientColor,\n      'leftGradientColor',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.leftIndexMiddlePosition,\n      newProps.leftIndexMiddlePosition,\n      'leftIndexMiddlePosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexMiddlePosition-x'],\n      newProps['leftIndexMiddlePosition-x'],\n      'leftIndexMiddlePosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexMiddlePosition-y'],\n      newProps['leftIndexMiddlePosition-y'],\n      'leftIndexMiddlePosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexMiddlePosition-z'],\n      newProps['leftIndexMiddlePosition-z'],\n      'leftIndexMiddlePosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.leftIndexPosition,\n      newProps.leftIndexPosition,\n      'leftIndexPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexPosition-x'],\n      newProps['leftIndexPosition-x'],\n      'leftIndexPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexPosition-y'],\n      newProps['leftIndexPosition-y'],\n      'leftIndexPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['leftIndexPosition-z'],\n      newProps['leftIndexPosition-z'],\n      'leftIndexPosition.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.minFuzz, newProps.minFuzz, 'minFuzz', changedProps)\n    checkPrimitiveDiff(oldProps.power, newProps.power, 'power', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkPrimitiveDiff(\n      oldProps.radiusBottomLeft,\n      newProps.radiusBottomLeft,\n      'radiusBottomLeft',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusBottomRight,\n      newProps.radiusBottomRight,\n      'radiusBottomRight',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusTopLeft,\n      newProps.radiusTopLeft,\n      'radiusTopLeft',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusTopRight,\n      newProps.radiusTopRight,\n      'radiusTopRight',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.reflection, newProps.reflection, 'reflection', changedProps)\n    checkColor4Diff(\n      oldProps.rightGradientColor,\n      newProps.rightGradientColor,\n      'rightGradientColor',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.rightIndexMiddlePosition,\n      newProps.rightIndexMiddlePosition,\n      'rightIndexMiddlePosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexMiddlePosition-x'],\n      newProps['rightIndexMiddlePosition-x'],\n      'rightIndexMiddlePosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexMiddlePosition-y'],\n      newProps['rightIndexMiddlePosition-y'],\n      'rightIndexMiddlePosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexMiddlePosition-z'],\n      newProps['rightIndexMiddlePosition-z'],\n      'rightIndexMiddlePosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.rightIndexPosition,\n      newProps.rightIndexPosition,\n      'rightIndexPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexPosition-x'],\n      newProps['rightIndexPosition-x'],\n      'rightIndexPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexPosition-y'],\n      newProps['rightIndexPosition-y'],\n      'rightIndexPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['rightIndexPosition-z'],\n      newProps['rightIndexPosition-z'],\n      'rightIndexPosition.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.rimHueShift, newProps.rimHueShift, 'rimHueShift', changedProps)\n    checkPrimitiveDiff(oldProps.rimIntensity, newProps.rimIntensity, 'rimIntensity', changedProps)\n    checkPrimitiveDiff(\n      oldProps.rimSaturationShift,\n      newProps.rimSaturationShift,\n      'rimSaturationShift',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rimValueShift,\n      newProps.rimValueShift,\n      'rimValueShift',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.saturationShift,\n      newProps.saturationShift,\n      'saturationShift',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.sharpness, newProps.sharpness, 'sharpness', changedProps)\n    checkPrimitiveDiff(oldProps.shininess, newProps.shininess, 'shininess', changedProps)\n    checkColor4Diff(oldProps.skyColor, newProps.skyColor, 'skyColor', changedProps)\n    checkPrimitiveDiff(oldProps.specular, newProps.specular, 'specular', changedProps)\n    checkPrimitiveDiff(oldProps.subsurface, newProps.subsurface, 'subsurface', changedProps)\n    checkPrimitiveDiff(oldProps.sunIntensity, newProps.sunIntensity, 'sunIntensity', changedProps)\n    checkPrimitiveDiff(oldProps.sunPhi, newProps.sunPhi, 'sunPhi', changedProps)\n    checkPrimitiveDiff(oldProps.sunTheta, newProps.sunTheta, 'sunTheta', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useGlobalLeftIndex,\n      newProps.useGlobalLeftIndex,\n      'useGlobalLeftIndex',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useGlobalRightIndex,\n      newProps.useGlobalRightIndex,\n      'useGlobalRightIndex',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.valueShift, newProps.valueShift, 'valueShift', changedProps)\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render Slider Thumb material with MRDL\n *\n * This code has been generated\n */\nexport class FiberMRDLSliderThumbMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMRDLSliderThumbMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MRDLSliderThumbMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberMRDLSliderThumbMaterial',\n  }\n}\n\nexport class FiberMRDLBackplateMaterialPropsHandler\n  implements PropsHandler<FiberMRDLBackplateMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMRDLBackplateMaterialProps,\n    newProps: FiberMRDLBackplateMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.absoluteSizes,\n      newProps.absoluteSizes,\n      'absoluteSizes',\n      changedProps\n    )\n    checkColor4Diff(oldProps.baseColor, newProps.baseColor, 'baseColor', changedProps)\n    checkColor4Diff(\n      oldProps.bottomLeftGradientColor,\n      newProps.bottomLeftGradientColor,\n      'bottomLeftGradientColor',\n      changedProps\n    )\n    checkColor4Diff(\n      oldProps.bottomRightGradientColor,\n      newProps.bottomRightGradientColor,\n      'bottomRightGradientColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.edgeLineGradientBlend,\n      newProps.edgeLineGradientBlend,\n      'edgeLineGradientBlend',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.edgePower, newProps.edgePower, 'edgePower', changedProps)\n    checkPrimitiveDiff(oldProps.edgeWidth, newProps.edgeWidth, 'edgeWidth', changedProps)\n    checkPrimitiveDiff(oldProps.fadeOut, newProps.fadeOut, 'fadeOut', changedProps)\n    checkColor4Diff(oldProps.gradientColor, newProps.gradientColor, 'gradientColor', changedProps)\n    checkColor4Diff(\n      oldProps.highlightColor,\n      newProps.highlightColor,\n      'highlightColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.highlightWidth,\n      newProps.highlightWidth,\n      'highlightWidth',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.iridescenceEdgeIntensity,\n      newProps.iridescenceEdgeIntensity,\n      'iridescenceEdgeIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.iridescenceIntensity,\n      newProps.iridescenceIntensity,\n      'iridescenceIntensity',\n      changedProps\n    )\n    checkColor4Diff(\n      oldProps.iridescenceTint,\n      newProps.iridescenceTint,\n      'iridescenceTint',\n      changedProps\n    )\n    checkColor4Diff(oldProps.lineColor, newProps.lineColor, 'lineColor', changedProps)\n    checkPrimitiveDiff(oldProps.lineWidth, newProps.lineWidth, 'lineWidth', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkPrimitiveDiff(\n      oldProps.radiusBottomLeft,\n      newProps.radiusBottomLeft,\n      'radiusBottomLeft',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusBottomRight,\n      newProps.radiusBottomRight,\n      'radiusBottomRight',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusTopLeft,\n      newProps.radiusTopLeft,\n      'radiusTopLeft',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.radiusTopRight,\n      newProps.radiusTopRight,\n      'radiusTopRight',\n      changedProps\n    )\n    checkColor4Diff(\n      oldProps.topLeftGradientColor,\n      newProps.topLeftGradientColor,\n      'topLeftGradientColor',\n      changedProps\n    )\n    checkColor4Diff(\n      oldProps.topRightGradientColor,\n      newProps.topRightGradientColor,\n      'topRightGradientColor',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render backplate material with MRDL\n *\n * This code has been generated\n */\nexport class FiberMRDLBackplateMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMRDLBackplateMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MRDLBackplateMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberMRDLBackplateMaterial',\n  }\n}\n\nexport class FiberMRDLBackglowMaterialPropsHandler\n  implements PropsHandler<FiberMRDLBackglowMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMRDLBackglowMaterialProps,\n    newProps: FiberMRDLBackglowMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.absoluteSizes,\n      newProps.absoluteSizes,\n      'absoluteSizes',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.bevelRadius, newProps.bevelRadius, 'bevelRadius', changedProps)\n    checkPrimitiveDiff(oldProps.bias, newProps.bias, 'bias', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blendExponent,\n      newProps.blendExponent,\n      'blendExponent',\n      changedProps\n    )\n    checkColor4Diff(oldProps.color, newProps.color, 'color', changedProps)\n    checkPrimitiveDiff(oldProps.falloff, newProps.falloff, 'falloff', changedProps)\n    checkColor4Diff(oldProps.innerColor, newProps.innerColor, 'innerColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.intensityFadeInExponent,\n      newProps.intensityFadeInExponent,\n      'intensityFadeInExponent',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lineWidth, newProps.lineWidth, 'lineWidth', changedProps)\n    checkPrimitiveDiff(oldProps.maxIntensity, newProps.maxIntensity, 'maxIntensity', changedProps)\n    checkPrimitiveDiff(oldProps.motion, newProps.motion, 'motion', changedProps)\n    checkPrimitiveDiff(oldProps.outerFuzzEnd, newProps.outerFuzzEnd, 'outerFuzzEnd', changedProps)\n    checkPrimitiveDiff(\n      oldProps.outerFuzzStart,\n      newProps.outerFuzzStart,\n      'outerFuzzStart',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.tuningMotion, newProps.tuningMotion, 'tuningMotion', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/** This code has been generated */\nexport class FiberMRDLBackglowMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMRDLBackglowMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MRDLBackglowMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberMRDLBackglowMaterial',\n  }\n}\n\nexport class FiberMRDLFrontplateMaterialPropsHandler\n  implements PropsHandler<FiberMRDLFrontplateMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMRDLFrontplateMaterialProps,\n    newProps: FiberMRDLFrontplateMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.blobEnable, newProps.blobEnable, 'blobEnable', changedProps)\n    checkPrimitiveDiff(oldProps.blobEnable2, newProps.blobEnable2, 'blobEnable2', changedProps)\n    checkPrimitiveDiff(oldProps.blobFade, newProps.blobFade, 'blobFade', changedProps)\n    checkPrimitiveDiff(oldProps.blobFade2, newProps.blobFade2, 'blobFade2', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobFadeLength,\n      newProps.blobFadeLength,\n      'blobFadeLength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobFarDistance,\n      newProps.blobFarDistance,\n      'blobFarDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobFarSize, newProps.blobFarSize, 'blobFarSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobInnerFade,\n      newProps.blobInnerFade,\n      'blobInnerFade',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobInnerFade2,\n      newProps.blobInnerFade2,\n      'blobInnerFade2',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobIntensity,\n      newProps.blobIntensity,\n      'blobIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blobNearDistance,\n      newProps.blobNearDistance,\n      'blobNearDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobNearSize, newProps.blobNearSize, 'blobNearSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobNearSize2,\n      newProps.blobNearSize2,\n      'blobNearSize2',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.blobPosition,\n      newProps.blobPosition,\n      'blobPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-x'],\n      newProps['blobPosition-x'],\n      'blobPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-y'],\n      newProps['blobPosition-y'],\n      'blobPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition-z'],\n      newProps['blobPosition-z'],\n      'blobPosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.blobPosition2,\n      newProps.blobPosition2,\n      'blobPosition2',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-x'],\n      newProps['blobPosition2-x'],\n      'blobPosition2.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-y'],\n      newProps['blobPosition2-y'],\n      'blobPosition2.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['blobPosition2-z'],\n      newProps['blobPosition2-z'],\n      'blobPosition2.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blobPulse, newProps.blobPulse, 'blobPulse', changedProps)\n    checkPrimitiveDiff(oldProps.blobPulse2, newProps.blobPulse2, 'blobPulse2', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blobPulseMaxSize,\n      newProps.blobPulseMaxSize,\n      'blobPulseMaxSize',\n      changedProps\n    )\n    checkColor4Diff(oldProps.edgeColor, newProps.edgeColor, 'edgeColor', changedProps)\n    checkPrimitiveDiff(oldProps.fadeOut, newProps.fadeOut, 'fadeOut', changedProps)\n    checkPrimitiveDiff(oldProps.gazeFocus, newProps.gazeFocus, 'gazeFocus', changedProps)\n    checkPrimitiveDiff(\n      oldProps.gazeIntensity,\n      newProps.gazeIntensity,\n      'gazeIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lineWidth, newProps.lineWidth, 'lineWidth', changedProps)\n    checkPrimitiveDiff(\n      oldProps.proximityAnisotropy,\n      newProps.proximityAnisotropy,\n      'proximityAnisotropy',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.proximityFarDistance,\n      newProps.proximityFarDistance,\n      'proximityFarDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.proximityMaxIntensity,\n      newProps.proximityMaxIntensity,\n      'proximityMaxIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.proximityNearRadius,\n      newProps.proximityNearRadius,\n      'proximityNearRadius',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkPrimitiveDiff(\n      oldProps.relativeToHeight,\n      newProps.relativeToHeight,\n      'relativeToHeight',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.selected, newProps.selected, 'selected', changedProps)\n    checkPrimitiveDiff(\n      oldProps.selectedDistance,\n      newProps.selectedDistance,\n      'selectedDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectedFadeLength,\n      newProps.selectedFadeLength,\n      'selectedFadeLength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectionFade,\n      newProps.selectionFade,\n      'selectionFade',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectionFadeSize,\n      newProps.selectionFadeSize,\n      'selectionFadeSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectionFuzz,\n      newProps.selectionFuzz,\n      'selectionFuzz',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useGlobalLeftIndex,\n      newProps.useGlobalLeftIndex,\n      'useGlobalLeftIndex',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useGlobalRightIndex,\n      newProps.useGlobalRightIndex,\n      'useGlobalRightIndex',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/** This code has been generated */\nexport class FiberMRDLFrontplateMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMRDLFrontplateMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MRDLFrontplateMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberMRDLFrontplateMaterial',\n  }\n}\n\nexport class FiberMRDLInnerquadMaterialPropsHandler\n  implements PropsHandler<FiberMRDLInnerquadMaterialProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMRDLInnerquadMaterialProps,\n    newProps: FiberMRDLInnerquadMaterialProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor4Diff(oldProps.color, newProps.color, 'color', changedProps)\n    checkPrimitiveDiff(oldProps.fixedRadius, newProps.fixedRadius, 'fixedRadius', changedProps)\n    checkPrimitiveDiff(oldProps.glowFalloff, newProps.glowFalloff, 'glowFalloff', changedProps)\n    checkPrimitiveDiff(oldProps.glowFraction, newProps.glowFraction, 'glowFraction', changedProps)\n    checkPrimitiveDiff(oldProps.glowMax, newProps.glowMax, 'glowMax', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/** This code has been generated */\nexport class FiberMRDLInnerquadMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMRDLInnerquadMaterialPropsHandler(),\n      new FiberPushMaterialPropsHandler(),\n      new FiberMaterialPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MRDLInnerquadMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberMRDLInnerquadMaterial',\n  }\n}\n\nexport class FiberMultiMaterialPropsHandler implements PropsHandler<FiberMultiMaterialProps> {\n  getPropertyUpdates(\n    oldProps: FiberMultiMaterialProps,\n    newProps: FiberMultiMaterialProps\n  ): PropertyUpdate[] | null {\n    // skipping type: 'BabylonjsCoreMaterial[]' property (not coded) BabylonjsCoreMultiMaterial.subMaterials.\n    return null // no props to check\n  }\n}\n\n/**\n * A multi-material is used to apply different materials to different parts of the same object without the need of\n * separate meshes. This can be use to improve performances.\n *\n * This code has been generated\n */\nexport class FiberMultiMaterial implements HasPropsHandlers<FiberMaterialProps> {\n  private propsHandlers: PropsHandler<FiberMaterialProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberMultiMaterialPropsHandler(), new FiberMaterialPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MultiMaterial',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isMaterial: true,\n    className: 'FiberMultiMaterial',\n  }\n}\n\nexport class FiberLightPropsHandler implements PropsHandler<FiberLightProps> {\n  getPropertyUpdates(\n    oldProps: FiberLightProps,\n    newProps: FiberLightProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(oldProps.diffuse, newProps.diffuse, 'diffuse', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreLight.excludedMeshes.\n    checkPrimitiveDiff(\n      oldProps.excludeWithLayerMask,\n      newProps.excludeWithLayerMask,\n      'excludeWithLayerMask',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.falloffType, newProps.falloffType, 'falloffType', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreLight.includedOnlyMeshes.\n    checkPrimitiveDiff(\n      oldProps.includeOnlyWithLayerMask,\n      newProps.includeOnlyWithLayerMask,\n      'includeOnlyWithLayerMask',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.intensity, newProps.intensity, 'intensity', changedProps)\n    checkPrimitiveDiff(\n      oldProps.intensityMode,\n      newProps.intensityMode,\n      'intensityMode',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lightmapMode, newProps.lightmapMode, 'lightmapMode', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkPrimitiveDiff(oldProps.range, newProps.range, 'range', changedProps)\n    checkPrimitiveDiff(\n      oldProps.renderPriority,\n      newProps.renderPriority,\n      'renderPriority',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.shadowEnabled,\n      newProps.shadowEnabled,\n      'shadowEnabled',\n      changedProps\n    )\n    checkColor3Diff(oldProps.specular, newProps.specular, 'specular', changedProps)\n    checkMethodDiff(oldProps.setEnabled, newProps.setEnabled, 'setEnabled', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Base class of all the lights in Babylon. It groups all the generic information about lights.\n * Lights are used, as you would expect, to affect how meshes are seen, in terms of both illumination and colour.\n * All meshes allow light to pass through them unless shadow generation is activated. The default number of lights allowed is four but this can be increased.\n *\n * This code has been generated\n */\nexport class FiberLight implements HasPropsHandlers<FiberLightProps> {\n  private propsHandlers: PropsHandler<FiberLightProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberLightPropsHandler(), new FiberNodePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLightProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLightProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Light',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    className: 'FiberLight',\n  }\n}\n\nexport class FiberShadowLightPropsHandler implements PropsHandler<FiberShadowLightProps> {\n  getPropertyUpdates(\n    oldProps: FiberShadowLightProps,\n    newProps: FiberShadowLightProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkLambdaDiff(\n      oldProps.customProjectionMatrixBuilder,\n      newProps.customProjectionMatrixBuilder,\n      'customProjectionMatrixBuilder',\n      changedProps\n    )\n    checkVector3Diff(oldProps.direction, newProps.direction, 'direction', true, changedProps)\n    checkVector3Diff(oldProps.position, newProps.position, 'position', true, changedProps)\n    checkPrimitiveDiff(oldProps.shadowMaxZ, newProps.shadowMaxZ, 'shadowMaxZ', changedProps)\n    checkPrimitiveDiff(oldProps.shadowMinZ, newProps.shadowMinZ, 'shadowMinZ', changedProps)\n    checkVector3Diff(\n      oldProps.transformedDirection,\n      newProps.transformedDirection,\n      'transformedDirection',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['transformedDirection-x'],\n      newProps['transformedDirection-x'],\n      'transformedDirection.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['transformedDirection-y'],\n      newProps['transformedDirection-y'],\n      'transformedDirection.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['transformedDirection-z'],\n      newProps['transformedDirection-z'],\n      'transformedDirection.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.transformedPosition,\n      newProps.transformedPosition,\n      'transformedPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['transformedPosition-x'],\n      newProps['transformedPosition-x'],\n      'transformedPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['transformedPosition-y'],\n      newProps['transformedPosition-y'],\n      'transformedPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['transformedPosition-z'],\n      newProps['transformedPosition-z'],\n      'transformedPosition.z',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setDirectionToTarget,\n      newProps.setDirectionToTarget,\n      'setDirectionToTarget',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setShadowProjectionMatrix,\n      newProps.setShadowProjectionMatrix,\n      'setShadowProjectionMatrix',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Base implementation IShadowLight\n * It groups all the common behaviour in order to reduce duplication and better follow the DRY pattern.\n *\n * This code has been generated\n */\nexport class FiberShadowLight implements HasPropsHandlers<FiberLightProps> {\n  private propsHandlers: PropsHandler<FiberLightProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberShadowLightPropsHandler(),\n      new FiberLightPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLightProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLightProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ShadowLight',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    isShadowLight: true,\n    className: 'FiberShadowLight',\n  }\n}\n\nexport class FiberDirectionalLightPropsHandler implements PropsHandler<FiberDirectionalLightProps> {\n  getPropertyUpdates(\n    oldProps: FiberDirectionalLightProps,\n    newProps: FiberDirectionalLightProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.autoCalcShadowZBounds,\n      newProps.autoCalcShadowZBounds,\n      'autoCalcShadowZBounds',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.autoUpdateExtends,\n      newProps.autoUpdateExtends,\n      'autoUpdateExtends',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.orthoBottom, newProps.orthoBottom, 'orthoBottom', changedProps)\n    checkPrimitiveDiff(oldProps.orthoLeft, newProps.orthoLeft, 'orthoLeft', changedProps)\n    checkPrimitiveDiff(oldProps.orthoRight, newProps.orthoRight, 'orthoRight', changedProps)\n    checkPrimitiveDiff(oldProps.orthoTop, newProps.orthoTop, 'orthoTop', changedProps)\n    checkPrimitiveDiff(\n      oldProps.shadowFrustumSize,\n      newProps.shadowFrustumSize,\n      'shadowFrustumSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.shadowOrthoScale,\n      newProps.shadowOrthoScale,\n      'shadowOrthoScale',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A directional light is defined by a direction (what a surprise!).\n * The light is emitted from everywhere in the specified direction, and has an infinite range.\n * An example of a directional light is when a distance planet is lit by the apparently parallel lines of light from its sun. Light in a downward direction will light the top of an object.\n * Documentation: https://doc.babylonjs.com/features/featuresDeepDive/lights/lights_introduction\n *\n * This code has been generated\n */\nexport class FiberDirectionalLight implements HasPropsHandlers<FiberLightProps> {\n  private propsHandlers: PropsHandler<FiberLightProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberDirectionalLightPropsHandler(),\n      new FiberShadowLightPropsHandler(),\n      new FiberLightPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLightProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLightProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DirectionalLight',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'direction',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    isShadowLight: true,\n    className: 'FiberDirectionalLight',\n  }\n}\n\nexport class FiberPointLightPropsHandler implements PropsHandler<FiberPointLightProps> {\n  getPropertyUpdates(\n    oldProps: FiberPointLightProps,\n    newProps: FiberPointLightProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkVector3Diff(oldProps.direction, newProps.direction, 'direction', true, changedProps)\n    checkPrimitiveDiff(oldProps.shadowAngle, newProps.shadowAngle, 'shadowAngle', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A point light is a light defined by an unique point in world space.\n * The light is emitted in every direction from this point.\n * A good example of a point light is a standard light bulb.\n * Documentation: https://doc.babylonjs.com/features/featuresDeepDive/lights/lights_introduction\n *\n * This code has been generated\n */\nexport class FiberPointLight implements HasPropsHandlers<FiberLightProps> {\n  private propsHandlers: PropsHandler<FiberLightProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPointLightPropsHandler(),\n      new FiberShadowLightPropsHandler(),\n      new FiberLightPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLightProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLightProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PointLight',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    isShadowLight: true,\n    className: 'FiberPointLight',\n  }\n}\n\nexport class FiberSpotLightPropsHandler implements PropsHandler<FiberSpotLightProps> {\n  getPropertyUpdates(\n    oldProps: FiberSpotLightProps,\n    newProps: FiberSpotLightProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.angle, newProps.angle, 'angle', changedProps)\n    checkPrimitiveDiff(oldProps.exponent, newProps.exponent, 'exponent', changedProps)\n    checkPrimitiveDiff(oldProps.innerAngle, newProps.innerAngle, 'innerAngle', changedProps)\n    checkTextureDiff(\n      oldProps.projectionTexture,\n      newProps.projectionTexture,\n      'projectionTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.projectionTextureLightFar,\n      newProps.projectionTextureLightFar,\n      'projectionTextureLightFar',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.projectionTextureLightNear,\n      newProps.projectionTextureLightNear,\n      'projectionTextureLightNear',\n      changedProps\n    )\n    // type: 'BabylonjsCoreMatrix' property (not coded) BabylonjsCoreSpotLight.projectionTextureProjectionLightMatrix.\n    checkVector3Diff(\n      oldProps.projectionTextureUpDirection,\n      newProps.projectionTextureUpDirection,\n      'projectionTextureUpDirection',\n      true,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.shadowAngleScale,\n      newProps.shadowAngleScale,\n      'shadowAngleScale',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A spot light is defined by a position, a direction, an angle, and an exponent.\n * These values define a cone of light starting from the position, emitting toward the direction.\n * The angle, in radians, defines the size (field of illumination) of the spotlight's conical beam,\n * and the exponent defines the speed of the decay of the light with distance (reach).\n * Documentation: https://doc.babylonjs.com/features/featuresDeepDive/lights/lights_introduction\n *\n * This code has been generated\n */\nexport class FiberSpotLight implements HasPropsHandlers<FiberLightProps> {\n  private propsHandlers: PropsHandler<FiberLightProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSpotLightPropsHandler(),\n      new FiberShadowLightPropsHandler(),\n      new FiberLightPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLightProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLightProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SpotLight',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'position',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'direction',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'angle',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'exponent',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    isShadowLight: true,\n    className: 'FiberSpotLight',\n  }\n}\n\nexport class FiberHemisphericLightPropsHandler implements PropsHandler<FiberHemisphericLightProps> {\n  getPropertyUpdates(\n    oldProps: FiberHemisphericLightProps,\n    newProps: FiberHemisphericLightProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkVector3Diff(oldProps.direction, newProps.direction, 'direction', false, changedProps)\n    checkPrimitiveDiff(\n      oldProps['direction-x'],\n      newProps['direction-x'],\n      'direction.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['direction-y'],\n      newProps['direction-y'],\n      'direction.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['direction-z'],\n      newProps['direction-z'],\n      'direction.z',\n      changedProps\n    )\n    checkColor3Diff(oldProps.groundColor, newProps.groundColor, 'groundColor', changedProps)\n    checkMethodDiff(\n      oldProps.setDirectionToTarget,\n      newProps.setDirectionToTarget,\n      'setDirectionToTarget',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The HemisphericLight simulates the ambient environment light,\n * so the passed direction is the light reflection direction, not the incoming direction.\n *\n * This code has been generated\n */\nexport class FiberHemisphericLight implements HasPropsHandlers<FiberLightProps> {\n  private propsHandlers: PropsHandler<FiberLightProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHemisphericLightPropsHandler(),\n      new FiberLightPropsHandler(),\n      new FiberNodePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLightProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLightProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HemisphericLight',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'direction',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isNode: true,\n    className: 'FiberHemisphericLight',\n  }\n}\n\nexport class FiberControlPropsHandler implements PropsHandler<FiberControlProps> {\n  getPropertyUpdates(\n    oldProps: FiberControlProps,\n    newProps: FiberControlProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreIAccessibilityTag' property (not coded) BabylonjsGuiControl.accessibilityTag.\n    checkPrimitiveDiff(oldProps.alpha, newProps.alpha, 'alpha', changedProps)\n    // type: 'BabylonjsCoreAnimation[]' property (not coded) BabylonjsGuiControl.animations.\n    checkPrimitiveDiff(oldProps.clipChildren, newProps.clipChildren, 'clipChildren', changedProps)\n    checkPrimitiveDiff(oldProps.clipContent, newProps.clipContent, 'clipContent', changedProps)\n    checkPrimitiveDiff(oldProps.color, newProps.color, 'color', changedProps)\n    checkPrimitiveDiff(\n      oldProps.descendantsOnlyPadding,\n      newProps.descendantsOnlyPadding,\n      'descendantsOnlyPadding',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.disabledColor,\n      newProps.disabledColor,\n      'disabledColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.disabledColorItem,\n      newProps.disabledColorItem,\n      'disabledColorItem',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.fixedRatio, newProps.fixedRatio, 'fixedRatio', changedProps)\n    checkPrimitiveDiff(\n      oldProps.fixedRatioMasterIsWidth,\n      newProps.fixedRatioMasterIsWidth,\n      'fixedRatioMasterIsWidth',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.fontFamily, newProps.fontFamily, 'fontFamily', changedProps)\n    // type: '{ ascent: number; height: number; descent: number; }' property (not coded) BabylonjsGuiControl.fontOffset.\n    checkPrimitiveDiff(oldProps.fontSize, newProps.fontSize, 'fontSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.fontSizeInPixels,\n      newProps.fontSizeInPixels,\n      'fontSizeInPixels',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.fontStyle, newProps.fontStyle, 'fontStyle', changedProps)\n    checkPrimitiveDiff(oldProps.fontWeight, newProps.fontWeight, 'fontWeight', changedProps)\n    // type: 'BabylonjsGuiBaseGradient' property (not coded) BabylonjsGuiControl.gradient.\n    checkPrimitiveDiff(oldProps.height, newProps.height, 'height', changedProps)\n    checkPrimitiveDiff(\n      oldProps.heightInPixels,\n      newProps.heightInPixels,\n      'heightInPixels',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.highlightColor,\n      newProps.highlightColor,\n      'highlightColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.highlightLineWidth,\n      newProps.highlightLineWidth,\n      'highlightLineWidth',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.horizontalAlignment,\n      newProps.horizontalAlignment,\n      'horizontalAlignment',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.hoverCursor, newProps.hoverCursor, 'hoverCursor', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.isFocusInvisible,\n      newProps.isFocusInvisible,\n      'isFocusInvisible',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isHighlighted,\n      newProps.isHighlighted,\n      'isHighlighted',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isHitTestVisible,\n      newProps.isHitTestVisible,\n      'isHitTestVisible',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isPointerBlocker,\n      newProps.isPointerBlocker,\n      'isPointerBlocker',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isReadOnly, newProps.isReadOnly, 'isReadOnly', changedProps)\n    checkPrimitiveDiff(oldProps.isVisible, newProps.isVisible, 'isVisible', changedProps)\n    checkPrimitiveDiff(oldProps.left, newProps.left, 'left', changedProps)\n    checkPrimitiveDiff(oldProps.leftInPixels, newProps.leftInPixels, 'leftInPixels', changedProps)\n    checkPrimitiveDiff(oldProps.linkOffsetX, newProps.linkOffsetX, 'linkOffsetX', changedProps)\n    checkPrimitiveDiff(\n      oldProps.linkOffsetXInPixels,\n      newProps.linkOffsetXInPixels,\n      'linkOffsetXInPixels',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.linkOffsetY, newProps.linkOffsetY, 'linkOffsetY', changedProps)\n    checkPrimitiveDiff(\n      oldProps.linkOffsetYInPixels,\n      newProps.linkOffsetYInPixels,\n      'linkOffsetYInPixels',\n      changedProps\n    )\n    // type: 'any' property (not coded) BabylonjsGuiControl.metadata.\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(\n      oldProps.notRenderable,\n      newProps.notRenderable,\n      'notRenderable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAccessibilityTagChangedObservable,\n      newProps.onAccessibilityTagChangedObservable,\n      'onAccessibilityTagChangedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterDrawObservable,\n      newProps.onAfterDrawObservable,\n      'onAfterDrawObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeDrawObservable,\n      newProps.onBeforeDrawObservable,\n      'onBeforeDrawObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDirtyObservable,\n      newProps.onDirtyObservable,\n      'onDirtyObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDisposeObservable,\n      newProps.onDisposeObservable,\n      'onDisposeObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onEnabledStateChangedObservable,\n      newProps.onEnabledStateChangedObservable,\n      'onEnabledStateChangedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onIsVisibleChangedObservable,\n      newProps.onIsVisibleChangedObservable,\n      'onIsVisibleChangedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerClickObservable,\n      newProps.onPointerClickObservable,\n      'onPointerClickObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerDownObservable,\n      newProps.onPointerDownObservable,\n      'onPointerDownObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerEnterObservable,\n      newProps.onPointerEnterObservable,\n      'onPointerEnterObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerMoveObservable,\n      newProps.onPointerMoveObservable,\n      'onPointerMoveObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerOutObservable,\n      newProps.onPointerOutObservable,\n      'onPointerOutObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerUpObservable,\n      newProps.onPointerUpObservable,\n      'onPointerUpObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onWheelObservable,\n      newProps.onWheelObservable,\n      'onWheelObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.overlapDeltaMultiplier,\n      newProps.overlapDeltaMultiplier,\n      'overlapDeltaMultiplier',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.overlapGroup, newProps.overlapGroup, 'overlapGroup', changedProps)\n    checkPrimitiveDiff(\n      oldProps.paddingBottom,\n      newProps.paddingBottom,\n      'paddingBottom',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.paddingBottomInPixels,\n      newProps.paddingBottomInPixels,\n      'paddingBottomInPixels',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.paddingLeft, newProps.paddingLeft, 'paddingLeft', changedProps)\n    checkPrimitiveDiff(\n      oldProps.paddingLeftInPixels,\n      newProps.paddingLeftInPixels,\n      'paddingLeftInPixels',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.paddingRight, newProps.paddingRight, 'paddingRight', changedProps)\n    checkPrimitiveDiff(\n      oldProps.paddingRightInPixels,\n      newProps.paddingRightInPixels,\n      'paddingRightInPixels',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.paddingTop, newProps.paddingTop, 'paddingTop', changedProps)\n    checkPrimitiveDiff(\n      oldProps.paddingTopInPixels,\n      newProps.paddingTopInPixels,\n      'paddingTopInPixels',\n      changedProps\n    )\n    // type: 'BabylonjsGuiContainer' property (not coded) BabylonjsGuiControl.parent.\n    checkPrimitiveDiff(oldProps.rotation, newProps.rotation, 'rotation', changedProps)\n    checkPrimitiveDiff(oldProps.scaleX, newProps.scaleX, 'scaleX', changedProps)\n    checkPrimitiveDiff(oldProps.scaleY, newProps.scaleY, 'scaleY', changedProps)\n    checkPrimitiveDiff(oldProps.shadowBlur, newProps.shadowBlur, 'shadowBlur', changedProps)\n    checkPrimitiveDiff(oldProps.shadowColor, newProps.shadowColor, 'shadowColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.shadowOffsetX,\n      newProps.shadowOffsetX,\n      'shadowOffsetX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.shadowOffsetY,\n      newProps.shadowOffsetY,\n      'shadowOffsetY',\n      changedProps\n    )\n    // type: 'BabylonjsGuiStyle' property (not coded) BabylonjsGuiControl.style.\n    checkPrimitiveDiff(oldProps.top, newProps.top, 'top', changedProps)\n    checkPrimitiveDiff(oldProps.topInPixels, newProps.topInPixels, 'topInPixels', changedProps)\n    checkPrimitiveDiff(\n      oldProps.transformCenterX,\n      newProps.transformCenterX,\n      'transformCenterX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.transformCenterY,\n      newProps.transformCenterY,\n      'transformCenterY',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.uniqueId, newProps.uniqueId, 'uniqueId', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useBitmapCache,\n      newProps.useBitmapCache,\n      'useBitmapCache',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.verticalAlignment,\n      newProps.verticalAlignment,\n      'verticalAlignment',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    checkPrimitiveDiff(\n      oldProps.widthInPixels,\n      newProps.widthInPixels,\n      'widthInPixels',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.zIndex, newProps.zIndex, 'zIndex', changedProps)\n    checkMethodDiff(oldProps.setPadding, newProps.setPadding, 'setPadding', changedProps)\n    checkMethodDiff(\n      oldProps.setPaddingInPixels,\n      newProps.setPaddingInPixels,\n      'setPaddingInPixels',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Root class used for all 2D controls\n *\n * This code has been generated\n */\nexport class FiberControl implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Control',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberControl',\n  }\n}\n\nexport class FiberContainerPropsHandler implements PropsHandler<FiberContainerProps> {\n  getPropertyUpdates(\n    oldProps: FiberContainerProps,\n    newProps: FiberContainerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.adaptHeightToChildren,\n      newProps.adaptHeightToChildren,\n      'adaptHeightToChildren',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.adaptWidthToChildren,\n      newProps.adaptWidthToChildren,\n      'adaptWidthToChildren',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.background, newProps.background, 'background', changedProps)\n    // type: 'BabylonjsGuiBaseGradient' property (not coded) BabylonjsGuiContainer.backgroundGradient.\n    checkPrimitiveDiff(oldProps.isReadOnly, newProps.isReadOnly, 'isReadOnly', changedProps)\n    checkPrimitiveDiff(\n      oldProps.logLayoutCycleErrors,\n      newProps.logLayoutCycleErrors,\n      'logLayoutCycleErrors',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.maxLayoutCycle,\n      newProps.maxLayoutCycle,\n      'maxLayoutCycle',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onControlAddedObservable,\n      newProps.onControlAddedObservable,\n      'onControlAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onControlRemovedObservable,\n      newProps.onControlRemovedObservable,\n      'onControlRemovedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderToIntermediateTexture,\n      newProps.renderToIntermediateTexture,\n      'renderToIntermediateTexture',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addControl, newProps.addControl, 'addControl', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Root class for 2D containers\n *\n * This code has been generated\n */\nexport class FiberContainer implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberContainerPropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Container',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberContainer',\n  }\n}\n\nexport class FiberRectanglePropsHandler implements PropsHandler<FiberRectangleProps> {\n  getPropertyUpdates(\n    oldProps: FiberRectangleProps,\n    newProps: FiberRectangleProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.cornerRadius, newProps.cornerRadius, 'cornerRadius', changedProps)\n    checkPrimitiveDiff(\n      oldProps.cornerRadiusW,\n      newProps.cornerRadiusW,\n      'cornerRadiusW',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cornerRadiusX,\n      newProps.cornerRadiusX,\n      'cornerRadiusX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cornerRadiusY,\n      newProps.cornerRadiusY,\n      'cornerRadiusY',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cornerRadiusZ,\n      newProps.cornerRadiusZ,\n      'cornerRadiusZ',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(oldProps.thickness, newProps.thickness, 'thickness', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create rectangle container\n *\n * This code has been generated\n */\nexport class FiberRectangle implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberRectanglePropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Rectangle',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberRectangle',\n  }\n}\n\nexport class FiberButtonPropsHandler implements PropsHandler<FiberButtonProps> {\n  getPropertyUpdates(\n    oldProps: FiberButtonProps,\n    newProps: FiberButtonProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.delegatePickingToChildren,\n      newProps.delegatePickingToChildren,\n      'delegatePickingToChildren',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkLambdaDiff(\n      oldProps.pointerDownAnimation,\n      newProps.pointerDownAnimation,\n      'pointerDownAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerEnterAnimation,\n      newProps.pointerEnterAnimation,\n      'pointerEnterAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerOutAnimation,\n      newProps.pointerOutAnimation,\n      'pointerOutAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerUpAnimation,\n      newProps.pointerUpAnimation,\n      'pointerUpAnimation',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create 2D buttons\n *\n * This code has been generated\n */\nexport class FiberButton implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberButtonPropsHandler(),\n      new FiberRectanglePropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Button',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberButton',\n  }\n}\n\nexport class FiberFocusableButtonPropsHandler implements PropsHandler<FiberFocusableButtonProps> {\n  getPropertyUpdates(\n    oldProps: FiberFocusableButtonProps,\n    newProps: FiberFocusableButtonProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.focusedColor, newProps.focusedColor, 'focusedColor', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onBlurObservable,\n      newProps.onBlurObservable,\n      'onBlurObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onFocusObservable,\n      newProps.onFocusObservable,\n      'onFocusObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onKeyboardEventProcessedObservable,\n      newProps.onKeyboardEventProcessedObservable,\n      'onKeyboardEventProcessedObservable',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a focusable button that can easily handle keyboard events\n *\n * This code has been generated\n */\nexport class FiberFocusableButton implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFocusableButtonPropsHandler(),\n      new FiberButtonPropsHandler(),\n      new FiberRectanglePropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FocusableButton',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberFocusableButton',\n  }\n}\n\nexport class FiberSelectionPanelPropsHandler implements PropsHandler<FiberSelectionPanelProps> {\n  getPropertyUpdates(\n    oldProps: FiberSelectionPanelProps,\n    newProps: FiberSelectionPanelProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.barColor, newProps.barColor, 'barColor', changedProps)\n    checkPrimitiveDiff(oldProps.barHeight, newProps.barHeight, 'barHeight', changedProps)\n    checkPrimitiveDiff(\n      oldProps.buttonBackground,\n      newProps.buttonBackground,\n      'buttonBackground',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.buttonColor, newProps.buttonColor, 'buttonColor', changedProps)\n    // type: 'BabylonjsGuiSelectorGroup[]' property (not coded) BabylonjsGuiSelectionPanel.groups.\n    checkPrimitiveDiff(oldProps.headerColor, newProps.headerColor, 'headerColor', changedProps)\n    checkPrimitiveDiff(oldProps.labelColor, newProps.labelColor, 'labelColor', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(oldProps.spacerHeight, newProps.spacerHeight, 'spacerHeight', changedProps)\n    checkMethodDiff(oldProps.addGroup, newProps.addGroup, 'addGroup', changedProps)\n    checkMethodDiff(\n      oldProps.addToGroupCheckbox,\n      newProps.addToGroupCheckbox,\n      'addToGroupCheckbox',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addToGroupRadio,\n      newProps.addToGroupRadio,\n      'addToGroupRadio',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addToGroupSlider,\n      newProps.addToGroupSlider,\n      'addToGroupSlider',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setHeaderName, newProps.setHeaderName, 'setHeaderName', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to hold the controls for the checkboxes, radio buttons and sliders\n *\n * This code has been generated\n */\nexport class FiberSelectionPanel implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSelectionPanelPropsHandler(),\n      new FiberRectanglePropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SelectionPanel',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'groups',\n        type: 'BabylonjsGuiSelectorGroup[]',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberSelectionPanel',\n  }\n}\n\nexport class FiberScrollViewerPropsHandler implements PropsHandler<FiberScrollViewerProps> {\n  getPropertyUpdates(\n    oldProps: FiberScrollViewerProps,\n    newProps: FiberScrollViewerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.barBackground,\n      newProps.barBackground,\n      'barBackground',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.barColor, newProps.barColor, 'barColor', changedProps)\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiScrollViewer.barImage.\n    checkPrimitiveDiff(\n      oldProps.barImageHeight,\n      newProps.barImageHeight,\n      'barImageHeight',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.barSize, newProps.barSize, 'barSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.forceHorizontalBar,\n      newProps.forceHorizontalBar,\n      'forceHorizontalBar',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceVerticalBar,\n      newProps.forceVerticalBar,\n      'forceVerticalBar',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.freezeControls,\n      newProps.freezeControls,\n      'freezeControls',\n      changedProps\n    )\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiScrollViewer.horizontalBarImage.\n    checkPrimitiveDiff(\n      oldProps.horizontalBarImageHeight,\n      newProps.horizontalBarImageHeight,\n      'horizontalBarImageHeight',\n      changedProps\n    )\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiScrollViewer.horizontalThumbImage.\n    checkPrimitiveDiff(\n      oldProps.scrollBackground,\n      newProps.scrollBackground,\n      'scrollBackground',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.thumbHeight, newProps.thumbHeight, 'thumbHeight', changedProps)\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiScrollViewer.thumbImage.\n    checkPrimitiveDiff(oldProps.thumbLength, newProps.thumbLength, 'thumbLength', changedProps)\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiScrollViewer.verticalBarImage.\n    checkPrimitiveDiff(\n      oldProps.verticalBarImageHeight,\n      newProps.verticalBarImageHeight,\n      'verticalBarImageHeight',\n      changedProps\n    )\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiScrollViewer.verticalThumbImage.\n    checkPrimitiveDiff(\n      oldProps.wheelPrecision,\n      newProps.wheelPrecision,\n      'wheelPrecision',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addControl, newProps.addControl, 'addControl', changedProps)\n    checkMethodDiff(\n      oldProps.setBucketSizes,\n      newProps.setBucketSizes,\n      'setBucketSizes',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to hold a viewer window and sliders in a grid\n *\n * This code has been generated\n */\nexport class FiberScrollViewer implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberScrollViewerPropsHandler(),\n      new FiberRectanglePropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ScrollViewer',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'isImageBased',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberScrollViewer',\n  }\n}\n\nexport class FiberToggleButtonPropsHandler implements PropsHandler<FiberToggleButtonProps> {\n  getPropertyUpdates(\n    oldProps: FiberToggleButtonProps,\n    newProps: FiberToggleButtonProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.delegatePickingToChildren,\n      newProps.delegatePickingToChildren,\n      'delegatePickingToChildren',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.group, newProps.group, 'group', changedProps)\n    checkPrimitiveDiff(oldProps.isActive, newProps.isActive, 'isActive', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onIsActiveChangedObservable,\n      newProps.onIsActiveChangedObservable,\n      'onIsActiveChangedObservable',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerDownActiveAnimation,\n      newProps.pointerDownActiveAnimation,\n      'pointerDownActiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerDownInactiveAnimation,\n      newProps.pointerDownInactiveAnimation,\n      'pointerDownInactiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerEnterActiveAnimation,\n      newProps.pointerEnterActiveAnimation,\n      'pointerEnterActiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerEnterInactiveAnimation,\n      newProps.pointerEnterInactiveAnimation,\n      'pointerEnterInactiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerOutActiveAnimation,\n      newProps.pointerOutActiveAnimation,\n      'pointerOutActiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerOutInactiveAnimation,\n      newProps.pointerOutInactiveAnimation,\n      'pointerOutInactiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerUpActiveAnimation,\n      newProps.pointerUpActiveAnimation,\n      'pointerUpActiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerUpInactiveAnimation,\n      newProps.pointerUpInactiveAnimation,\n      'pointerUpInactiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.toActiveAnimation,\n      newProps.toActiveAnimation,\n      'toActiveAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.toInactiveAnimation,\n      newProps.toInactiveAnimation,\n      'toInactiveAnimation',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create toggle buttons\n *\n * This code has been generated\n */\nexport class FiberToggleButton implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberToggleButtonPropsHandler(),\n      new FiberRectanglePropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ToggleButton',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'group',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberToggleButton',\n  }\n}\n\nexport class FiberStackPanelPropsHandler implements PropsHandler<FiberStackPanelProps> {\n  getPropertyUpdates(\n    oldProps: FiberStackPanelProps,\n    newProps: FiberStackPanelProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.height, newProps.height, 'height', changedProps)\n    checkPrimitiveDiff(\n      oldProps.ignoreLayoutWarnings,\n      newProps.ignoreLayoutWarnings,\n      'ignoreLayoutWarnings',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isVertical, newProps.isVertical, 'isVertical', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(oldProps.spacing, newProps.spacing, 'spacing', changedProps)\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a 2D stack panel container\n *\n * This code has been generated\n */\nexport class FiberStackPanel implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStackPanelPropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StackPanel',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberStackPanel',\n  }\n}\n\nexport class FiberVirtualKeyboardPropsHandler implements PropsHandler<FiberVirtualKeyboardProps> {\n  getPropertyUpdates(\n    oldProps: FiberVirtualKeyboardProps,\n    newProps: FiberVirtualKeyboardProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.defaultButtonBackground,\n      newProps.defaultButtonBackground,\n      'defaultButtonBackground',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.defaultButtonColor,\n      newProps.defaultButtonColor,\n      'defaultButtonColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.defaultButtonHeight,\n      newProps.defaultButtonHeight,\n      'defaultButtonHeight',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.defaultButtonPaddingBottom,\n      newProps.defaultButtonPaddingBottom,\n      'defaultButtonPaddingBottom',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.defaultButtonPaddingLeft,\n      newProps.defaultButtonPaddingLeft,\n      'defaultButtonPaddingLeft',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.defaultButtonPaddingRight,\n      newProps.defaultButtonPaddingRight,\n      'defaultButtonPaddingRight',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.defaultButtonPaddingTop,\n      newProps.defaultButtonPaddingTop,\n      'defaultButtonPaddingTop',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.defaultButtonWidth,\n      newProps.defaultButtonWidth,\n      'defaultButtonWidth',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onKeyPressObservable,\n      newProps.onKeyPressObservable,\n      'onKeyPressObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.selectedShiftThickness,\n      newProps.selectedShiftThickness,\n      'selectedShiftThickness',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.shiftButtonColor,\n      newProps.shiftButtonColor,\n      'shiftButtonColor',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.shiftState, newProps.shiftState, 'shiftState', changedProps)\n    checkMethodDiff(oldProps.addKeysRow, newProps.addKeysRow, 'addKeysRow', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create virtual keyboard\n *\n * This code has been generated\n */\nexport class FiberVirtualKeyboard implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVirtualKeyboardPropsHandler(),\n      new FiberStackPanelPropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VirtualKeyboard',\n    namespace: '@babylonjs/gui',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberVirtualKeyboard',\n  }\n}\n\nexport class FiberEllipsePropsHandler implements PropsHandler<FiberEllipseProps> {\n  getPropertyUpdates(\n    oldProps: FiberEllipseProps,\n    newProps: FiberEllipseProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(oldProps.thickness, newProps.thickness, 'thickness', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create 2D ellipse containers\n *\n * This code has been generated\n */\nexport class FiberEllipse implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberEllipsePropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Ellipse',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberEllipse',\n  }\n}\n\nexport class FiberGridPropsHandler implements PropsHandler<FiberGridProps> {\n  getPropertyUpdates(oldProps: FiberGridProps, newProps: FiberGridProps): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.clipChildren, newProps.clipChildren, 'clipChildren', changedProps)\n    checkPrimitiveDiff(oldProps.clipContent, newProps.clipContent, 'clipContent', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkMethodDiff(\n      oldProps.addColumnDefinition,\n      newProps.addColumnDefinition,\n      'addColumnDefinition',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addControl, newProps.addControl, 'addControl', changedProps)\n    checkMethodDiff(\n      oldProps.addRowDefinition,\n      newProps.addRowDefinition,\n      'addRowDefinition',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setColumnDefinition,\n      newProps.setColumnDefinition,\n      'setColumnDefinition',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setRowDefinition,\n      newProps.setRowDefinition,\n      'setRowDefinition',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a 2D grid container\n *\n * This code has been generated\n */\nexport class FiberGrid implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGridPropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Grid',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    isGUI2DGrid: true,\n    className: 'FiberGrid',\n  }\n}\n\nexport class Fiber_ScrollViewerWindowPropsHandler\n  implements PropsHandler<Fiber_ScrollViewerWindowProps>\n{\n  getPropertyUpdates(\n    oldProps: Fiber_ScrollViewerWindowProps,\n    newProps: Fiber_ScrollViewerWindowProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.freezeControls,\n      newProps.freezeControls,\n      'freezeControls',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.parentClientHeight,\n      newProps.parentClientHeight,\n      'parentClientHeight',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.parentClientWidth,\n      newProps.parentClientWidth,\n      'parentClientWidth',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setBucketSizes,\n      newProps.setBucketSizes,\n      'setBucketSizes',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to hold a the container for ScrollViewer\n *\n * This code has been generated\n */\nexport class Fiber_ScrollViewerWindow implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new Fiber_ScrollViewerWindowPropsHandler(),\n      new FiberContainerPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: '_ScrollViewerWindow',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'Fiber_ScrollViewerWindow',\n  }\n}\n\nexport class FiberTextBlockPropsHandler implements PropsHandler<FiberTextBlockProps> {\n  getPropertyUpdates(\n    oldProps: FiberTextBlockProps,\n    newProps: FiberTextBlockProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.applyOutlineToUnderline,\n      newProps.applyOutlineToUnderline,\n      'applyOutlineToUnderline',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceResizeWidth,\n      newProps.forceResizeWidth,\n      'forceResizeWidth',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lineSpacing, newProps.lineSpacing, 'lineSpacing', changedProps)\n    checkPrimitiveDiff(oldProps.lineThrough, newProps.lineThrough, 'lineThrough', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onLinesReadyObservable,\n      newProps.onLinesReadyObservable,\n      'onLinesReadyObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTextChangedObservable,\n      newProps.onTextChangedObservable,\n      'onTextChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.outlineColor, newProps.outlineColor, 'outlineColor', changedProps)\n    checkPrimitiveDiff(oldProps.outlineWidth, newProps.outlineWidth, 'outlineWidth', changedProps)\n    checkPrimitiveDiff(oldProps.resizeToFit, newProps.resizeToFit, 'resizeToFit', changedProps)\n    checkPrimitiveDiff(oldProps.text, newProps.text, 'text', changedProps)\n    checkPrimitiveDiff(\n      oldProps.textHorizontalAlignment,\n      newProps.textHorizontalAlignment,\n      'textHorizontalAlignment',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.textVerticalAlignment,\n      newProps.textVerticalAlignment,\n      'textVerticalAlignment',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.textWrapping, newProps.textWrapping, 'textWrapping', changedProps)\n    checkPrimitiveDiff(oldProps.underline, newProps.underline, 'underline', changedProps)\n    checkPrimitiveDiff(oldProps.wordDivider, newProps.wordDivider, 'wordDivider', changedProps)\n    checkLambdaDiff(\n      oldProps.wordSplittingFunction,\n      newProps.wordSplittingFunction,\n      'wordSplittingFunction',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create text block control\n *\n * This code has been generated\n */\nexport class FiberTextBlock implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberTextBlockPropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TextBlock',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'text',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberTextBlock',\n  }\n}\n\nexport class FiberImagePropsHandler implements PropsHandler<FiberImageProps> {\n  getPropertyUpdates(\n    oldProps: FiberImageProps,\n    newProps: FiberImageProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.alt, newProps.alt, 'alt', changedProps)\n    checkPrimitiveDiff(oldProps.autoScale, newProps.autoScale, 'autoScale', changedProps)\n    checkPrimitiveDiff(oldProps.cellHeight, newProps.cellHeight, 'cellHeight', changedProps)\n    checkPrimitiveDiff(oldProps.cellId, newProps.cellId, 'cellId', changedProps)\n    checkPrimitiveDiff(oldProps.cellWidth, newProps.cellWidth, 'cellWidth', changedProps)\n    checkPrimitiveDiff(\n      oldProps.detectPointerOnOpaqueOnly,\n      newProps.detectPointerOnOpaqueOnly,\n      'detectPointerOnOpaqueOnly',\n      changedProps\n    )\n    // type: 'BabylonjsCoreIImage' property (not coded) BabylonjsGuiImage.domImage.\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onImageLoadedObservable,\n      newProps.onImageLoadedObservable,\n      'onImageLoadedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onSVGAttributesComputedObservable,\n      newProps.onSVGAttributesComputedObservable,\n      'onSVGAttributesComputedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.populateNinePatchSlicesFromImage,\n      newProps.populateNinePatchSlicesFromImage,\n      'populateNinePatchSlicesFromImage',\n      changedProps\n    )\n    // type: 'ReferrerPolicy' property (not coded) BabylonjsGuiImage.referrerPolicy.\n    checkPrimitiveDiff(oldProps.sliceBottom, newProps.sliceBottom, 'sliceBottom', changedProps)\n    checkPrimitiveDiff(oldProps.sliceLeft, newProps.sliceLeft, 'sliceLeft', changedProps)\n    checkPrimitiveDiff(oldProps.sliceRight, newProps.sliceRight, 'sliceRight', changedProps)\n    checkPrimitiveDiff(oldProps.sliceTop, newProps.sliceTop, 'sliceTop', changedProps)\n    checkPrimitiveDiff(oldProps.source, newProps.source, 'source', changedProps)\n    checkPrimitiveDiff(oldProps.sourceHeight, newProps.sourceHeight, 'sourceHeight', changedProps)\n    checkPrimitiveDiff(oldProps.sourceLeft, newProps.sourceLeft, 'sourceLeft', changedProps)\n    checkPrimitiveDiff(oldProps.sourceTop, newProps.sourceTop, 'sourceTop', changedProps)\n    checkPrimitiveDiff(oldProps.sourceWidth, newProps.sourceWidth, 'sourceWidth', changedProps)\n    checkPrimitiveDiff(oldProps.stretch, newProps.stretch, 'stretch', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create 2D images\n *\n * This code has been generated\n */\nexport class FiberImage implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberImagePropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Image',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'url',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberImage',\n  }\n}\n\nexport class FiberCheckboxPropsHandler implements PropsHandler<FiberCheckboxProps> {\n  getPropertyUpdates(\n    oldProps: FiberCheckboxProps,\n    newProps: FiberCheckboxProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.background, newProps.background, 'background', changedProps)\n    checkPrimitiveDiff(\n      oldProps.checkSizeRatio,\n      newProps.checkSizeRatio,\n      'checkSizeRatio',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isChecked, newProps.isChecked, 'isChecked', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onIsCheckedChangedObservable,\n      newProps.onIsCheckedChangedObservable,\n      'onIsCheckedChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.thickness, newProps.thickness, 'thickness', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to represent a 2D checkbox\n *\n * This code has been generated\n */\nexport class FiberCheckbox implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberCheckboxPropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Checkbox',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberCheckbox',\n  }\n}\n\nexport class FiberColorPickerPropsHandler implements PropsHandler<FiberColorPickerProps> {\n  getPropertyUpdates(\n    oldProps: FiberColorPickerProps,\n    newProps: FiberColorPickerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.height, newProps.height, 'height', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onValueChangedObservable,\n      newProps.onValueChangedObservable,\n      'onValueChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.size, newProps.size, 'size', changedProps)\n    checkColor3Diff(oldProps.value, newProps.value, 'value', changedProps)\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create color pickers\n *\n * This code has been generated\n */\nexport class FiberColorPicker implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberColorPickerPropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ColorPicker',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberColorPicker',\n  }\n}\n\nexport class FiberInputTextPropsHandler implements PropsHandler<FiberInputTextProps> {\n  getPropertyUpdates(\n    oldProps: FiberInputTextProps,\n    newProps: FiberInputTextProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.addKey, newProps.addKey, 'addKey', changedProps)\n    checkPrimitiveDiff(\n      oldProps.autoStretchWidth,\n      newProps.autoStretchWidth,\n      'autoStretchWidth',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.background, newProps.background, 'background', changedProps)\n    checkPrimitiveDiff(oldProps.currentKey, newProps.currentKey, 'currentKey', changedProps)\n    checkPrimitiveDiff(oldProps.deadKey, newProps.deadKey, 'deadKey', changedProps)\n    checkPrimitiveDiff(\n      oldProps.disableMobilePrompt,\n      newProps.disableMobilePrompt,\n      'disableMobilePrompt',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.focusedBackground,\n      newProps.focusedBackground,\n      'focusedBackground',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.focusedColor, newProps.focusedColor, 'focusedColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.highligherOpacity,\n      newProps.highligherOpacity,\n      'highligherOpacity',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.highlightedText,\n      newProps.highlightedText,\n      'highlightedText',\n      changedProps\n    )\n    // type: 'any' property (not coded) BabylonjsGuiInputText.isTextHighlightOn.\n    checkPrimitiveDiff(oldProps.margin, newProps.margin, 'margin', changedProps)\n    checkPrimitiveDiff(oldProps.maxWidth, newProps.maxWidth, 'maxWidth', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onBeforeKeyAddObservable,\n      newProps.onBeforeKeyAddObservable,\n      'onBeforeKeyAddObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBlurObservable,\n      newProps.onBlurObservable,\n      'onBlurObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onFocusObservable,\n      newProps.onFocusObservable,\n      'onFocusObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.onFocusSelectAll,\n      newProps.onFocusSelectAll,\n      'onFocusSelectAll',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onKeyboardEventProcessedObservable,\n      newProps.onKeyboardEventProcessedObservable,\n      'onKeyboardEventProcessedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTextChangedObservable,\n      newProps.onTextChangedObservable,\n      'onTextChangedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTextCopyObservable,\n      newProps.onTextCopyObservable,\n      'onTextCopyObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTextCutObservable,\n      newProps.onTextCutObservable,\n      'onTextCutObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTextHighlightObservable,\n      newProps.onTextHighlightObservable,\n      'onTextHighlightObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTextPasteObservable,\n      newProps.onTextPasteObservable,\n      'onTextPasteObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.placeholderColor,\n      newProps.placeholderColor,\n      'placeholderColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.placeholderText,\n      newProps.placeholderText,\n      'placeholderText',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.promptMessage,\n      newProps.promptMessage,\n      'promptMessage',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.text, newProps.text, 'text', changedProps)\n    checkPrimitiveDiff(\n      oldProps.textHighlightColor,\n      newProps.textHighlightColor,\n      'textHighlightColor',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.thickness, newProps.thickness, 'thickness', changedProps)\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create input text control\n *\n * This code has been generated\n */\nexport class FiberInputText implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberInputTextPropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'InputText',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'text',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberInputText',\n  }\n}\n\nexport class FiberInputTextAreaPropsHandler implements PropsHandler<FiberInputTextAreaProps> {\n  getPropertyUpdates(\n    oldProps: FiberInputTextAreaProps,\n    newProps: FiberInputTextAreaProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.autoStretchHeight,\n      newProps.autoStretchHeight,\n      'autoStretchHeight',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.height, newProps.height, 'height', changedProps)\n    checkPrimitiveDiff(oldProps.maxHeight, newProps.maxHeight, 'maxHeight', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onLinesReadyObservable,\n      newProps.onLinesReadyObservable,\n      'onLinesReadyObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.outlineColor, newProps.outlineColor, 'outlineColor', changedProps)\n    checkPrimitiveDiff(oldProps.outlineWidth, newProps.outlineWidth, 'outlineWidth', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create input text control\n *\n * This code has been generated\n */\nexport class FiberInputTextArea implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberInputTextAreaPropsHandler(),\n      new FiberInputTextPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'InputTextArea',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'text',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberInputTextArea',\n  }\n}\n\nexport class FiberInputPasswordPropsHandler implements PropsHandler<FiberInputPasswordProps> {\n  getPropertyUpdates(\n    oldProps: FiberInputPasswordProps,\n    newProps: FiberInputPasswordProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Class used to create a password control\n *\n * This code has been generated\n */\nexport class FiberInputPassword implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberInputPasswordPropsHandler(),\n      new FiberInputTextPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'InputPassword',\n    namespace: '@babylonjs/gui',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberInputPassword',\n  }\n}\n\nexport class FiberLinePropsHandler implements PropsHandler<FiberLineProps> {\n  getPropertyUpdates(oldProps: FiberLineProps, newProps: FiberLineProps): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkControlDiff(\n      oldProps.connectedControl,\n      newProps.connectedControl,\n      'connectedControl',\n      changedProps\n    )\n    checkNumericArrayDiff(oldProps.dash, newProps.dash, 'dash', changedProps)\n    checkPrimitiveDiff(\n      oldProps.horizontalAlignment,\n      newProps.horizontalAlignment,\n      'horizontalAlignment',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lineWidth, newProps.lineWidth, 'lineWidth', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(\n      oldProps.verticalAlignment,\n      newProps.verticalAlignment,\n      'verticalAlignment',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.x1, newProps.x1, 'x1', changedProps)\n    checkPrimitiveDiff(oldProps.x2, newProps.x2, 'x2', changedProps)\n    checkPrimitiveDiff(oldProps.y1, newProps.y1, 'y1', changedProps)\n    checkPrimitiveDiff(oldProps.y2, newProps.y2, 'y2', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render 2D lines\n *\n * This code has been generated\n */\nexport class FiberLine implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberLinePropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Line',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberLine',\n  }\n}\n\nexport class FiberMultiLinePropsHandler implements PropsHandler<FiberMultiLineProps> {\n  getPropertyUpdates(\n    oldProps: FiberMultiLineProps,\n    newProps: FiberMultiLineProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkNumericArrayDiff(oldProps.dash, newProps.dash, 'dash', changedProps)\n    checkPrimitiveDiff(\n      oldProps.horizontalAlignment,\n      newProps.horizontalAlignment,\n      'horizontalAlignment',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lineWidth, newProps.lineWidth, 'lineWidth', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkLambdaDiff(oldProps.onPointUpdate, newProps.onPointUpdate, 'onPointUpdate', changedProps)\n    checkPrimitiveDiff(\n      oldProps.verticalAlignment,\n      newProps.verticalAlignment,\n      'verticalAlignment',\n      changedProps\n    )\n    checkMethodDiff(oldProps.add, newProps.add, 'add', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create multi line control\n *\n * This code has been generated\n */\nexport class FiberMultiLine implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberMultiLinePropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MultiLine',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberMultiLine',\n  }\n}\n\nexport class FiberRadioButtonPropsHandler implements PropsHandler<FiberRadioButtonProps> {\n  getPropertyUpdates(\n    oldProps: FiberRadioButtonProps,\n    newProps: FiberRadioButtonProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.background, newProps.background, 'background', changedProps)\n    checkPrimitiveDiff(\n      oldProps.checkSizeRatio,\n      newProps.checkSizeRatio,\n      'checkSizeRatio',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.group, newProps.group, 'group', changedProps)\n    checkPrimitiveDiff(oldProps.isChecked, newProps.isChecked, 'isChecked', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onIsCheckedChangedObservable,\n      newProps.onIsCheckedChangedObservable,\n      'onIsCheckedChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.thickness, newProps.thickness, 'thickness', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create radio button controls\n *\n * This code has been generated\n */\nexport class FiberRadioButton implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberRadioButtonPropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RadioButton',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberRadioButton',\n  }\n}\n\nexport class FiberBaseSliderPropsHandler implements PropsHandler<FiberBaseSliderProps> {\n  getPropertyUpdates(\n    oldProps: FiberBaseSliderProps,\n    newProps: FiberBaseSliderProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.barOffset, newProps.barOffset, 'barOffset', changedProps)\n    checkPrimitiveDiff(oldProps.displayThumb, newProps.displayThumb, 'displayThumb', changedProps)\n    checkPrimitiveDiff(\n      oldProps.isThumbClamped,\n      newProps.isThumbClamped,\n      'isThumbClamped',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isVertical, newProps.isVertical, 'isVertical', changedProps)\n    checkPrimitiveDiff(oldProps.maximum, newProps.maximum, 'maximum', changedProps)\n    checkPrimitiveDiff(oldProps.minimum, newProps.minimum, 'minimum', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onValueChangedObservable,\n      newProps.onValueChangedObservable,\n      'onValueChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.step, newProps.step, 'step', changedProps)\n    checkPrimitiveDiff(oldProps.thumbWidth, newProps.thumbWidth, 'thumbWidth', changedProps)\n    checkPrimitiveDiff(oldProps.value, newProps.value, 'value', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create slider controls\n *\n * This code has been generated\n */\nexport class FiberBaseSlider implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberBaseSliderPropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BaseSlider',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberBaseSlider',\n  }\n}\n\nexport class FiberScrollBarPropsHandler implements PropsHandler<FiberScrollBarProps> {\n  getPropertyUpdates(\n    oldProps: FiberScrollBarProps,\n    newProps: FiberScrollBarProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.background, newProps.background, 'background', changedProps)\n    // type: 'BabylonjsGuiBaseGradient' property (not coded) BabylonjsGuiScrollBar.backgroundGradient.\n    checkPrimitiveDiff(oldProps.borderColor, newProps.borderColor, 'borderColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.invertScrollDirection,\n      newProps.invertScrollDirection,\n      'invertScrollDirection',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create slider controls\n *\n * This code has been generated\n */\nexport class FiberScrollBar implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberScrollBarPropsHandler(),\n      new FiberBaseSliderPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ScrollBar',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberScrollBar',\n  }\n}\n\nexport class FiberImageScrollBarPropsHandler implements PropsHandler<FiberImageScrollBarProps> {\n  getPropertyUpdates(\n    oldProps: FiberImageScrollBarProps,\n    newProps: FiberImageScrollBarProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiImageScrollBar.backgroundImage.\n    checkPrimitiveDiff(\n      oldProps.barImageHeight,\n      newProps.barImageHeight,\n      'barImageHeight',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertScrollDirection,\n      newProps.invertScrollDirection,\n      'invertScrollDirection',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(\n      oldProps.num90RotationInVerticalMode,\n      newProps.num90RotationInVerticalMode,\n      'num90RotationInVerticalMode',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.thumbHeight, newProps.thumbHeight, 'thumbHeight', changedProps)\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiImageScrollBar.thumbImage.\n    checkPrimitiveDiff(oldProps.thumbLength, newProps.thumbLength, 'thumbLength', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create slider controls\n *\n * This code has been generated\n */\nexport class FiberImageScrollBar implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberImageScrollBarPropsHandler(),\n      new FiberBaseSliderPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ImageScrollBar',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberImageScrollBar',\n  }\n}\n\nexport class FiberSliderPropsHandler implements PropsHandler<FiberSliderProps> {\n  getPropertyUpdates(\n    oldProps: FiberSliderProps,\n    newProps: FiberSliderProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.background, newProps.background, 'background', changedProps)\n    // type: 'BabylonjsGuiBaseGradient' property (not coded) BabylonjsGuiSlider.backgroundGradient.\n    checkPrimitiveDiff(oldProps.borderColor, newProps.borderColor, 'borderColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.displayValueBar,\n      newProps.displayValueBar,\n      'displayValueBar',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isThumbCircle,\n      newProps.isThumbCircle,\n      'isThumbCircle',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(oldProps.thumbColor, newProps.thumbColor, 'thumbColor', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create slider controls\n *\n * This code has been generated\n */\nexport class FiberSlider implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSliderPropsHandler(),\n      new FiberBaseSliderPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Slider',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberSlider',\n  }\n}\n\nexport class FiberImageBasedSliderPropsHandler implements PropsHandler<FiberImageBasedSliderProps> {\n  getPropertyUpdates(\n    oldProps: FiberImageBasedSliderProps,\n    newProps: FiberImageBasedSliderProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiImageBasedSlider.backgroundImage.\n    checkPrimitiveDiff(oldProps.displayThumb, newProps.displayThumb, 'displayThumb', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiImageBasedSlider.thumbImage.\n    // type: 'BabylonjsGuiImage' property (not coded) BabylonjsGuiImageBasedSlider.valueBarImage.\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create slider controls based on images\n *\n * This code has been generated\n */\nexport class FiberImageBasedSlider implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberImageBasedSliderPropsHandler(),\n      new FiberBaseSliderPropsHandler(),\n      new FiberControlPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ImageBasedSlider',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberImageBasedSlider',\n  }\n}\n\nexport class FiberDisplayGridPropsHandler implements PropsHandler<FiberDisplayGridProps> {\n  getPropertyUpdates(\n    oldProps: FiberDisplayGridProps,\n    newProps: FiberDisplayGridProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.background, newProps.background, 'background', changedProps)\n    checkPrimitiveDiff(oldProps.cellHeight, newProps.cellHeight, 'cellHeight', changedProps)\n    checkPrimitiveDiff(oldProps.cellWidth, newProps.cellWidth, 'cellWidth', changedProps)\n    checkPrimitiveDiff(\n      oldProps.displayMajorLines,\n      newProps.displayMajorLines,\n      'displayMajorLines',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.displayMinorLines,\n      newProps.displayMinorLines,\n      'displayMinorLines',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.majorLineColor,\n      newProps.majorLineColor,\n      'majorLineColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.majorLineFrequency,\n      newProps.majorLineFrequency,\n      'majorLineFrequency',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.majorLineTickness,\n      newProps.majorLineTickness,\n      'majorLineTickness',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.minorLineColor,\n      newProps.minorLineColor,\n      'minorLineColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.minorLineTickness,\n      newProps.minorLineTickness,\n      'minorLineTickness',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to render a grid\n *\n * This code has been generated\n */\nexport class FiberDisplayGrid implements HasPropsHandlers<FiberControlProps> {\n  private propsHandlers: PropsHandler<FiberControlProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberDisplayGridPropsHandler(), new FiberControlPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControlProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControlProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DisplayGrid',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    className: 'FiberDisplayGrid',\n  }\n}\n\nexport class FiberControl3DPropsHandler implements PropsHandler<FiberControl3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberControl3DProps,\n    newProps: FiberControl3DProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.isVisible, newProps.isVisible, 'isVisible', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onPointerClickObservable,\n      newProps.onPointerClickObservable,\n      'onPointerClickObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerDownObservable,\n      newProps.onPointerDownObservable,\n      'onPointerDownObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerEnterObservable,\n      newProps.onPointerEnterObservable,\n      'onPointerEnterObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerMoveObservable,\n      newProps.onPointerMoveObservable,\n      'onPointerMoveObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerOutObservable,\n      newProps.onPointerOutObservable,\n      'onPointerOutObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerUpObservable,\n      newProps.onPointerUpObservable,\n      'onPointerUpObservable',\n      changedProps\n    )\n    // type: 'BabylonjsGuiContainer3D' property (not coded) BabylonjsGuiControl3D.parent.\n    checkLambdaDiff(\n      oldProps.pointerDownAnimation,\n      newProps.pointerDownAnimation,\n      'pointerDownAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerEnterAnimation,\n      newProps.pointerEnterAnimation,\n      'pointerEnterAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerOutAnimation,\n      newProps.pointerOutAnimation,\n      'pointerOutAnimation',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerUpAnimation,\n      newProps.pointerUpAnimation,\n      'pointerUpAnimation',\n      changedProps\n    )\n    checkVector3Diff(oldProps.position, newProps.position, 'position', true, changedProps)\n    checkVector3Diff(oldProps.scaling, newProps.scaling, 'scaling', true, changedProps)\n    checkMethodDiff(oldProps.addBehavior, newProps.addBehavior, 'addBehavior', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used as base class for controls\n *\n * This code has been generated\n */\nexport class FiberControl3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberControl3DPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Control3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberControl3D',\n  }\n}\n\nexport class FiberContainer3DPropsHandler implements PropsHandler<FiberContainer3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberContainer3DProps,\n    newProps: FiberContainer3DProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.blockLayout, newProps.blockLayout, 'blockLayout', changedProps)\n    checkMethodDiff(oldProps.addControl, newProps.addControl, 'addControl', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create containers for controls\n *\n * This code has been generated\n */\nexport class FiberContainer3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberContainer3DPropsHandler(), new FiberControl3DPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Container3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberContainer3D',\n  }\n}\n\nexport class FiberVolumeBasedPanelPropsHandler implements PropsHandler<FiberVolumeBasedPanelProps> {\n  getPropertyUpdates(\n    oldProps: FiberVolumeBasedPanelProps,\n    newProps: FiberVolumeBasedPanelProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.columns, newProps.columns, 'columns', changedProps)\n    checkPrimitiveDiff(oldProps.margin, newProps.margin, 'margin', changedProps)\n    checkPrimitiveDiff(oldProps.orientation, newProps.orientation, 'orientation', changedProps)\n    checkPrimitiveDiff(oldProps.rows, newProps.rows, 'rows', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Abstract class used to create a container panel deployed on the surface of a volume\n *\n * This code has been generated\n */\nexport class FiberVolumeBasedPanel implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVolumeBasedPanelPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VolumeBasedPanel',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberVolumeBasedPanel',\n  }\n}\n\nexport class FiberCylinderPanelPropsHandler implements PropsHandler<FiberCylinderPanelProps> {\n  getPropertyUpdates(\n    oldProps: FiberCylinderPanelProps,\n    newProps: FiberCylinderPanelProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a container panel deployed on the surface of a cylinder\n *\n * This code has been generated\n */\nexport class FiberCylinderPanel implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberCylinderPanelPropsHandler(),\n      new FiberVolumeBasedPanelPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'CylinderPanel',\n    namespace: '@babylonjs/gui',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberCylinderPanel',\n  }\n}\n\nexport class FiberTouchHolographicMenuPropsHandler\n  implements PropsHandler<FiberTouchHolographicMenuProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberTouchHolographicMenuProps,\n    newProps: FiberTouchHolographicMenuProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.backPlateMargin,\n      newProps.backPlateMargin,\n      'backPlateMargin',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addButton, newProps.addButton, 'addButton', changedProps)\n    checkMethodDiff(oldProps.addControl, newProps.addControl, 'addControl', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Simple menu that can contain holographic buttons\n *\n * This code has been generated\n */\nexport class FiberTouchHolographicMenu implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTouchHolographicMenuPropsHandler(),\n      new FiberVolumeBasedPanelPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TouchHolographicMenu',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberTouchHolographicMenu',\n  }\n}\n\nexport class FiberHandMenuPropsHandler implements PropsHandler<FiberHandMenuProps> {\n  getPropertyUpdates(\n    oldProps: FiberHandMenuProps,\n    newProps: FiberHandMenuProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Hand menu that displays buttons and floats around the hand.\n *\n * This code has been generated\n */\nexport class FiberHandMenu implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHandMenuPropsHandler(),\n      new FiberTouchHolographicMenuPropsHandler(),\n      new FiberVolumeBasedPanelPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HandMenu',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'xr',\n        type: 'BabylonjsCoreWebXRExperienceHelper',\n        optional: false,\n      },\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberHandMenu',\n  }\n}\n\nexport class FiberNearMenuPropsHandler implements PropsHandler<FiberNearMenuProps> {\n  getPropertyUpdates(\n    oldProps: FiberNearMenuProps,\n    newProps: FiberNearMenuProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.isPinned, newProps.isPinned, 'isPinned', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * NearMenu that displays buttons and follows the camera\n *\n * This code has been generated\n */\nexport class FiberNearMenu implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberNearMenuPropsHandler(),\n      new FiberTouchHolographicMenuPropsHandler(),\n      new FiberVolumeBasedPanelPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'NearMenu',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberNearMenu',\n  }\n}\n\nexport class FiberPlanePanelPropsHandler implements PropsHandler<FiberPlanePanelProps> {\n  getPropertyUpdates(\n    oldProps: FiberPlanePanelProps,\n    newProps: FiberPlanePanelProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Class used to create a container panel deployed on the surface of a plane\n *\n * This code has been generated\n */\nexport class FiberPlanePanel implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPlanePanelPropsHandler(),\n      new FiberVolumeBasedPanelPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PlanePanel',\n    namespace: '@babylonjs/gui',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberPlanePanel',\n  }\n}\n\nexport class FiberScatterPanelPropsHandler implements PropsHandler<FiberScatterPanelProps> {\n  getPropertyUpdates(\n    oldProps: FiberScatterPanelProps,\n    newProps: FiberScatterPanelProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.iteration, newProps.iteration, 'iteration', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a container panel where items get randomized planar mapping\n *\n * This code has been generated\n */\nexport class FiberScatterPanel implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberScatterPanelPropsHandler(),\n      new FiberVolumeBasedPanelPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ScatterPanel',\n    namespace: '@babylonjs/gui',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberScatterPanel',\n  }\n}\n\nexport class FiberSpherePanelPropsHandler implements PropsHandler<FiberSpherePanelProps> {\n  getPropertyUpdates(\n    oldProps: FiberSpherePanelProps,\n    newProps: FiberSpherePanelProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a container panel deployed on the surface of a sphere\n *\n * This code has been generated\n */\nexport class FiberSpherePanel implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSpherePanelPropsHandler(),\n      new FiberVolumeBasedPanelPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SpherePanel',\n    namespace: '@babylonjs/gui',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberSpherePanel',\n  }\n}\n\nexport class FiberStackPanel3DPropsHandler implements PropsHandler<FiberStackPanel3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberStackPanel3DProps,\n    newProps: FiberStackPanel3DProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.isVertical, newProps.isVertical, 'isVertical', changedProps)\n    checkPrimitiveDiff(oldProps.margin, newProps.margin, 'margin', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a stack panel in 3D on XY plane\n *\n * This code has been generated\n */\nexport class FiberStackPanel3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStackPanel3DPropsHandler(),\n      new FiberContainer3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StackPanel3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'isVertical',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberStackPanel3D',\n  }\n}\n\nexport class FiberContentDisplay3DPropsHandler implements PropsHandler<FiberContentDisplay3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberContentDisplay3DProps,\n    newProps: FiberContentDisplay3DProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkControlDiff(oldProps.content, newProps.content, 'content', changedProps)\n    checkPrimitiveDiff(\n      oldProps.contentResolution,\n      newProps.contentResolution,\n      'contentResolution',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The base class for controls that display content\n *\n * This code has been generated\n */\nexport class FiberContentDisplay3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberContentDisplay3DPropsHandler(), new FiberControl3DPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ContentDisplay3D',\n    namespace: '@babylonjs/gui',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberContentDisplay3D',\n  }\n}\n\nexport class FiberAbstractButton3DPropsHandler implements PropsHandler<FiberAbstractButton3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberAbstractButton3DProps,\n    newProps: FiberAbstractButton3DProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Class used as a root to all buttons\n *\n * This code has been generated\n */\nexport class FiberAbstractButton3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAbstractButton3DPropsHandler(),\n      new FiberContentDisplay3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AbstractButton3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberAbstractButton3D',\n  }\n}\n\nexport class FiberButton3DPropsHandler implements PropsHandler<FiberButton3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberButton3DProps,\n    newProps: FiberButton3DProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Class used to create a button in 3D\n *\n * This code has been generated\n */\nexport class FiberButton3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberButton3DPropsHandler(),\n      new FiberAbstractButton3DPropsHandler(),\n      new FiberContentDisplay3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Button3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsGuiIButton3DCreationOptions',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberButton3D',\n  }\n}\n\nexport class FiberTouchButton3DPropsHandler implements PropsHandler<FiberTouchButton3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberTouchButton3DProps,\n    newProps: FiberTouchButton3DProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkVector3Diff(\n      oldProps.collidableFrontDirection,\n      newProps.collidableFrontDirection,\n      'collidableFrontDirection',\n      true,\n      changedProps\n    )\n    // type: 'BabylonjsCoreMesh' property (not coded) BabylonjsGuiTouchButton3D.collisionMesh.\n    checkPrimitiveDiff(\n      oldProps.isToggleButton,\n      newProps.isToggleButton,\n      'isToggleButton',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isToggled, newProps.isToggled, 'isToggled', changedProps)\n    checkObservableDiff(\n      oldProps.onToggleObservable,\n      newProps.onToggleObservable,\n      'onToggleObservable',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a touchable button in 3D\n *\n * This code has been generated\n */\nexport class FiberTouchButton3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTouchButton3DPropsHandler(),\n      new FiberButton3DPropsHandler(),\n      new FiberAbstractButton3DPropsHandler(),\n      new FiberContentDisplay3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TouchButton3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'collisionMesh',\n        type: 'BabylonjsCoreMesh',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberTouchButton3D',\n  }\n}\n\nexport class FiberTouchHolographicButtonPropsHandler\n  implements PropsHandler<FiberTouchHolographicButtonProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberTouchHolographicButtonProps,\n    newProps: FiberTouchHolographicButtonProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.imageUrl, newProps.imageUrl, 'imageUrl', changedProps)\n    checkPrimitiveDiff(\n      oldProps.isBackplateVisible,\n      newProps.isBackplateVisible,\n      'isBackplateVisible',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderingGroupId,\n      newProps.renderingGroupId,\n      'renderingGroupId',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.text, newProps.text, 'text', changedProps)\n    checkPrimitiveDiff(oldProps.tooltipText, newProps.tooltipText, 'tooltipText', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a holographic button in 3D\n *\n * This code has been generated\n */\nexport class FiberTouchHolographicButton implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTouchHolographicButtonPropsHandler(),\n      new FiberTouchButton3DPropsHandler(),\n      new FiberButton3DPropsHandler(),\n      new FiberAbstractButton3DPropsHandler(),\n      new FiberContentDisplay3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TouchHolographicButton',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'shareMaterials',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberTouchHolographicButton',\n  }\n}\n\nexport class FiberTouchMeshButton3DPropsHandler\n  implements PropsHandler<FiberTouchMeshButton3DProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberTouchMeshButton3DProps,\n    newProps: FiberTouchMeshButton3DProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Class used to create an interactable object. It's a touchable 3D button using a mesh coming from the current scene\n *\n * This code has been generated\n */\nexport class FiberTouchMeshButton3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTouchMeshButton3DPropsHandler(),\n      new FiberTouchButton3DPropsHandler(),\n      new FiberButton3DPropsHandler(),\n      new FiberAbstractButton3DPropsHandler(),\n      new FiberContentDisplay3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TouchMeshButton3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'mesh',\n        type: 'BabylonjsCoreMesh',\n        optional: false,\n      },\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberTouchMeshButton3D',\n  }\n}\n\nexport class FiberHolographicButtonPropsHandler\n  implements PropsHandler<FiberHolographicButtonProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberHolographicButtonProps,\n    newProps: FiberHolographicButtonProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.imageUrl, newProps.imageUrl, 'imageUrl', changedProps)\n    checkPrimitiveDiff(\n      oldProps.renderingGroupId,\n      newProps.renderingGroupId,\n      'renderingGroupId',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.text, newProps.text, 'text', changedProps)\n    checkPrimitiveDiff(oldProps.tooltipText, newProps.tooltipText, 'tooltipText', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a holographic button in 3D\n *\n * This code has been generated\n */\nexport class FiberHolographicButton implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHolographicButtonPropsHandler(),\n      new FiberButton3DPropsHandler(),\n      new FiberAbstractButton3DPropsHandler(),\n      new FiberContentDisplay3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HolographicButton',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'shareMaterials',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberHolographicButton',\n  }\n}\n\nexport class FiberMeshButton3DPropsHandler implements PropsHandler<FiberMeshButton3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberMeshButton3DProps,\n    newProps: FiberMeshButton3DProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Class used to create an interactable object. It's a 3D button using a mesh coming from the current scene\n *\n * This code has been generated\n */\nexport class FiberMeshButton3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMeshButton3DPropsHandler(),\n      new FiberButton3DPropsHandler(),\n      new FiberAbstractButton3DPropsHandler(),\n      new FiberContentDisplay3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MeshButton3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'mesh',\n        type: 'BabylonjsCoreMesh',\n        optional: false,\n      },\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberMeshButton3D',\n  }\n}\n\nexport class FiberHolographicSlatePropsHandler implements PropsHandler<FiberHolographicSlateProps> {\n  getPropertyUpdates(\n    oldProps: FiberHolographicSlateProps,\n    newProps: FiberHolographicSlateProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsGuiHolographicSlate.dimensions.\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsGuiHolographicSlate.minDimensions.\n    checkVector3Diff(oldProps.origin, newProps.origin, 'origin', false, changedProps)\n    checkPrimitiveDiff(oldProps['origin-x'], newProps['origin-x'], 'origin.x', changedProps)\n    checkPrimitiveDiff(oldProps['origin-y'], newProps['origin-y'], 'origin.y', changedProps)\n    checkPrimitiveDiff(oldProps['origin-z'], newProps['origin-z'], 'origin.z', changedProps)\n    checkPrimitiveDiff(\n      oldProps.renderingGroupId,\n      newProps.renderingGroupId,\n      'renderingGroupId',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.title, newProps.title, 'title', changedProps)\n    checkPrimitiveDiff(\n      oldProps.titleBarHeight,\n      newProps.titleBarHeight,\n      'titleBarHeight',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.titleBarMargin,\n      newProps.titleBarMargin,\n      'titleBarMargin',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a holographic slate\n *\n * This code has been generated\n */\nexport class FiberHolographicSlate implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHolographicSlatePropsHandler(),\n      new FiberContentDisplay3DPropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HolographicSlate',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberHolographicSlate',\n  }\n}\n\nexport class FiberHolographicBackplatePropsHandler\n  implements PropsHandler<FiberHolographicBackplateProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberHolographicBackplateProps,\n    newProps: FiberHolographicBackplateProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.renderingGroupId,\n      newProps.renderingGroupId,\n      'renderingGroupId',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a holographic backplate in 3D\n *\n * This code has been generated\n */\nexport class FiberHolographicBackplate implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHolographicBackplatePropsHandler(),\n      new FiberControl3DPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HolographicBackplate',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: '_shareMaterials',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberHolographicBackplate',\n  }\n}\n\nexport class FiberSlider3DPropsHandler implements PropsHandler<FiberSlider3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberSlider3DProps,\n    newProps: FiberSlider3DProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.isVisible, newProps.isVisible, 'isVisible', changedProps)\n    checkPrimitiveDiff(oldProps.maximum, newProps.maximum, 'maximum', changedProps)\n    checkPrimitiveDiff(oldProps.minimum, newProps.minimum, 'minimum', changedProps)\n    checkObservableDiff(\n      oldProps.onValueChangedObservable,\n      newProps.onValueChangedObservable,\n      'onValueChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.step, newProps.step, 'step', changedProps)\n    checkPrimitiveDiff(oldProps.value, newProps.value, 'value', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create a slider in 3D\n *\n * This code has been generated\n */\nexport class FiberSlider3D implements HasPropsHandlers<FiberControl3DProps> {\n  private propsHandlers: PropsHandler<FiberControl3DProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberSlider3DPropsHandler(), new FiberControl3DPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberControl3DProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberControl3DProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Slider3D',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'sliderBackplateVisible',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberSlider3D',\n  }\n}\n\nexport class FiberEffectLayerPropsHandler implements PropsHandler<FiberEffectLayerProps> {\n  getPropertyUpdates(\n    oldProps: FiberEffectLayerProps,\n    newProps: FiberEffectLayerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.disableBoundingBoxesFromEffectLayer,\n      newProps.disableBoundingBoxesFromEffectLayer,\n      'disableBoundingBoxesFromEffectLayer',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkColor4Diff(oldProps.neutralColor, newProps.neutralColor, 'neutralColor', changedProps)\n    checkObservableDiff(\n      oldProps.onAfterComposeObservable,\n      newProps.onAfterComposeObservable,\n      'onAfterComposeObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterRenderMeshToEffect,\n      newProps.onAfterRenderMeshToEffect,\n      'onAfterRenderMeshToEffect',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeComposeObservable,\n      newProps.onBeforeComposeObservable,\n      'onBeforeComposeObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeRenderMainTextureObservable,\n      newProps.onBeforeRenderMainTextureObservable,\n      'onBeforeRenderMainTextureObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeRenderMeshToEffect,\n      newProps.onBeforeRenderMeshToEffect,\n      'onBeforeRenderMeshToEffect',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDisposeObservable,\n      newProps.onDisposeObservable,\n      'onDisposeObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onSizeChangedObservable,\n      newProps.onSizeChangedObservable,\n      'onSizeChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderingGroupId,\n      newProps.renderingGroupId,\n      'renderingGroupId',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setEffectIntensity,\n      newProps.setEffectIntensity,\n      'setEffectIntensity',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setMaterialForRendering,\n      newProps.setMaterialForRendering,\n      'setMaterialForRendering',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The effect layer Helps adding post process effect blended with the main pass.\n *\n * This can be for instance use to generate glow or highlight effects on the scene.\n *\n * The effect layer class can not be used directly and is intented to inherited from to be\n * customized per effects.\n *\n * This code has been generated\n */\nexport class FiberEffectLayer implements HasPropsHandlers<FiberEffectLayerProps> {\n  private propsHandlers: PropsHandler<FiberEffectLayerProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberEffectLayerPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberEffectLayerProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberEffectLayerProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'EffectLayer',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isEffectLayer: true,\n    isGlowLayer: false,\n    className: 'FiberEffectLayer',\n  }\n}\n\nexport class FiberGlowLayerPropsHandler implements PropsHandler<FiberGlowLayerProps> {\n  getPropertyUpdates(\n    oldProps: FiberGlowLayerProps,\n    newProps: FiberGlowLayerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.blurKernelSize,\n      newProps.blurKernelSize,\n      'blurKernelSize',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.customEmissiveColorSelector,\n      newProps.customEmissiveColorSelector,\n      'customEmissiveColorSelector',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.customEmissiveTextureSelector,\n      newProps.customEmissiveTextureSelector,\n      'customEmissiveTextureSelector',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.intensity, newProps.intensity, 'intensity', changedProps)\n    checkMethodDiff(\n      oldProps.addExcludedMesh,\n      newProps.addExcludedMesh,\n      'addExcludedMesh',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addIncludedOnlyMesh,\n      newProps.addIncludedOnlyMesh,\n      'addIncludedOnlyMesh',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The glow layer Helps adding a glow effect around the emissive parts of a mesh.\n *\n * Once instantiated in a scene, by default, all the emissive meshes will glow.\n *\n * Documentation: https://doc.babylonjs.com/features/featuresDeepDive/mesh/glowLayer\n *\n * This code has been generated\n */\nexport class FiberGlowLayer implements HasPropsHandlers<FiberEffectLayerProps> {\n  private propsHandlers: PropsHandler<FiberEffectLayerProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberGlowLayerPropsHandler(), new FiberEffectLayerPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberEffectLayerProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberEffectLayerProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GlowLayer',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'options',\n        type: 'Partial<BabylonjsCoreIGlowLayerOptions>',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isEffectLayer: true,\n    isGlowLayer: true,\n    className: 'FiberGlowLayer',\n  }\n}\n\nexport class FiberHighlightLayerPropsHandler implements PropsHandler<FiberHighlightLayerProps> {\n  getPropertyUpdates(\n    oldProps: FiberHighlightLayerProps,\n    newProps: FiberHighlightLayerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.blurHorizontalSize,\n      newProps.blurHorizontalSize,\n      'blurHorizontalSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blurVerticalSize,\n      newProps.blurVerticalSize,\n      'blurVerticalSize',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.innerGlow, newProps.innerGlow, 'innerGlow', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkObservableDiff(\n      oldProps.onAfterBlurObservable,\n      newProps.onAfterBlurObservable,\n      'onAfterBlurObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeBlurObservable,\n      newProps.onBeforeBlurObservable,\n      'onBeforeBlurObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.outerGlow, newProps.outerGlow, 'outerGlow', changedProps)\n    checkMethodDiff(\n      oldProps.addExcludedMesh,\n      newProps.addExcludedMesh,\n      'addExcludedMesh',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addMesh, newProps.addMesh, 'addMesh', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The highlight layer Helps adding a glow effect around a mesh.\n *\n * Once instantiated in a scene, simply use the addMesh or removeMesh method to add or remove\n * glowy meshes to your scene.\n *\n * !!! THIS REQUIRES AN ACTIVE STENCIL BUFFER ON THE CANVAS !!!\n *\n * This code has been generated\n */\nexport class FiberHighlightLayer implements HasPropsHandlers<FiberEffectLayerProps> {\n  private propsHandlers: PropsHandler<FiberEffectLayerProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberHighlightLayerPropsHandler(), new FiberEffectLayerPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberEffectLayerProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberEffectLayerProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HighlightLayer',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'options',\n        type: 'Partial<BabylonjsCoreIHighlightLayerOptions>',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isEffectLayer: true,\n    isGlowLayer: false,\n    className: 'FiberHighlightLayer',\n  }\n}\n\nexport class FiberThinTexturePropsHandler implements PropsHandler<FiberThinTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberThinTextureProps,\n    newProps: FiberThinTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.anisotropicFilteringLevel,\n      newProps.anisotropicFilteringLevel,\n      'anisotropicFilteringLevel',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.delayLoadState,\n      newProps.delayLoadState,\n      'delayLoadState',\n      changedProps\n    )\n    // type: 'boolean' property (not coded) BabylonjsCoreThinTexture.is2DArray.\n    // type: 'boolean' property (not coded) BabylonjsCoreThinTexture.is3D.\n    // type: 'boolean' property (not coded) BabylonjsCoreThinTexture.isCube.\n    checkPrimitiveDiff(oldProps.wrapR, newProps.wrapR, 'wrapR', changedProps)\n    checkPrimitiveDiff(oldProps.wrapU, newProps.wrapU, 'wrapU', changedProps)\n    checkPrimitiveDiff(oldProps.wrapV, newProps.wrapV, 'wrapV', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Base class of all the textures in babylon.\n * It groups all the common properties required to work with Thin Engine.\n *\n * This code has been generated\n */\nexport class FiberThinTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberThinTexturePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ThinTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'internalTexture',\n        type: 'BabylonjsCoreInternalTexture | BabylonjsCoreRenderTargetWrapper',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberThinTexture',\n  }\n}\n\nexport class FiberBaseTexturePropsHandler implements PropsHandler<FiberBaseTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberBaseTextureProps,\n    newProps: FiberBaseTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreAnimation[]' property (not coded) BabylonjsCoreBaseTexture.animations.\n    checkPrimitiveDiff(\n      oldProps.anisotropicFilteringLevel,\n      newProps.anisotropicFilteringLevel,\n      'anisotropicFilteringLevel',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.coordinatesIndex,\n      newProps.coordinatesIndex,\n      'coordinatesIndex',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.coordinatesMode,\n      newProps.coordinatesMode,\n      'coordinatesMode',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.gammaSpace, newProps.gammaSpace, 'gammaSpace', changedProps)\n    checkPrimitiveDiff(\n      oldProps.getAlphaFromRGB,\n      newProps.getAlphaFromRGB,\n      'getAlphaFromRGB',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.hasAlpha, newProps.hasAlpha, 'hasAlpha', changedProps)\n    checkPrimitiveDiff(oldProps.invertZ, newProps.invertZ, 'invertZ', changedProps)\n    checkTextureDiff(\n      oldProps.irradianceTexture,\n      newProps.irradianceTexture,\n      'irradianceTexture',\n      changedProps\n    )\n    // type: 'boolean' property (not coded) BabylonjsCoreBaseTexture.is2DArray.\n    // type: 'boolean' property (not coded) BabylonjsCoreBaseTexture.is3D.\n    // type: 'boolean' property (not coded) BabylonjsCoreBaseTexture.isCube.\n    checkPrimitiveDiff(\n      oldProps.isRenderTarget,\n      newProps.isRenderTarget,\n      'isRenderTarget',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isRGBD, newProps.isRGBD, 'isRGBD', changedProps)\n    checkPrimitiveDiff(oldProps.level, newProps.level, 'level', changedProps)\n    checkPrimitiveDiff(\n      oldProps.linearSpecularLOD,\n      newProps.linearSpecularLOD,\n      'linearSpecularLOD',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lodGenerationOffset,\n      newProps.lodGenerationOffset,\n      'lodGenerationOffset',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lodGenerationScale,\n      newProps.lodGenerationScale,\n      'lodGenerationScale',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lodLevelInAlpha,\n      newProps.lodLevelInAlpha,\n      'lodLevelInAlpha',\n      changedProps\n    )\n    // type: 'any' property (not coded) BabylonjsCoreBaseTexture.metadata.\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkLambdaDiff(oldProps.onDispose, newProps.onDispose, 'onDispose', changedProps)\n    checkObservableDiff(\n      oldProps.onDisposeObservable,\n      newProps.onDisposeObservable,\n      'onDisposeObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.optimizeUVAllocation,\n      newProps.optimizeUVAllocation,\n      'optimizeUVAllocation',\n      changedProps\n    )\n    // type: 'any' property (not coded) BabylonjsCoreBaseTexture.reservedDataStore.\n    checkPrimitiveDiff(oldProps.uniqueId, newProps.uniqueId, 'uniqueId', changedProps)\n    checkPrimitiveDiff(oldProps.wrapR, newProps.wrapR, 'wrapR', changedProps)\n    checkPrimitiveDiff(oldProps.wrapU, newProps.wrapU, 'wrapU', changedProps)\n    checkPrimitiveDiff(oldProps.wrapV, newProps.wrapV, 'wrapV', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Base class of all the textures in babylon.\n * It groups all the common properties the materials, post process, lights... might need\n * in order to make a correct use of the texture.\n *\n * This code has been generated\n */\nexport class FiberBaseTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberBaseTexturePropsHandler(), new FiberThinTexturePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BaseTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'sceneOrEngine',\n        type: 'BabylonjsCoreScene | BabylonjsCoreThinEngine',\n        optional: true,\n      },\n      {\n        name: 'internalTexture',\n        type: 'BabylonjsCoreInternalTexture',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberBaseTexture',\n  }\n}\n\nexport class FiberCubeTexturePropsHandler implements PropsHandler<FiberCubeTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberCubeTextureProps,\n    newProps: FiberCubeTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkVector3Diff(\n      oldProps.boundingBoxPosition,\n      newProps.boundingBoxPosition,\n      'boundingBoxPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-x'],\n      newProps['boundingBoxPosition-x'],\n      'boundingBoxPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-y'],\n      newProps['boundingBoxPosition-y'],\n      'boundingBoxPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-z'],\n      newProps['boundingBoxPosition-z'],\n      'boundingBoxPosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.boundingBoxSize,\n      newProps.boundingBoxSize,\n      'boundingBoxSize',\n      true,\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onLoadObservable,\n      newProps.onLoadObservable,\n      'onLoadObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.rotationY, newProps.rotationY, 'rotationY', changedProps)\n    checkPrimitiveDiff(oldProps.url, newProps.url, 'url', changedProps)\n    checkMethodDiff(\n      oldProps.setReflectionTextureMatrix,\n      newProps.setReflectionTextureMatrix,\n      'setReflectionTextureMatrix',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class for creating a cube texture\n *\n * This code has been generated\n */\nexport class FiberCubeTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberCubeTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'CubeTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'rootUrl',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'sceneOrEngine',\n        type: 'BabylonjsCoreScene | BabylonjsCoreThinEngine',\n        optional: false,\n      },\n      {\n        name: 'extensions',\n        type: 'string[]',\n        optional: true,\n      },\n      {\n        name: 'noMipmap',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'files',\n        type: 'string[]',\n        optional: true,\n      },\n      {\n        name: 'onLoad',\n        type: '() => void',\n        optional: true,\n      },\n      {\n        name: 'onError',\n        type: '(message?: string, exception?: any) => void',\n        optional: true,\n      },\n      {\n        name: 'format',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'prefiltered',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'forcedExtension',\n        type: 'any',\n        optional: true,\n      },\n      {\n        name: 'createPolynomials',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'lodScale',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'lodOffset',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'loaderOptions',\n        type: 'any',\n        optional: true,\n      },\n      {\n        name: 'useSRGBBuffer',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberCubeTexture',\n  }\n}\n\nexport class FiberRawCubeTexturePropsHandler implements PropsHandler<FiberRawCubeTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberRawCubeTextureProps,\n    newProps: FiberRawCubeTextureProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Raw cube texture where the raw buffers are passed in\n *\n * This code has been generated\n */\nexport class FiberRawCubeTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberRawCubeTexturePropsHandler(),\n      new FiberCubeTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RawCubeTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'data',\n        type: 'ArrayBufferView[]',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'format',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'type',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'compression',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberRawCubeTexture',\n  }\n}\n\nexport class FiberTexturePropsHandler implements PropsHandler<FiberTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberTextureProps,\n    newProps: FiberTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.homogeneousRotationInUVTransform,\n      newProps.homogeneousRotationInUVTransform,\n      'homogeneousRotationInUVTransform',\n      changedProps\n    )\n    // type: 'BabylonjsCoreIInspectable[]' property (not coded) BabylonjsCoreTexture.inspectableCustomProperties.\n    checkPrimitiveDiff(oldProps.isBlocking, newProps.isBlocking, 'isBlocking', changedProps)\n    checkObservableDiff(\n      oldProps.onLoadObservable,\n      newProps.onLoadObservable,\n      'onLoadObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.uAng, newProps.uAng, 'uAng', changedProps)\n    checkPrimitiveDiff(oldProps.uOffset, newProps.uOffset, 'uOffset', changedProps)\n    checkPrimitiveDiff(oldProps.url, newProps.url, 'url', changedProps)\n    checkPrimitiveDiff(\n      oldProps.uRotationCenter,\n      newProps.uRotationCenter,\n      'uRotationCenter',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.uScale, newProps.uScale, 'uScale', changedProps)\n    checkPrimitiveDiff(oldProps.vAng, newProps.vAng, 'vAng', changedProps)\n    checkPrimitiveDiff(oldProps.vOffset, newProps.vOffset, 'vOffset', changedProps)\n    checkPrimitiveDiff(\n      oldProps.vRotationCenter,\n      newProps.vRotationCenter,\n      'vRotationCenter',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.vScale, newProps.vScale, 'vScale', changedProps)\n    checkPrimitiveDiff(oldProps.wAng, newProps.wAng, 'wAng', changedProps)\n    checkPrimitiveDiff(\n      oldProps.wRotationCenter,\n      newProps.wRotationCenter,\n      'wRotationCenter',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents a texture in babylon. It can be easily loaded from a network, base64 or html input.\n *\n * This code has been generated\n */\nexport class FiberTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Texture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'url',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'sceneOrEngine',\n        type: 'BabylonjsCoreScene | BabylonjsCoreThinEngine',\n        optional: true,\n      },\n      {\n        name: 'noMipmapOrOptions',\n        type: 'boolean | BabylonjsCoreITextureCreationOptions',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'onLoad',\n        type: '() => void',\n        optional: true,\n      },\n      {\n        name: 'onError',\n        type: '(message?: string, exception?: any) => void',\n        optional: true,\n      },\n      {\n        name: 'buffer',\n        type: 'string | ArrayBufferView | ArrayBuffer | HTMLImageElement | Blob | ImageBitmap',\n        optional: true,\n      },\n      {\n        name: 'deleteBuffer',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'format',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'mimeType',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'loaderOptions',\n        type: 'any',\n        optional: true,\n      },\n      {\n        name: 'creationFlags',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'forcedExtension',\n        type: 'string',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberTexture',\n  }\n}\n\nexport class FiberVideoTexturePropsHandler implements PropsHandler<FiberVideoTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberVideoTextureProps,\n    newProps: FiberVideoTextureProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * If you want to display a video in your scene, this is the special texture for that.\n * This special texture works similar to other textures, with the exception of a few parameters.\n *\n * This code has been generated\n */\nexport class FiberVideoTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVideoTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VideoTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'src',\n        type: 'string | string[] | HTMLVideoElement',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'settings',\n        type: 'Partial<BabylonjsCoreVideoTextureSettings>',\n        optional: true,\n      },\n      {\n        name: 'onError',\n        type: '(message?: string, exception?: any) => void',\n        optional: true,\n      },\n      {\n        name: 'format',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberVideoTexture',\n  }\n}\n\nexport class FiberProceduralTexturePropsHandler\n  implements PropsHandler<FiberProceduralTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberProceduralTextureProps,\n    newProps: FiberProceduralTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.autoClear, newProps.autoClear, 'autoClear', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    // type: 'BabylonjsCoreNodeMaterial' property (not coded) BabylonjsCoreProceduralTexture.nodeMaterialSource.\n    checkObservableDiff(\n      oldProps.onBeforeGenerationObservable,\n      newProps.onBeforeGenerationObservable,\n      'onBeforeGenerationObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onGenerated, newProps.onGenerated, 'onGenerated', changedProps)\n    checkObservableDiff(\n      oldProps.onGeneratedObservable,\n      newProps.onGeneratedObservable,\n      'onGeneratedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.refreshRate, newProps.refreshRate, 'refreshRate', changedProps)\n    checkMethodDiff(oldProps.setColor3, newProps.setColor3, 'setColor3', changedProps)\n    checkMethodDiff(oldProps.setColor4, newProps.setColor4, 'setColor4', changedProps)\n    checkMethodDiff(oldProps.setFloat, newProps.setFloat, 'setFloat', changedProps)\n    checkMethodDiff(oldProps.setFloats, newProps.setFloats, 'setFloats', changedProps)\n    checkMethodDiff(oldProps.setFragment, newProps.setFragment, 'setFragment', changedProps)\n    checkMethodDiff(oldProps.setInt, newProps.setInt, 'setInt', changedProps)\n    checkMethodDiff(oldProps.setMatrix, newProps.setMatrix, 'setMatrix', changedProps)\n    checkMethodDiff(oldProps.setTexture, newProps.setTexture, 'setTexture', changedProps)\n    checkMethodDiff(oldProps.setVector2, newProps.setVector2, 'setVector2', changedProps)\n    checkMethodDiff(oldProps.setVector3, newProps.setVector3, 'setVector3', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Procedural texturing is a way to programmatically create a texture. There are 2 types of procedural textures: code-only, and code that references some classic 2D images, sometimes calmpler' images.\n * This is the base class of any Procedural texture and contains most of the shareable code.\n *\n * This code has been generated\n */\nexport class FiberProceduralTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberProceduralTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ProceduralTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'BabylonjsCoreTextureSize',\n        optional: false,\n      },\n      {\n        name: 'fragment',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'fallbackTexture',\n        type: 'BabylonjsCoreTexture',\n        optional: true,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'isCube',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberProceduralTexture',\n  }\n}\n\nexport class FiberCustomProceduralTexturePropsHandler\n  implements PropsHandler<FiberCustomProceduralTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberCustomProceduralTextureProps,\n    newProps: FiberCustomProceduralTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.animate, newProps.animate, 'animate', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Procedural texturing is a way to programmatically create a texture. There are 2 types of procedural textures: code-only, and code that references some classic 2D images, sometimes called 'refMaps' or 'sampler' images.\n * Custom Procedural textures are the easiest way to create your own procedural in your application.\n *\n * This code has been generated\n */\nexport class FiberCustomProceduralTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberCustomProceduralTexturePropsHandler(),\n      new FiberProceduralTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'CustomProceduralTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'texturePath',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'BabylonjsCoreTextureSize',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'fallbackTexture',\n        type: 'BabylonjsCoreTexture',\n        optional: true,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'skipJson',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberCustomProceduralTexture',\n  }\n}\n\nexport class FiberNoiseProceduralTexturePropsHandler\n  implements PropsHandler<FiberNoiseProceduralTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberNoiseProceduralTextureProps,\n    newProps: FiberNoiseProceduralTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.animationSpeedFactor,\n      newProps.animationSpeedFactor,\n      'animationSpeedFactor',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.brightness, newProps.brightness, 'brightness', changedProps)\n    checkPrimitiveDiff(oldProps.octaves, newProps.octaves, 'octaves', changedProps)\n    checkPrimitiveDiff(oldProps.persistence, newProps.persistence, 'persistence', changedProps)\n    checkPrimitiveDiff(oldProps.time, newProps.time, 'time', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to generate noise procedural textures\n *\n * This code has been generated\n */\nexport class FiberNoiseProceduralTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberNoiseProceduralTexturePropsHandler(),\n      new FiberProceduralTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'NoiseProceduralTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'fallbackTexture',\n        type: 'BabylonjsCoreTexture',\n        optional: true,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberNoiseProceduralTexture',\n  }\n}\n\nexport class FiberRawTexturePropsHandler implements PropsHandler<FiberRawTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberRawTextureProps,\n    newProps: FiberRawTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.format, newProps.format, 'format', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Raw texture can help creating a texture directly from an array of data.\n * This can be super useful if you either get the data from an uncompressed source or\n * if you wish to create your texture pixel by pixel.\n *\n * This code has been generated\n */\nexport class FiberRawTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberRawTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RawTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'data',\n        type: 'ArrayBufferView',\n        optional: false,\n      },\n      {\n        name: 'width',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'height',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'format',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'sceneOrEngine',\n        type: 'BabylonjsCoreScene | BabylonjsCoreThinEngine',\n        optional: false,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'type',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'creationFlags',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'useSRGBBuffer',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberRawTexture',\n  }\n}\n\nexport class FiberRawTexture2DArrayPropsHandler\n  implements PropsHandler<FiberRawTexture2DArrayProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberRawTexture2DArrayProps,\n    newProps: FiberRawTexture2DArrayProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.format, newProps.format, 'format', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to store 2D array textures containing user data\n *\n * This code has been generated\n */\nexport class FiberRawTexture2DArray implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberRawTexture2DArrayPropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RawTexture2DArray',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'data',\n        type: 'ArrayBufferView',\n        optional: false,\n      },\n      {\n        name: 'width',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'height',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'depth',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'format',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'creationFlags',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberRawTexture2DArray',\n  }\n}\n\nexport class FiberRenderTargetTexturePropsHandler\n  implements PropsHandler<FiberRenderTargetTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberRenderTargetTextureProps,\n    newProps: FiberRenderTargetTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreCamera' property (not coded) BabylonjsCoreRenderTargetTexture.activeCamera.\n    checkVector3Diff(\n      oldProps.boundingBoxPosition,\n      newProps.boundingBoxPosition,\n      'boundingBoxPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-x'],\n      newProps['boundingBoxPosition-x'],\n      'boundingBoxPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-y'],\n      newProps['boundingBoxPosition-y'],\n      'boundingBoxPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-z'],\n      newProps['boundingBoxPosition-z'],\n      'boundingBoxPosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.boundingBoxSize,\n      newProps.boundingBoxSize,\n      'boundingBoxSize',\n      true,\n      changedProps\n    )\n    checkColor4Diff(oldProps.clearColor, newProps.clearColor, 'clearColor', changedProps)\n    checkLambdaDiff(\n      oldProps.customIsReadyFunction,\n      newProps.customIsReadyFunction,\n      'customIsReadyFunction',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.customRenderFunction,\n      newProps.customRenderFunction,\n      'customRenderFunction',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceLayerMaskCheck,\n      newProps.forceLayerMaskCheck,\n      'forceLayerMaskCheck',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.getCustomRenderList,\n      newProps.getCustomRenderList,\n      'getCustomRenderList',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ignoreCameraViewport,\n      newProps.ignoreCameraViewport,\n      'ignoreCameraViewport',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onAfterRender, newProps.onAfterRender, 'onAfterRender', changedProps)\n    checkObservableDiff(\n      oldProps.onAfterRenderObservable,\n      newProps.onAfterRenderObservable,\n      'onAfterRenderObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onAfterUnbind, newProps.onAfterUnbind, 'onAfterUnbind', changedProps)\n    checkObservableDiff(\n      oldProps.onAfterUnbindObservable,\n      newProps.onAfterUnbindObservable,\n      'onAfterUnbindObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeBindObservable,\n      newProps.onBeforeBindObservable,\n      'onBeforeBindObservable',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.onBeforeRender,\n      newProps.onBeforeRender,\n      'onBeforeRender',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeRenderObservable,\n      newProps.onBeforeRenderObservable,\n      'onBeforeRenderObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onClear, newProps.onClear, 'onClear', changedProps)\n    checkObservableDiff(\n      oldProps.onClearObservable,\n      newProps.onClearObservable,\n      'onClearObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onResizeObservable,\n      newProps.onResizeObservable,\n      'onResizeObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.refreshRate, newProps.refreshRate, 'refreshRate', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreRenderTargetTexture.renderList.\n    checkLambdaDiff(\n      oldProps.renderListPredicate,\n      newProps.renderListPredicate,\n      'renderListPredicate',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderParticles,\n      newProps.renderParticles,\n      'renderParticles',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.renderPassId, newProps.renderPassId, 'renderPassId', changedProps)\n    checkPrimitiveDiff(\n      oldProps.renderSprites,\n      newProps.renderSprites,\n      'renderSprites',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.samples, newProps.samples, 'samples', changedProps)\n    checkPrimitiveDiff(\n      oldProps.skipInitialClear,\n      newProps.skipInitialClear,\n      'skipInitialClear',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useCameraPostProcesses,\n      newProps.useCameraPostProcesses,\n      'useCameraPostProcesses',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addPostProcess,\n      newProps.addPostProcess,\n      'addPostProcess',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setMaterialForRendering,\n      newProps.setMaterialForRendering,\n      'setMaterialForRendering',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setRenderingAutoClearDepthStencil,\n      newProps.setRenderingAutoClearDepthStencil,\n      'setRenderingAutoClearDepthStencil',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setRenderingOrder,\n      newProps.setRenderingOrder,\n      'setRenderingOrder',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This Helps creating a texture that will be created from a camera in your scene.\n * It is basically a dynamic texture that could be used to create special effects for instance.\n * Actually, It is the base of lot of effects in the framework like post process, shadows, effect layers and rendering pipelines...\n *\n * This code has been generated\n */\nexport class FiberRenderTargetTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberRenderTargetTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RenderTargetTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'number | { width: number; height: number; layers?: number; } | { ratio: number; }',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreRenderTargetTextureOptions',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberRenderTargetTexture',\n  }\n}\n\nexport class FiberMirrorTexturePropsHandler implements PropsHandler<FiberMirrorTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberMirrorTextureProps,\n    newProps: FiberMirrorTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.adaptiveBlurKernel,\n      newProps.adaptiveBlurKernel,\n      'adaptiveBlurKernel',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blurKernel, newProps.blurKernel, 'blurKernel', changedProps)\n    checkPrimitiveDiff(oldProps.blurKernelX, newProps.blurKernelX, 'blurKernelX', changedProps)\n    checkPrimitiveDiff(oldProps.blurKernelY, newProps.blurKernelY, 'blurKernelY', changedProps)\n    checkPrimitiveDiff(oldProps.blurRatio, newProps.blurRatio, 'blurRatio', changedProps)\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreMirrorTexture.mirrorPlane.\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Mirror texture can be used to simulate the view from a mirror in a scene.\n * It will dynamically be rendered every frame to adapt to the camera point of view.\n * You can then easily use it as a reflectionTexture on a flat surface.\n * In case the surface is not a plane, please consider relying on reflection probes.\n *\n * This code has been generated\n */\nexport class FiberMirrorTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMirrorTexturePropsHandler(),\n      new FiberRenderTargetTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MirrorTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'number | { width: number; height: number; } | { ratio: number; }',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'type',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'generateDepthBuffer',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberMirrorTexture',\n  }\n}\n\nexport class FiberMultiRenderTargetPropsHandler\n  implements PropsHandler<FiberMultiRenderTargetProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMultiRenderTargetProps,\n    newProps: FiberMultiRenderTargetProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.samples, newProps.samples, 'samples', changedProps)\n    checkPrimitiveDiff(oldProps.wrapU, newProps.wrapU, 'wrapU', changedProps)\n    checkPrimitiveDiff(oldProps.wrapV, newProps.wrapV, 'wrapV', changedProps)\n    checkMethodDiff(\n      oldProps.setInternalTexture,\n      newProps.setInternalTexture,\n      'setInternalTexture',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setLayerAndFaceIndex,\n      newProps.setLayerAndFaceIndex,\n      'setLayerAndFaceIndex',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setLayerAndFaceIndices,\n      newProps.setLayerAndFaceIndices,\n      'setLayerAndFaceIndices',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A multi render target, like a render target provides the ability to render to a texture.\n * Unlike the render target, it can render to several draw buffers in one draw.\n * This is specially interesting in deferred rendering or for any effects requiring more than\n * just one color from a single pass.\n *\n * This code has been generated\n */\nexport class FiberMultiRenderTarget implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMultiRenderTargetPropsHandler(),\n      new FiberRenderTargetTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MultiRenderTarget',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'count',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreIMultiRenderTargetOptions',\n        optional: true,\n      },\n      {\n        name: 'textureNames',\n        type: 'string[]',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberMultiRenderTarget',\n  }\n}\n\nexport class FiberPrePassRenderTargetPropsHandler\n  implements PropsHandler<FiberPrePassRenderTargetProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPrePassRenderTargetProps,\n    newProps: FiberPrePassRenderTargetProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.enabled, newProps.enabled, 'enabled', changedProps)\n    // type: 'BabylonjsCoreImageProcessingPostProcess' property (not coded) BabylonjsCorePrePassRenderTarget.imageProcessingPostProcess.\n    // type: 'BabylonjsCoreRenderTargetTexture' property (not coded) BabylonjsCorePrePassRenderTarget.renderTargetTexture.\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A multi render target designed to render the prepass.\n * Prepass is a scene component used to render information in multiple textures\n * alongside with the scene materials rendering.\n * Note : This is an internal class, and you should NOT need to instanciate this.\n * Only the `PrePassRenderer` should instanciate this class.\n * It is more likely that you need a regular `MultiRenderTarget`\n *\n * This code has been generated\n */\nexport class FiberPrePassRenderTarget implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPrePassRenderTargetPropsHandler(),\n      new FiberMultiRenderTargetPropsHandler(),\n      new FiberRenderTargetTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PrePassRenderTarget',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'renderTargetTexture',\n        type: 'BabylonjsCoreRenderTargetTexture',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'count',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreIMultiRenderTargetOptions',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberPrePassRenderTarget',\n  }\n}\n\nexport class FiberRefractionTexturePropsHandler\n  implements PropsHandler<FiberRefractionTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberRefractionTextureProps,\n    newProps: FiberRefractionTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.depth, newProps.depth, 'depth', changedProps)\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreRefractionTexture.refractionPlane.\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Creates a refraction texture used by refraction channel of the standard material.\n * It is like a mirror but to see through a material.\n *\n * This code has been generated\n */\nexport class FiberRefractionTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberRefractionTexturePropsHandler(),\n      new FiberRenderTargetTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RefractionTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberRefractionTexture',\n  }\n}\n\nexport class FiberXRSpaceWarpRenderTargetPropsHandler\n  implements PropsHandler<FiberXRSpaceWarpRenderTargetProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberXRSpaceWarpRenderTargetProps,\n    newProps: FiberXRSpaceWarpRenderTargetProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Used for Space Warp render process\n *\n * This code has been generated\n */\nexport class FiberXRSpaceWarpRenderTarget implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberXRSpaceWarpRenderTargetPropsHandler(),\n      new FiberRenderTargetTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'XRSpaceWarpRenderTarget',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'motionVectorTexture',\n        type: 'WebGLTexture',\n        optional: false,\n      },\n      {\n        name: 'depthStencilTexture',\n        type: 'WebGLTexture',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'size',\n        type: 'number | { width: number; height: number; } | { ratio: number; }',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberXRSpaceWarpRenderTarget',\n  }\n}\n\nexport class FiberMultiviewRenderTargetPropsHandler\n  implements PropsHandler<FiberMultiviewRenderTargetProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMultiviewRenderTargetProps,\n    newProps: FiberMultiviewRenderTargetProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.samples, newProps.samples, 'samples', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Renders to multiple views with a single draw call\n *\n * This code has been generated\n */\nexport class FiberMultiviewRenderTarget implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMultiviewRenderTargetPropsHandler(),\n      new FiberRenderTargetTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MultiviewRenderTarget',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'size',\n        type: 'number | { width: number; height: number; } | { ratio: number; }',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberMultiviewRenderTarget',\n  }\n}\n\nexport class FiberDynamicTexturePropsHandler implements PropsHandler<FiberDynamicTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberDynamicTextureProps,\n    newProps: FiberDynamicTextureProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * A class extending Texture allowing drawing on a texture\n *\n * This code has been generated\n */\nexport class FiberDynamicTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberDynamicTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DynamicTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'format',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberDynamicTexture',\n  }\n}\n\nexport class FiberAdvancedDynamicTexturePropsHandler\n  implements PropsHandler<FiberAdvancedDynamicTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberAdvancedDynamicTextureProps,\n    newProps: FiberAdvancedDynamicTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.applyYInversionOnUpdate,\n      newProps.applyYInversionOnUpdate,\n      'applyYInversionOnUpdate',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.background, newProps.background, 'background', changedProps)\n    checkPrimitiveDiff(\n      oldProps.checkPointerEveryFrame,\n      newProps.checkPointerEveryFrame,\n      'checkPointerEveryFrame',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.clipboardData,\n      newProps.clipboardData,\n      'clipboardData',\n      changedProps\n    )\n    // type: 'BabylonjsGuiIFocusableControl' property (not coded) BabylonjsGuiAdvancedDynamicTexture.focusedControl.\n    checkPrimitiveDiff(oldProps.idealHeight, newProps.idealHeight, 'idealHeight', changedProps)\n    checkPrimitiveDiff(oldProps.idealWidth, newProps.idealWidth, 'idealWidth', changedProps)\n    checkPrimitiveDiff(oldProps.isForeground, newProps.isForeground, 'isForeground', changedProps)\n    checkObservableDiff(\n      oldProps.onBeginLayoutObservable,\n      newProps.onBeginLayoutObservable,\n      'onBeginLayoutObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeginRenderObservable,\n      newProps.onBeginRenderObservable,\n      'onBeginRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onClipboardObservable,\n      newProps.onClipboardObservable,\n      'onClipboardObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onControlPickedObservable,\n      newProps.onControlPickedObservable,\n      'onControlPickedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onEndLayoutObservable,\n      newProps.onEndLayoutObservable,\n      'onEndLayoutObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onEndRenderObservable,\n      newProps.onEndRenderObservable,\n      'onEndRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onGuiReadyObservable,\n      newProps.onGuiReadyObservable,\n      'onGuiReadyObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.parseContent, newProps.parseContent, 'parseContent', changedProps)\n    checkPrimitiveDiff(oldProps.premulAlpha, newProps.premulAlpha, 'premulAlpha', changedProps)\n    checkPrimitiveDiff(\n      oldProps.renderAtIdealSize,\n      newProps.renderAtIdealSize,\n      'renderAtIdealSize',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.renderScale, newProps.renderScale, 'renderScale', changedProps)\n    checkPrimitiveDiff(\n      oldProps.skipBlockEvents,\n      newProps.skipBlockEvents,\n      'skipBlockEvents',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.snippetId, newProps.snippetId, 'snippetId', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useInvalidateRectOptimization,\n      newProps.useInvalidateRectOptimization,\n      'useInvalidateRectOptimization',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useSmallestIdeal,\n      newProps.useSmallestIdeal,\n      'useSmallestIdeal',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addControl, newProps.addControl, 'addControl', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to create texture to support 2D GUI elements\n *\n * This code has been generated\n */\nexport class FiberAdvancedDynamicTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAdvancedDynamicTexturePropsHandler(),\n      new FiberDynamicTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AdvancedDynamicTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'width',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'height',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI2DControl: true,\n    isTexture: true,\n    className: 'FiberAdvancedDynamicTexture',\n  }\n}\n\n/**\n * Creates a new AdvancedDynamicTexture in projected mode (ie. attached to a mesh)\n *\n * This code has been generated\n */\nexport class FiberADTForMesh implements HasPropsHandlers<FiberAdvancedDynamicTextureProps> {\n  private propsHandlers: PropsHandler<FiberAdvancedDynamicTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAdvancedDynamicTexturePropsHandler(),\n      new FiberDynamicTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAdvancedDynamicTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAdvancedDynamicTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'advancedDynamicTexture',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateForMesh',\n    parameters: [\n      {\n        name: 'mesh',\n        type: 'BabylonjsCoreAbstractMesh',\n        optional: false,\n      },\n      {\n        name: 'width',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'height',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'supportPointerMove',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'onlyAlphaTesting',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'materialSetupCallback',\n        type: '(mesh: BabylonjsCoreAbstractMesh, uniqueId: string, texture: BabylonjsGuiAdvancedDynamicTexture, onlyAlphaTesting: boolean) => void',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    isGUI2DControl: true,\n    className: 'FiberADTForMesh',\n  }\n}\n\n/**\n * Creates a new AdvancedDynamicTexture in projected mode (ie. attached to a mesh) BUT do not create a new material for the mesh. You will be responsible for connecting the texture\n *\n * This code has been generated\n */\nexport class FiberADTForMeshTexture implements HasPropsHandlers<FiberAdvancedDynamicTextureProps> {\n  private propsHandlers: PropsHandler<FiberAdvancedDynamicTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAdvancedDynamicTexturePropsHandler(),\n      new FiberDynamicTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAdvancedDynamicTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAdvancedDynamicTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'advancedDynamicTexture',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateForMeshTexture',\n    parameters: [\n      {\n        name: 'mesh',\n        type: 'BabylonjsCoreAbstractMesh',\n        optional: false,\n      },\n      {\n        name: 'width',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'height',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'supportPointerMove',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    isGUI2DControl: true,\n    className: 'FiberADTForMeshTexture',\n  }\n}\n\n/**\n * Creates a new AdvancedDynamicTexture in fullscreen mode.\n * In this mode the texture will rely on a layer for its rendering.\n * This allows it to be treated like any other layer.\n * As such, if you have a multi camera setup, you can set the layerMask on the GUI as well.\n * LayerMask is set through advancedTexture.layer.layerMask\n *\n * This code has been generated\n */\nexport class FiberADTFullscreenUI implements HasPropsHandlers<FiberAdvancedDynamicTextureProps> {\n  private propsHandlers: PropsHandler<FiberAdvancedDynamicTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAdvancedDynamicTexturePropsHandler(),\n      new FiberDynamicTexturePropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAdvancedDynamicTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAdvancedDynamicTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'FactoryMethod',\n    libraryLocation: 'advancedDynamicTexture',\n    namespace: '@babylonjs/core',\n    factoryMethod: 'CreateFullscreenUI',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'foreground',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'sampling',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'adaptiveScaling',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    isGUI2DControl: true,\n    className: 'FiberADTFullscreenUI',\n  }\n}\n\nexport class FiberRawTexture3DPropsHandler implements PropsHandler<FiberRawTexture3DProps> {\n  getPropertyUpdates(\n    oldProps: FiberRawTexture3DProps,\n    newProps: FiberRawTexture3DProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.format, newProps.format, 'format', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to store 3D textures containing user data\n *\n * This code has been generated\n */\nexport class FiberRawTexture3D implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberRawTexture3DPropsHandler(),\n      new FiberTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RawTexture3D',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'data',\n        type: 'ArrayBufferView',\n        optional: false,\n      },\n      {\n        name: 'width',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'height',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'depth',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'format',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'generateMipMaps',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'invertY',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'creationFlags',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberRawTexture3D',\n  }\n}\n\nexport class FiberColorGradingTexturePropsHandler\n  implements PropsHandler<FiberColorGradingTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberColorGradingTextureProps,\n    newProps: FiberColorGradingTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.url, newProps.url, 'url', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents a color grading texture. This acts as a lookup table LUT, useful during post process\n * It can help converting any input color in a desired output one. This can then be used to create effects\n * from sepia, black and white to sixties or futuristic rendering...\n *\n * The only supported format is currently 3dl.\n * More information on LUT: https://en.wikipedia.org/wiki/3D_lookup_table\n *\n * This code has been generated\n */\nexport class FiberColorGradingTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberColorGradingTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ColorGradingTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'url',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'sceneOrEngine',\n        type: 'BabylonjsCoreScene | BabylonjsCoreThinEngine',\n        optional: false,\n      },\n      {\n        name: 'onLoad',\n        type: '() => void',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberColorGradingTexture',\n  }\n}\n\nexport class FiberEquiRectangularCubeTexturePropsHandler\n  implements PropsHandler<FiberEquiRectangularCubeTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberEquiRectangularCubeTextureProps,\n    newProps: FiberEquiRectangularCubeTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.url, newProps.url, 'url', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents a texture coming from an equirectangular image supported by the web browser canvas.\n *\n * This code has been generated\n */\nexport class FiberEquiRectangularCubeTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberEquiRectangularCubeTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'EquiRectangularCubeTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'url',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'noMipmap',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'gammaSpace',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'onLoad',\n        type: '() => void',\n        optional: true,\n      },\n      {\n        name: 'onError',\n        type: '(message?: string, exception?: any) => void',\n        optional: true,\n      },\n      {\n        name: 'supersample',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberEquiRectangularCubeTexture',\n  }\n}\n\nexport class FiberHDRCubeTexturePropsHandler implements PropsHandler<FiberHDRCubeTextureProps> {\n  getPropertyUpdates(\n    oldProps: FiberHDRCubeTextureProps,\n    newProps: FiberHDRCubeTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkVector3Diff(\n      oldProps.boundingBoxPosition,\n      newProps.boundingBoxPosition,\n      'boundingBoxPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-x'],\n      newProps['boundingBoxPosition-x'],\n      'boundingBoxPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-y'],\n      newProps['boundingBoxPosition-y'],\n      'boundingBoxPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['boundingBoxPosition-z'],\n      newProps['boundingBoxPosition-z'],\n      'boundingBoxPosition.z',\n      changedProps\n    )\n    checkVector3Diff(\n      oldProps.boundingBoxSize,\n      newProps.boundingBoxSize,\n      'boundingBoxSize',\n      true,\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isBlocking, newProps.isBlocking, 'isBlocking', changedProps)\n    checkObservableDiff(\n      oldProps.onLoadObservable,\n      newProps.onLoadObservable,\n      'onLoadObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.rotationY, newProps.rotationY, 'rotationY', changedProps)\n    checkPrimitiveDiff(oldProps.url, newProps.url, 'url', changedProps)\n    checkMethodDiff(\n      oldProps.setReflectionTextureMatrix,\n      newProps.setReflectionTextureMatrix,\n      'setReflectionTextureMatrix',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents a texture coming from an HDR input.\n *\n * The only supported format is currently panorama picture stored in RGBE format.\n * Example of such files can be found on Poly Haven: https://polyhaven.com/hdris\n *\n * This code has been generated\n */\nexport class FiberHDRCubeTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHDRCubeTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HDRCubeTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'url',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'sceneOrEngine',\n        type: 'BabylonjsCoreScene | BabylonjsCoreThinEngine',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'noMipmap',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'generateHarmonics',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'gammaSpace',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'prefilterOnLoad',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'onLoad',\n        type: '() => void',\n        optional: true,\n      },\n      {\n        name: 'onError',\n        type: '(message?: string, exception?: any) => void',\n        optional: true,\n      },\n      {\n        name: 'supersample',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberHDRCubeTexture',\n  }\n}\n\nexport class FiberHtmlElementTexturePropsHandler\n  implements PropsHandler<FiberHtmlElementTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberHtmlElementTextureProps,\n    newProps: FiberHtmlElementTextureProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'HTMLVideoElement | HTMLCanvasElement' property (not coded) BabylonjsCoreHtmlElementTexture.element.\n    checkObservableDiff(\n      oldProps.onLoadObservable,\n      newProps.onLoadObservable,\n      'onLoadObservable',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents the smallest workload to use an already existing element (Canvas or Video) as a texture.\n * To be as efficient as possible depending on your constraints nothing aside the first upload\n * is automatically managed.\n * It is a cheap VideoTexture or DynamicTexture if you prefer to keep full control of the elements\n * in your application.\n *\n * As the update is not automatic, you need to call them manually.\n *\n * This code has been generated\n */\nexport class FiberHtmlElementTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHtmlElementTexturePropsHandler(),\n      new FiberBaseTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HtmlElementTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'element',\n        type: 'HTMLVideoElement | HTMLCanvasElement',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreIHtmlElementTextureOptions',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberHtmlElementTexture',\n  }\n}\n\nexport class FiberThinRenderTargetTexturePropsHandler\n  implements PropsHandler<FiberThinRenderTargetTextureProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberThinRenderTargetTextureProps,\n    newProps: FiberThinRenderTargetTextureProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * This is a tiny helper class to wrap a RenderTargetWrapper in a texture\n * usable as the input of an effect.\n *\n * This code has been generated\n */\nexport class FiberThinRenderTargetTexture implements HasPropsHandlers<FiberThinTextureProps> {\n  private propsHandlers: PropsHandler<FiberThinTextureProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberThinRenderTargetTexturePropsHandler(),\n      new FiberThinTexturePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberThinTextureProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberThinTextureProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ThinRenderTargetTexture',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreThinEngine',\n        optional: false,\n      },\n      {\n        name: 'size',\n        type: 'BabylonjsCoreTextureSize',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreRenderTargetCreationOptions',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isTexture: true,\n    className: 'FiberThinRenderTargetTexture',\n  }\n}\n\nexport class FiberPostProcessRenderPipelinePropsHandler\n  implements PropsHandler<FiberPostProcessRenderPipelineProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPostProcessRenderPipelineProps,\n    newProps: FiberPostProcessRenderPipelineProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreIInspectable[]' property (not coded) BabylonjsCorePostProcessRenderPipeline.inspectableCustomProperties.\n    checkMethodDiff(oldProps.addEffect, newProps.addEffect, 'addEffect', changedProps)\n    checkMethodDiff(\n      oldProps.setPrePassRenderer,\n      newProps.setPrePassRenderer,\n      'setPrePassRenderer',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * PostProcessRenderPipeline\n *\n * This code has been generated\n */\nexport class FiberPostProcessRenderPipeline\n  implements HasPropsHandlers<FiberPostProcessRenderPipelineProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessRenderPipelineProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPostProcessRenderPipelinePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessRenderPipelineProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessRenderPipelineProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PostProcessRenderPipeline',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: '_engine',\n        type: 'BabylonjsCoreEngine',\n        optional: false,\n      },\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPostProcessRenderPipeline',\n  }\n}\n\nexport class FiberDefaultRenderingPipelinePropsHandler\n  implements PropsHandler<FiberDefaultRenderingPipelineProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberDefaultRenderingPipelineProps,\n    newProps: FiberDefaultRenderingPipelineProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreAnimation[]' property (not coded) BabylonjsCoreDefaultRenderingPipeline.animations.\n    checkPrimitiveDiff(\n      oldProps.automaticBuild,\n      newProps.automaticBuild,\n      'automaticBuild',\n      changedProps\n    )\n    // type: 'any' property (not coded) BabylonjsCoreDefaultRenderingPipeline.bloom.\n    checkPrimitiveDiff(oldProps.bloomEnabled, newProps.bloomEnabled, 'bloomEnabled', changedProps)\n    checkPrimitiveDiff(oldProps.bloomKernel, newProps.bloomKernel, 'bloomKernel', changedProps)\n    checkPrimitiveDiff(oldProps.bloomScale, newProps.bloomScale, 'bloomScale', changedProps)\n    checkPrimitiveDiff(\n      oldProps.bloomThreshold,\n      newProps.bloomThreshold,\n      'bloomThreshold',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.bloomWeight, newProps.bloomWeight, 'bloomWeight', changedProps)\n    // type: 'BabylonjsCoreChromaticAberrationPostProcess' property (not coded) BabylonjsCoreDefaultRenderingPipeline.chromaticAberration.\n    checkPrimitiveDiff(\n      oldProps.chromaticAberrationEnabled,\n      newProps.chromaticAberrationEnabled,\n      'chromaticAberrationEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCoreDepthOfFieldEffect' property (not coded) BabylonjsCoreDefaultRenderingPipeline.depthOfField.\n    checkPrimitiveDiff(\n      oldProps.depthOfFieldBlurLevel,\n      newProps.depthOfFieldBlurLevel,\n      'depthOfFieldBlurLevel',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.depthOfFieldEnabled,\n      newProps.depthOfFieldEnabled,\n      'depthOfFieldEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCoreFxaaPostProcess' property (not coded) BabylonjsCoreDefaultRenderingPipeline.fxaa.\n    checkPrimitiveDiff(oldProps.fxaaEnabled, newProps.fxaaEnabled, 'fxaaEnabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.glowLayerEnabled,\n      newProps.glowLayerEnabled,\n      'glowLayerEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCoreGrainPostProcess' property (not coded) BabylonjsCoreDefaultRenderingPipeline.grain.\n    checkPrimitiveDiff(oldProps.grainEnabled, newProps.grainEnabled, 'grainEnabled', changedProps)\n    // type: 'BabylonjsCoreImageProcessingPostProcess' property (not coded) BabylonjsCoreDefaultRenderingPipeline.imageProcessing.\n    checkPrimitiveDiff(\n      oldProps.imageProcessingEnabled,\n      newProps.imageProcessingEnabled,\n      'imageProcessingEnabled',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBuildObservable,\n      newProps.onBuildObservable,\n      'onBuildObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.samples, newProps.samples, 'samples', changedProps)\n    // type: 'BabylonjsCoreSharpenPostProcess' property (not coded) BabylonjsCoreDefaultRenderingPipeline.sharpen.\n    checkPrimitiveDiff(\n      oldProps.sharpenEnabled,\n      newProps.sharpenEnabled,\n      'sharpenEnabled',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addCamera, newProps.addCamera, 'addCamera', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The default rendering pipeline can be added to a scene to apply common post processing effects such as anti-aliasing or depth of field.\n * See https://doc.babylonjs.com/features/featuresDeepDive/postProcesses/defaultRenderingPipeline\n *\n * This code has been generated\n */\nexport class FiberDefaultRenderingPipeline\n  implements HasPropsHandlers<FiberPostProcessRenderPipelineProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessRenderPipelineProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberDefaultRenderingPipelinePropsHandler(),\n      new FiberPostProcessRenderPipelinePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessRenderPipelineProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessRenderPipelineProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DefaultRenderingPipeline',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'hdr',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n      {\n        name: 'cameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: true,\n      },\n      {\n        name: 'automaticBuild',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberDefaultRenderingPipeline',\n  }\n}\n\nexport class FiberLensRenderingPipelinePropsHandler\n  implements PropsHandler<FiberLensRenderingPipelineProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberLensRenderingPipelineProps,\n    newProps: FiberLensRenderingPipelineProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.blurNoise, newProps.blurNoise, 'blurNoise', changedProps)\n    checkPrimitiveDiff(\n      oldProps.chromaticAberration,\n      newProps.chromaticAberration,\n      'chromaticAberration',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.darkenOutOfFocus,\n      newProps.darkenOutOfFocus,\n      'darkenOutOfFocus',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.dofAperture, newProps.dofAperture, 'dofAperture', changedProps)\n    checkPrimitiveDiff(\n      oldProps.dofDistortion,\n      newProps.dofDistortion,\n      'dofDistortion',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.edgeBlur, newProps.edgeBlur, 'edgeBlur', changedProps)\n    checkPrimitiveDiff(\n      oldProps.edgeDistortion,\n      newProps.edgeDistortion,\n      'edgeDistortion',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.grainAmount, newProps.grainAmount, 'grainAmount', changedProps)\n    checkPrimitiveDiff(\n      oldProps.HighlightsEnhancingEffect,\n      newProps.HighlightsEnhancingEffect,\n      'HighlightsEnhancingEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.highlightsGain,\n      newProps.highlightsGain,\n      'highlightsGain',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.highlightsThreshold,\n      newProps.highlightsThreshold,\n      'highlightsThreshold',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.LensChromaticAberrationEffect,\n      newProps.LensChromaticAberrationEffect,\n      'LensChromaticAberrationEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.LensDepthOfFieldEffect,\n      newProps.LensDepthOfFieldEffect,\n      'LensDepthOfFieldEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pentagonBokeh,\n      newProps.pentagonBokeh,\n      'pentagonBokeh',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setAperture, newProps.setAperture, 'setAperture', changedProps)\n    checkMethodDiff(\n      oldProps.setChromaticAberration,\n      newProps.setChromaticAberration,\n      'setChromaticAberration',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setDarkenOutOfFocus,\n      newProps.setDarkenOutOfFocus,\n      'setDarkenOutOfFocus',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setEdgeBlur, newProps.setEdgeBlur, 'setEdgeBlur', changedProps)\n    checkMethodDiff(\n      oldProps.setEdgeDistortion,\n      newProps.setEdgeDistortion,\n      'setEdgeDistortion',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setFocusDistance,\n      newProps.setFocusDistance,\n      'setFocusDistance',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setGrainAmount,\n      newProps.setGrainAmount,\n      'setGrainAmount',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setHighlightsGain,\n      newProps.setHighlightsGain,\n      'setHighlightsGain',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setHighlightsThreshold,\n      newProps.setHighlightsThreshold,\n      'setHighlightsThreshold',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * BABYLON.JS Chromatic Aberration GLSL Shader\n * Author: Olivier Guyot\n * Separates very slightly R, G and B colors on the edges of the screen\n * Inspired by Francois Tarlier & Martins Upitis\n *\n * This code has been generated\n */\nexport class FiberLensRenderingPipeline\n  implements HasPropsHandlers<FiberPostProcessRenderPipelineProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessRenderPipelineProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberLensRenderingPipelinePropsHandler(),\n      new FiberPostProcessRenderPipelinePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessRenderPipelineProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessRenderPipelineProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'LensRenderingPipeline',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'parameters',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'ratio',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'cameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberLensRenderingPipeline',\n  }\n}\n\nexport class FiberSSAO2RenderingPipelinePropsHandler\n  implements PropsHandler<FiberSSAO2RenderingPipelineProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberSSAO2RenderingPipelineProps,\n    newProps: FiberSSAO2RenderingPipelineProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.base, newProps.base, 'base', changedProps)\n    checkPrimitiveDiff(\n      oldProps.bilateralSamples,\n      newProps.bilateralSamples,\n      'bilateralSamples',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.bilateralSoften,\n      newProps.bilateralSoften,\n      'bilateralSoften',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.bilateralTolerance,\n      newProps.bilateralTolerance,\n      'bilateralTolerance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.bypassBlur, newProps.bypassBlur, 'bypassBlur', changedProps)\n    checkPrimitiveDiff(oldProps.epsilon, newProps.epsilon, 'epsilon', changedProps)\n    checkPrimitiveDiff(\n      oldProps.expensiveBlur,\n      newProps.expensiveBlur,\n      'expensiveBlur',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.maxZ, newProps.maxZ, 'maxZ', changedProps)\n    checkPrimitiveDiff(oldProps.minZAspect, newProps.minZAspect, 'minZAspect', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkPrimitiveDiff(oldProps.samples, newProps.samples, 'samples', changedProps)\n    checkPrimitiveDiff(\n      oldProps.SSAOBlurHRenderEffect,\n      newProps.SSAOBlurHRenderEffect,\n      'SSAOBlurHRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSAOBlurVRenderEffect,\n      newProps.SSAOBlurVRenderEffect,\n      'SSAOBlurVRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSAOCombineRenderEffect,\n      newProps.SSAOCombineRenderEffect,\n      'SSAOCombineRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSAOOriginalSceneColorEffect,\n      newProps.SSAOOriginalSceneColorEffect,\n      'SSAOOriginalSceneColorEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSAORenderEffect,\n      newProps.SSAORenderEffect,\n      'SSAORenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.textureSamples,\n      newProps.textureSamples,\n      'textureSamples',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.totalStrength,\n      newProps.totalStrength,\n      'totalStrength',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Render pipeline to produce ssao effect\n *\n * This code has been generated\n */\nexport class FiberSSAO2RenderingPipeline\n  implements HasPropsHandlers<FiberPostProcessRenderPipelineProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessRenderPipelineProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSSAO2RenderingPipelinePropsHandler(),\n      new FiberPostProcessRenderPipelinePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessRenderPipelineProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessRenderPipelineProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SSAO2RenderingPipeline',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'ratio',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'cameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: true,\n      },\n      {\n        name: 'forceGeometryBuffer',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberSSAO2RenderingPipeline',\n  }\n}\n\nexport class FiberSSAORenderingPipelinePropsHandler\n  implements PropsHandler<FiberSSAORenderingPipelineProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberSSAORenderingPipelineProps,\n    newProps: FiberSSAORenderingPipelineProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.area, newProps.area, 'area', changedProps)\n    checkPrimitiveDiff(oldProps.base, newProps.base, 'base', changedProps)\n    checkPrimitiveDiff(oldProps.fallOff, newProps.fallOff, 'fallOff', changedProps)\n    checkPrimitiveDiff(oldProps.radius, newProps.radius, 'radius', changedProps)\n    checkPrimitiveDiff(\n      oldProps.SSAOBlurHRenderEffect,\n      newProps.SSAOBlurHRenderEffect,\n      'SSAOBlurHRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSAOBlurVRenderEffect,\n      newProps.SSAOBlurVRenderEffect,\n      'SSAOBlurVRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSAOCombineRenderEffect,\n      newProps.SSAOCombineRenderEffect,\n      'SSAOCombineRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSAOOriginalSceneColorEffect,\n      newProps.SSAOOriginalSceneColorEffect,\n      'SSAOOriginalSceneColorEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSAORenderEffect,\n      newProps.SSAORenderEffect,\n      'SSAORenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.totalStrength,\n      newProps.totalStrength,\n      'totalStrength',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Render pipeline to produce ssao effect\n *\n * This code has been generated\n */\nexport class FiberSSAORenderingPipeline\n  implements HasPropsHandlers<FiberPostProcessRenderPipelineProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessRenderPipelineProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSSAORenderingPipelinePropsHandler(),\n      new FiberPostProcessRenderPipelinePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessRenderPipelineProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessRenderPipelineProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SSAORenderingPipeline',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'ratio',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'cameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberSSAORenderingPipeline',\n  }\n}\n\nexport class FiberStandardRenderingPipelinePropsHandler\n  implements PropsHandler<FiberStandardRenderingPipelineProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberStandardRenderingPipelineProps,\n    newProps: FiberStandardRenderingPipelineProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreAnimation[]' property (not coded) BabylonjsCoreStandardRenderingPipeline.animations.\n    checkPrimitiveDiff(oldProps.BloomEnabled, newProps.BloomEnabled, 'BloomEnabled', changedProps)\n    // type: 'BabylonjsCorePostProcess[]' property (not coded) BabylonjsCoreStandardRenderingPipeline.blurHPostProcesses.\n    // type: 'BabylonjsCorePostProcess[]' property (not coded) BabylonjsCoreStandardRenderingPipeline.blurVPostProcesses.\n    checkPrimitiveDiff(oldProps.blurWidth, newProps.blurWidth, 'blurWidth', changedProps)\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.brightPassPostProcess.\n    checkPrimitiveDiff(\n      oldProps.brightThreshold,\n      newProps.brightThreshold,\n      'brightThreshold',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.depthOfFieldBlurWidth,\n      newProps.depthOfFieldBlurWidth,\n      'depthOfFieldBlurWidth',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.depthOfFieldDistance,\n      newProps.depthOfFieldDistance,\n      'depthOfFieldDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.DepthOfFieldEnabled,\n      newProps.DepthOfFieldEnabled,\n      'DepthOfFieldEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.depthOfFieldPostProcess.\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.downSampleX4PostProcess.\n    checkPrimitiveDiff(oldProps.exposure, newProps.exposure, 'exposure', changedProps)\n    checkPrimitiveDiff(oldProps.fxaaEnabled, newProps.fxaaEnabled, 'fxaaEnabled', changedProps)\n    // type: 'BabylonjsCoreFxaaPostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.fxaaPostProcess.\n    checkPrimitiveDiff(\n      oldProps.hdrAutoExposure,\n      newProps.hdrAutoExposure,\n      'hdrAutoExposure',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.hdrDecreaseRate,\n      newProps.hdrDecreaseRate,\n      'hdrDecreaseRate',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.HDREnabled, newProps.HDREnabled, 'HDREnabled', changedProps)\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.hdrFinalPostProcess.\n    checkPrimitiveDiff(\n      oldProps.hdrIncreaseRate,\n      newProps.hdrIncreaseRate,\n      'hdrIncreaseRate',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.hdrMinimumLuminance,\n      newProps.hdrMinimumLuminance,\n      'hdrMinimumLuminance',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.hdrPostProcess.\n    checkPrimitiveDiff(\n      oldProps.horizontalBlur,\n      newProps.horizontalBlur,\n      'horizontalBlur',\n      changedProps\n    )\n    // type: 'BabylonjsCoreTexture' property (not coded) BabylonjsCoreStandardRenderingPipeline.lensColorTexture.\n    checkPrimitiveDiff(\n      oldProps.lensFlareBlurWidth,\n      newProps.lensFlareBlurWidth,\n      'lensFlareBlurWidth',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.lensFlareComposePostProcess.\n    // type: 'BabylonjsCoreTexture' property (not coded) BabylonjsCoreStandardRenderingPipeline.lensFlareDirtTexture.\n    checkPrimitiveDiff(\n      oldProps.lensFlareDistortionStrength,\n      newProps.lensFlareDistortionStrength,\n      'lensFlareDistortionStrength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.LensFlareEnabled,\n      newProps.LensFlareEnabled,\n      'LensFlareEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.lensFlareFinalPostProcess.\n    checkPrimitiveDiff(\n      oldProps.lensFlareGhostDispersal,\n      newProps.lensFlareGhostDispersal,\n      'lensFlareGhostDispersal',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lensFlareHaloWidth,\n      newProps.lensFlareHaloWidth,\n      'lensFlareHaloWidth',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.lensFlarePostProcess.\n    checkPrimitiveDiff(\n      oldProps.lensFlareStrength,\n      newProps.lensFlareStrength,\n      'lensFlareStrength',\n      changedProps\n    )\n    // type: 'BabylonjsCoreTexture' property (not coded) BabylonjsCoreStandardRenderingPipeline.lensStarTexture.\n    // type: 'BabylonjsCoreTexture' property (not coded) BabylonjsCoreStandardRenderingPipeline.lensTexture.\n    // type: 'BabylonjsCorePostProcess[]' property (not coded) BabylonjsCoreStandardRenderingPipeline.luminanceDownSamplePostProcesses.\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.luminancePostProcess.\n    checkPrimitiveDiff(\n      oldProps.MotionBlurEnabled,\n      newProps.MotionBlurEnabled,\n      'MotionBlurEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.motionBlurPostProcess.\n    checkPrimitiveDiff(\n      oldProps.motionBlurSamples,\n      newProps.motionBlurSamples,\n      'motionBlurSamples',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.motionStrength,\n      newProps.motionStrength,\n      'motionStrength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.objectBasedMotionBlur,\n      newProps.objectBasedMotionBlur,\n      'objectBasedMotionBlur',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.originalPostProcess.\n    checkPrimitiveDiff(oldProps.samples, newProps.samples, 'samples', changedProps)\n    // type: 'BabylonjsCoreScreenSpaceReflectionPostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.screenSpaceReflectionPostProcess.\n    checkPrimitiveDiff(\n      oldProps.screenSpaceReflectionsEnabled,\n      newProps.screenSpaceReflectionsEnabled,\n      'screenSpaceReflectionsEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCoreDirectionalLight | BabylonjsCoreSpotLight' property (not coded) BabylonjsCoreStandardRenderingPipeline.sourceLight.\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.textureAdderFinalPostProcess.\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.textureAdderPostProcess.\n    checkPrimitiveDiff(oldProps.VLSEnabled, newProps.VLSEnabled, 'VLSEnabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.volumetricLightBlurScale,\n      newProps.volumetricLightBlurScale,\n      'volumetricLightBlurScale',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.volumetricLightCoefficient,\n      newProps.volumetricLightCoefficient,\n      'volumetricLightCoefficient',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.volumetricLightFinalPostProcess.\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.volumetricLightMergePostProces.\n    // type: 'BabylonjsCorePostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.volumetricLightPostProcess.\n    checkPrimitiveDiff(\n      oldProps.volumetricLightPower,\n      newProps.volumetricLightPower,\n      'volumetricLightPower',\n      changedProps\n    )\n    // type: 'BabylonjsCoreBlurPostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.volumetricLightSmoothXPostProcess.\n    // type: 'BabylonjsCoreBlurPostProcess' property (not coded) BabylonjsCoreStandardRenderingPipeline.volumetricLightSmoothYPostProcess.\n    checkPrimitiveDiff(\n      oldProps.volumetricLightStepsCount,\n      newProps.volumetricLightStepsCount,\n      'volumetricLightStepsCount',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Standard rendering pipeline\n * Default pipeline should be used going forward but the standard pipeline will be kept for backwards compatibility.\n *\n * This code has been generated\n */\nexport class FiberStandardRenderingPipeline\n  implements HasPropsHandlers<FiberPostProcessRenderPipelineProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessRenderPipelineProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStandardRenderingPipelinePropsHandler(),\n      new FiberPostProcessRenderPipelinePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessRenderPipelineProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessRenderPipelineProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StandardRenderingPipeline',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'ratio',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'originalPostProcess',\n        type: 'BabylonjsCorePostProcess',\n        optional: true,\n      },\n      {\n        name: 'cameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberStandardRenderingPipeline',\n  }\n}\n\nexport class FiberSSRRenderingPipelinePropsHandler\n  implements PropsHandler<FiberSSRRenderingPipelineProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberSSRRenderingPipelineProps,\n    newProps: FiberSSRRenderingPipelineProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.attenuateBackfaceReflection,\n      newProps.attenuateBackfaceReflection,\n      'attenuateBackfaceReflection',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.attenuateFacingCamera,\n      newProps.attenuateFacingCamera,\n      'attenuateFacingCamera',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.attenuateIntersectionDistance,\n      newProps.attenuateIntersectionDistance,\n      'attenuateIntersectionDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.attenuateIntersectionIterations,\n      newProps.attenuateIntersectionIterations,\n      'attenuateIntersectionIterations',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.attenuateScreenBorders,\n      newProps.attenuateScreenBorders,\n      'attenuateScreenBorders',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.backfaceDepthTextureDownsample,\n      newProps.backfaceDepthTextureDownsample,\n      'backfaceDepthTextureDownsample',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.backfaceForceDepthWriteTransparentMeshes,\n      newProps.backfaceForceDepthWriteTransparentMeshes,\n      'backfaceForceDepthWriteTransparentMeshes',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blurDispersionStrength,\n      newProps.blurDispersionStrength,\n      'blurDispersionStrength',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blurDownsample,\n      newProps.blurDownsample,\n      'blurDownsample',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.clipToFrustum,\n      newProps.clipToFrustum,\n      'clipToFrustum',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.debug, newProps.debug, 'debug', changedProps)\n    checkPrimitiveDiff(\n      oldProps.enableAutomaticThicknessComputation,\n      newProps.enableAutomaticThicknessComputation,\n      'enableAutomaticThicknessComputation',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.enableSmoothReflections,\n      newProps.enableSmoothReflections,\n      'enableSmoothReflections',\n      changedProps\n    )\n    // type: 'BabylonjsCoreCubeTexture' property (not coded) BabylonjsCoreSSRRenderingPipeline.environmentTexture.\n    checkPrimitiveDiff(\n      oldProps.environmentTextureIsProbe,\n      newProps.environmentTextureIsProbe,\n      'environmentTextureIsProbe',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.generateOutputInGammaSpace,\n      newProps.generateOutputInGammaSpace,\n      'generateOutputInGammaSpace',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.inputTextureColorIsInGammaSpace,\n      newProps.inputTextureColorIsInGammaSpace,\n      'inputTextureColorIsInGammaSpace',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(oldProps.maxDistance, newProps.maxDistance, 'maxDistance', changedProps)\n    checkPrimitiveDiff(oldProps.maxSteps, newProps.maxSteps, 'maxSteps', changedProps)\n    checkPrimitiveDiff(\n      oldProps.reflectionSpecularFalloffExponent,\n      newProps.reflectionSpecularFalloffExponent,\n      'reflectionSpecularFalloffExponent',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectivityThreshold,\n      newProps.reflectivityThreshold,\n      'reflectivityThreshold',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.roughnessFactor,\n      newProps.roughnessFactor,\n      'roughnessFactor',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.samples, newProps.samples, 'samples', changedProps)\n    checkPrimitiveDiff(\n      oldProps.selfCollisionNumSkip,\n      newProps.selfCollisionNumSkip,\n      'selfCollisionNumSkip',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSRBlurRenderEffect,\n      newProps.SSRBlurRenderEffect,\n      'SSRBlurRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSRCombineRenderEffect,\n      newProps.SSRCombineRenderEffect,\n      'SSRCombineRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ssrDownsample,\n      newProps.ssrDownsample,\n      'ssrDownsample',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.SSRRenderEffect,\n      newProps.SSRRenderEffect,\n      'SSRRenderEffect',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.step, newProps.step, 'step', changedProps)\n    checkPrimitiveDiff(oldProps.strength, newProps.strength, 'strength', changedProps)\n    checkPrimitiveDiff(oldProps.thickness, newProps.thickness, 'thickness', changedProps)\n    checkPrimitiveDiff(oldProps.useFresnel, newProps.useFresnel, 'useFresnel', changedProps)\n    checkMethodDiff(oldProps.addCamera, newProps.addCamera, 'addCamera', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Render pipeline to produce Screen Space Reflections (SSR) effect\n *\n * References:\n *   Screen Space Ray Tracing:\n *     - http://casual-effects.blogspot.com/2014/08/screen-space-ray-tracing.html\n *     - https://sourceforge.net/p/g3d/code/HEAD/tree/G3D10/data-files/shader/screenSpaceRayTrace.glsl\n *     - https://github.com/kode80/kode80SSR\n *   SSR:\n *     - general tips: https://sakibsaikia.github.io/graphics/2016/12/26/Screen-Space-Reflection-in-Killing-Floor-2.html\n *     - computation of blur radius from roughness and distance: https://github.com/godotengine/godot/blob/master/servers/rendering/renderer_rd/shaders/effects/screen_space_reflection.glsl\n *     - blur and usage of back depth buffer: https://github.com/kode80/kode80SSR\n *\n * This code has been generated\n */\nexport class FiberSSRRenderingPipeline\n  implements HasPropsHandlers<FiberPostProcessRenderPipelineProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessRenderPipelineProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSSRRenderingPipelinePropsHandler(),\n      new FiberPostProcessRenderPipelinePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessRenderPipelineProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessRenderPipelineProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SSRRenderingPipeline',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'cameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: true,\n      },\n      {\n        name: 'forceGeometryBuffer',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberSSRRenderingPipeline',\n  }\n}\n\nexport class FiberPostProcessPropsHandler implements PropsHandler<FiberPostProcessProps> {\n  getPropertyUpdates(\n    oldProps: FiberPostProcessProps,\n    newProps: FiberPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.adaptScaleToCurrentViewport,\n      newProps.adaptScaleToCurrentViewport,\n      'adaptScaleToCurrentViewport',\n      changedProps\n    )\n    checkColor4Diff(\n      oldProps.alphaConstants,\n      newProps.alphaConstants,\n      'alphaConstants',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.alphaMode, newProps.alphaMode, 'alphaMode', changedProps)\n    checkPrimitiveDiff(\n      oldProps.alwaysForcePOT,\n      newProps.alwaysForcePOT,\n      'alwaysForcePOT',\n      changedProps\n    )\n    // type: 'BabylonjsCoreAnimation[]' property (not coded) BabylonjsCorePostProcess.animations.\n    checkPrimitiveDiff(oldProps.autoClear, newProps.autoClear, 'autoClear', changedProps)\n    checkColor4Diff(oldProps.clearColor, newProps.clearColor, 'clearColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.enablePixelPerfectMode,\n      newProps.enablePixelPerfectMode,\n      'enablePixelPerfectMode',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.externalTextureSamplerBinding,\n      newProps.externalTextureSamplerBinding,\n      'externalTextureSamplerBinding',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceAutoClearInAlphaMode,\n      newProps.forceAutoClearInAlphaMode,\n      'forceAutoClearInAlphaMode',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceFullscreenViewport,\n      newProps.forceFullscreenViewport,\n      'forceFullscreenViewport',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.height, newProps.height, 'height', changedProps)\n    // type: 'BabylonjsCoreRenderTargetWrapper' property (not coded) BabylonjsCorePostProcess.inputTexture.\n    // type: 'BabylonjsCoreIInspectable[]' property (not coded) BabylonjsCorePostProcess.inspectableCustomProperties.\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    // type: 'BabylonjsCoreNodeMaterial' property (not coded) BabylonjsCorePostProcess.nodeMaterialSource.\n    checkLambdaDiff(oldProps.onActivate, newProps.onActivate, 'onActivate', changedProps)\n    checkObservableDiff(\n      oldProps.onActivateObservable,\n      newProps.onActivateObservable,\n      'onActivateObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onAfterRender, newProps.onAfterRender, 'onAfterRender', changedProps)\n    checkObservableDiff(\n      oldProps.onAfterRenderObservable,\n      newProps.onAfterRenderObservable,\n      'onAfterRenderObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onApply, newProps.onApply, 'onApply', changedProps)\n    checkObservableDiff(\n      oldProps.onApplyObservable,\n      newProps.onApplyObservable,\n      'onApplyObservable',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.onBeforeRender,\n      newProps.onBeforeRender,\n      'onBeforeRender',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeRenderObservable,\n      newProps.onBeforeRenderObservable,\n      'onBeforeRenderObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onSizeChanged, newProps.onSizeChanged, 'onSizeChanged', changedProps)\n    checkObservableDiff(\n      oldProps.onSizeChangedObservable,\n      newProps.onSizeChangedObservable,\n      'onSizeChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderTargetSamplingMode,\n      newProps.renderTargetSamplingMode,\n      'renderTargetSamplingMode',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.samples, newProps.samples, 'samples', changedProps)\n    checkPrimitiveDiff(oldProps.scaleMode, newProps.scaleMode, 'scaleMode', changedProps)\n    checkPrimitiveDiff(oldProps.uniqueId, newProps.uniqueId, 'uniqueId', changedProps)\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    checkMethodDiff(\n      oldProps.setPrePassRenderer,\n      newProps.setPrePassRenderer,\n      'setPrePassRenderer',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * PostProcess can be used to apply a shader to a texture after it has been rendered\n * See https://doc.babylonjs.com/features/featuresDeepDive/postProcesses/usePostProcesses\n *\n * This code has been generated\n */\nexport class FiberPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPostProcessPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'fragmentUrl',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'parameters',\n        type: 'string[]',\n        optional: false,\n      },\n      {\n        name: 'samplers',\n        type: 'string[]',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'defines',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'vertexUrl',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: 'indexParameters',\n        type: 'any',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureFormat',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'shaderLanguage',\n        type: 'BabylonjsCoreShaderLanguage',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPostProcess',\n  }\n}\n\nexport class FiberImageProcessingPostProcessPropsHandler\n  implements PropsHandler<FiberImageProcessingPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberImageProcessingPostProcessProps,\n    newProps: FiberImageProcessingPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreColorCurves' property (not coded) BabylonjsCoreImageProcessingPostProcess.colorCurves.\n    checkPrimitiveDiff(\n      oldProps.colorCurvesEnabled,\n      newProps.colorCurvesEnabled,\n      'colorCurvesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.colorGradingEnabled,\n      newProps.colorGradingEnabled,\n      'colorGradingEnabled',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.colorGradingTexture,\n      newProps.colorGradingTexture,\n      'colorGradingTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.contrast, newProps.contrast, 'contrast', changedProps)\n    checkPrimitiveDiff(\n      oldProps.ditheringEnabled,\n      newProps.ditheringEnabled,\n      'ditheringEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ditheringIntensity,\n      newProps.ditheringIntensity,\n      'ditheringIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.exposure, newProps.exposure, 'exposure', changedProps)\n    checkPrimitiveDiff(\n      oldProps.fromLinearSpace,\n      newProps.fromLinearSpace,\n      'fromLinearSpace',\n      changedProps\n    )\n    // type: 'BabylonjsCoreImageProcessingConfiguration' property (not coded) BabylonjsCoreImageProcessingPostProcess.imageProcessingConfiguration.\n    checkPrimitiveDiff(\n      oldProps.toneMappingEnabled,\n      newProps.toneMappingEnabled,\n      'toneMappingEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.toneMappingType,\n      newProps.toneMappingType,\n      'toneMappingType',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteBlendMode,\n      newProps.vignetteBlendMode,\n      'vignetteBlendMode',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCameraFov,\n      newProps.vignetteCameraFov,\n      'vignetteCameraFov',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCenterX,\n      newProps.vignetteCenterX,\n      'vignetteCenterX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCenterY,\n      newProps.vignetteCenterY,\n      'vignetteCenterY',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCentreX,\n      newProps.vignetteCentreX,\n      'vignetteCentreX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCentreY,\n      newProps.vignetteCentreY,\n      'vignetteCentreY',\n      changedProps\n    )\n    checkColor4Diff(oldProps.vignetteColor, newProps.vignetteColor, 'vignetteColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.vignetteEnabled,\n      newProps.vignetteEnabled,\n      'vignetteEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteStretch,\n      newProps.vignetteStretch,\n      'vignetteStretch',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteWeight,\n      newProps.vignetteWeight,\n      'vignetteWeight',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * ImageProcessingPostProcess\n *\n * This code has been generated\n */\nexport class FiberImageProcessingPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberImageProcessingPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ImageProcessingPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'imageProcessingConfiguration',\n        type: 'BabylonjsCoreImageProcessingConfiguration',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberImageProcessingPostProcess',\n  }\n}\n\nexport class FiberAnaglyphPostProcessPropsHandler\n  implements PropsHandler<FiberAnaglyphPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberAnaglyphPostProcessProps,\n    newProps: FiberAnaglyphPostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Postprocess used to generate anaglyphic rendering\n *\n * This code has been generated\n */\nexport class FiberAnaglyphPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberAnaglyphPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AnaglyphPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'rigCameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberAnaglyphPostProcess',\n  }\n}\n\nexport class FiberBlackAndWhitePostProcessPropsHandler\n  implements PropsHandler<FiberBlackAndWhitePostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberBlackAndWhitePostProcessProps,\n    newProps: FiberBlackAndWhitePostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.degree, newProps.degree, 'degree', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Post process used to render in black and white\n *\n * This code has been generated\n */\nexport class FiberBlackAndWhitePostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberBlackAndWhitePostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BlackAndWhitePostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberBlackAndWhitePostProcess',\n  }\n}\n\nexport class FiberExtractHighlightsPostProcessPropsHandler\n  implements PropsHandler<FiberExtractHighlightsPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberExtractHighlightsPostProcessProps,\n    newProps: FiberExtractHighlightsPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.threshold, newProps.threshold, 'threshold', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The extract highlights post process sets all pixels to black except pixels above the specified luminance threshold. Used as the first step for a bloom effect.\n *\n * This code has been generated\n */\nexport class FiberExtractHighlightsPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberExtractHighlightsPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ExtractHighlightsPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberExtractHighlightsPostProcess',\n  }\n}\n\nexport class FiberBloomMergePostProcessPropsHandler\n  implements PropsHandler<FiberBloomMergePostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberBloomMergePostProcessProps,\n    newProps: FiberBloomMergePostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.weight, newProps.weight, 'weight', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The BloomMergePostProcess merges blurred images with the original based on the values of the circle of confusion.\n *\n * This code has been generated\n */\nexport class FiberBloomMergePostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberBloomMergePostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BloomMergePostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'originalFromInput',\n        type: 'BabylonjsCorePostProcess',\n        optional: false,\n      },\n      {\n        name: 'blurred',\n        type: 'BabylonjsCorePostProcess',\n        optional: false,\n      },\n      {\n        name: 'weight',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberBloomMergePostProcess',\n  }\n}\n\nexport class FiberBlurPostProcessPropsHandler implements PropsHandler<FiberBlurPostProcessProps> {\n  getPropertyUpdates(\n    oldProps: FiberBlurPostProcessProps,\n    newProps: FiberBlurPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreBlurPostProcess.direction.\n    checkPrimitiveDiff(oldProps.kernel, newProps.kernel, 'kernel', changedProps)\n    checkPrimitiveDiff(oldProps.packedFloat, newProps.packedFloat, 'packedFloat', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The Blur Post Process which blurs an image based on a kernel and direction.\n * Can be used twice in x and y directions to perform a gaussian blur in two passes.\n *\n * This code has been generated\n */\nexport class FiberBlurPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberBlurPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BlurPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'direction',\n        type: 'BabylonjsCoreVector2',\n        optional: false,\n      },\n      {\n        name: 'kernel',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'defines',\n        type: 'string',\n        optional: true,\n      },\n      {\n        name: '_blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureFormat',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberBlurPostProcess',\n  }\n}\n\nexport class FiberDepthOfFieldBlurPostProcessPropsHandler\n  implements PropsHandler<FiberDepthOfFieldBlurPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberDepthOfFieldBlurPostProcessProps,\n    newProps: FiberDepthOfFieldBlurPostProcessProps\n  ): PropertyUpdate[] | null {\n    // skipping type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreDepthOfFieldBlurPostProcess.direction.\n    return null // no props to check\n  }\n}\n\n/**\n * The DepthOfFieldBlurPostProcess applied a blur in a give direction.\n * This blur differs from the standard BlurPostProcess as it attempts to avoid blurring pixels\n * based on samples that have a large difference in distance than the center pixel.\n * See section 2.6.2 http://fileadmin.cs.lth.se/cs/education/edan35/lectures/12dof.pdf\n *\n * This code has been generated\n */\nexport class FiberDepthOfFieldBlurPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberDepthOfFieldBlurPostProcessPropsHandler(),\n      new FiberBlurPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DepthOfFieldBlurPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'direction',\n        type: 'BabylonjsCoreVector2',\n        optional: false,\n      },\n      {\n        name: 'kernel',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'circleOfConfusion',\n        type: 'BabylonjsCorePostProcess',\n        optional: false,\n      },\n      {\n        name: 'imageToBlur',\n        type: 'BabylonjsCorePostProcess',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureFormat',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberDepthOfFieldBlurPostProcess',\n  }\n}\n\nexport class FiberChromaticAberrationPostProcessPropsHandler\n  implements PropsHandler<FiberChromaticAberrationPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberChromaticAberrationPostProcessProps,\n    newProps: FiberChromaticAberrationPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.aberrationAmount,\n      newProps.aberrationAmount,\n      'aberrationAmount',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreChromaticAberrationPostProcess.centerPosition.\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreChromaticAberrationPostProcess.direction.\n    checkPrimitiveDiff(\n      oldProps.radialIntensity,\n      newProps.radialIntensity,\n      'radialIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.screenHeight, newProps.screenHeight, 'screenHeight', changedProps)\n    checkPrimitiveDiff(oldProps.screenWidth, newProps.screenWidth, 'screenWidth', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The ChromaticAberrationPostProcess separates the rgb channels in an image to produce chromatic distortion around the edges of the screen\n *\n * This code has been generated\n */\nexport class FiberChromaticAberrationPostProcess\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberChromaticAberrationPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ChromaticAberrationPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'screenWidth',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'screenHeight',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberChromaticAberrationPostProcess',\n  }\n}\n\nexport class FiberCircleOfConfusionPostProcessPropsHandler\n  implements PropsHandler<FiberCircleOfConfusionPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberCircleOfConfusionPostProcessProps,\n    newProps: FiberCircleOfConfusionPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreRenderTargetTexture' property (not coded) BabylonjsCoreCircleOfConfusionPostProcess.depthTexture.\n    checkPrimitiveDiff(oldProps.focalLength, newProps.focalLength, 'focalLength', changedProps)\n    checkPrimitiveDiff(\n      oldProps.focusDistance,\n      newProps.focusDistance,\n      'focusDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.fStop, newProps.fStop, 'fStop', changedProps)\n    checkPrimitiveDiff(oldProps.lensSize, newProps.lensSize, 'lensSize', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The CircleOfConfusionPostProcess computes the circle of confusion value for each pixel given required lens parameters. See https://en.wikipedia.org/wiki/Circle_of_confusion\n *\n * This code has been generated\n */\nexport class FiberCircleOfConfusionPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberCircleOfConfusionPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'CircleOfConfusionPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'depthTexture',\n        type: 'BabylonjsCoreRenderTargetTexture',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberCircleOfConfusionPostProcess',\n  }\n}\n\nexport class FiberColorCorrectionPostProcessPropsHandler\n  implements PropsHandler<FiberColorCorrectionPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberColorCorrectionPostProcessProps,\n    newProps: FiberColorCorrectionPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.colorTableUrl,\n      newProps.colorTableUrl,\n      'colorTableUrl',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This post-process allows the modification of rendered colors by using\n * a 'look-up table' (LUT). This effect is also called Color Grading.\n *\n * The object needs to be provided an url to a texture containing the color\n * look-up table: the texture must be 256 pixels wide and 16 pixels high.\n * Use an image editing software to tweak the LUT to match your needs.\n *\n * For an example of a color LUT, see here:\n *\n * This code has been generated\n */\nexport class FiberColorCorrectionPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberColorCorrectionPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ColorCorrectionPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'colorTableUrl',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberColorCorrectionPostProcess',\n  }\n}\n\nexport class FiberConvolutionPostProcessPropsHandler\n  implements PropsHandler<FiberConvolutionPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberConvolutionPostProcessProps,\n    newProps: FiberConvolutionPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkNumericArrayDiff(oldProps.kernel, newProps.kernel, 'kernel', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The ConvolutionPostProcess applies a 3x3 kernel to every pixel of the\n * input texture to perform effects such as edge detection or sharpening\n * See http://en.wikipedia.org/wiki/Kernel_(image_processing)\n *\n * This code has been generated\n */\nexport class FiberConvolutionPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberConvolutionPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ConvolutionPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'kernel',\n        type: 'number[]',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberConvolutionPostProcess',\n  }\n}\n\nexport class FiberDepthOfFieldMergePostProcessPropsHandler\n  implements PropsHandler<FiberDepthOfFieldMergePostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberDepthOfFieldMergePostProcessProps,\n    newProps: FiberDepthOfFieldMergePostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * The DepthOfFieldMergePostProcess merges blurred images with the original based on the values of the circle of confusion.\n *\n * This code has been generated\n */\nexport class FiberDepthOfFieldMergePostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberDepthOfFieldMergePostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DepthOfFieldMergePostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'originalFromInput',\n        type: 'BabylonjsCorePostProcess',\n        optional: false,\n      },\n      {\n        name: 'circleOfConfusion',\n        type: 'BabylonjsCorePostProcess',\n        optional: false,\n      },\n      {\n        name: '_blurSteps',\n        type: 'BabylonjsCorePostProcess[]',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberDepthOfFieldMergePostProcess',\n  }\n}\n\nexport class FiberDisplayPassPostProcessPropsHandler\n  implements PropsHandler<FiberDisplayPassPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberDisplayPassPostProcessProps,\n    newProps: FiberDisplayPassPostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * DisplayPassPostProcess which produces an output the same as it's input\n *\n * This code has been generated\n */\nexport class FiberDisplayPassPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberDisplayPassPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DisplayPassPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberDisplayPassPostProcess',\n  }\n}\n\nexport class FiberFilterPostProcessPropsHandler\n  implements PropsHandler<FiberFilterPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberFilterPostProcessProps,\n    newProps: FiberFilterPostProcessProps\n  ): PropertyUpdate[] | null {\n    // skipping type: 'BabylonjsCoreMatrix' property (not coded) BabylonjsCoreFilterPostProcess.kernelMatrix.\n    return null // no props to check\n  }\n}\n\n/**\n * Applies a kernel filter to the image\n *\n * This code has been generated\n */\nexport class FiberFilterPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFilterPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FilterPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'kernelMatrix',\n        type: 'BabylonjsCoreMatrix',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberFilterPostProcess',\n  }\n}\n\nexport class FiberFxaaPostProcessPropsHandler implements PropsHandler<FiberFxaaPostProcessProps> {\n  getPropertyUpdates(\n    oldProps: FiberFxaaPostProcessProps,\n    newProps: FiberFxaaPostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Fxaa post process\n *\n * This code has been generated\n */\nexport class FiberFxaaPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberFxaaPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FxaaPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberFxaaPostProcess',\n  }\n}\n\nexport class FiberGrainPostProcessPropsHandler implements PropsHandler<FiberGrainPostProcessProps> {\n  getPropertyUpdates(\n    oldProps: FiberGrainPostProcessProps,\n    newProps: FiberGrainPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.animated, newProps.animated, 'animated', changedProps)\n    checkPrimitiveDiff(oldProps.intensity, newProps.intensity, 'intensity', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The GrainPostProcess adds noise to the image at mid luminance levels\n *\n * This code has been generated\n */\nexport class FiberGrainPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberGrainPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GrainPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberGrainPostProcess',\n  }\n}\n\nexport class FiberHighlightsPostProcessPropsHandler\n  implements PropsHandler<FiberHighlightsPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberHighlightsPostProcessProps,\n    newProps: FiberHighlightsPostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Extracts highlights from the image\n *\n * This code has been generated\n */\nexport class FiberHighlightsPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberHighlightsPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HighlightsPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberHighlightsPostProcess',\n  }\n}\n\nexport class FiberMotionBlurPostProcessPropsHandler\n  implements PropsHandler<FiberMotionBlurPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMotionBlurPostProcessProps,\n    newProps: FiberMotionBlurPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.isObjectBased,\n      newProps.isObjectBased,\n      'isObjectBased',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.motionBlurSamples,\n      newProps.motionBlurSamples,\n      'motionBlurSamples',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.motionStrength,\n      newProps.motionStrength,\n      'motionStrength',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The Motion Blur Post Process which blurs an image based on the objects velocity in scene.\n * Velocity can be affected by each object's rotation, position and scale depending on the transformation speed.\n * As an example, all you have to do is to create the post-process:\n *  var mb = new BABYLON.MotionBlurPostProcess(\n *      'mb', // The name of the effect.\n *      scene, // The scene containing the objects to blur according to their velocity.\n *      1.0, // The required width/height ratio to downsize to before computing the render pass.\n *      camera // The camera to apply the render pass to.\n * );\n * Then, all objects moving, rotating and/or scaling will be blurred depending on the transformation speed.\n *\n * This code has been generated\n */\nexport class FiberMotionBlurPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberMotionBlurPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MotionBlurPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'forceGeometryBuffer',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberMotionBlurPostProcess',\n  }\n}\n\nexport class FiberPassPostProcessPropsHandler implements PropsHandler<FiberPassPostProcessProps> {\n  getPropertyUpdates(\n    oldProps: FiberPassPostProcessProps,\n    newProps: FiberPassPostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * PassPostProcess which produces an output the same as it's input\n *\n * This code has been generated\n */\nexport class FiberPassPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPassPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PassPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPassPostProcess',\n  }\n}\n\nexport class FiberPassCubePostProcessPropsHandler\n  implements PropsHandler<FiberPassCubePostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPassCubePostProcessProps,\n    newProps: FiberPassCubePostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.face, newProps.face, 'face', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * PassCubePostProcess which produces an output the same as it's input (which must be a cube texture)\n *\n * This code has been generated\n */\nexport class FiberPassCubePostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPassCubePostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PassCubePostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPassCubePostProcess',\n  }\n}\n\nexport class FiberRefractionPostProcessPropsHandler\n  implements PropsHandler<FiberRefractionPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberRefractionPostProcessProps,\n    newProps: FiberRefractionPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(oldProps.color, newProps.color, 'color', changedProps)\n    checkPrimitiveDiff(oldProps.colorLevel, newProps.colorLevel, 'colorLevel', changedProps)\n    checkPrimitiveDiff(oldProps.depth, newProps.depth, 'depth', changedProps)\n    // type: 'BabylonjsCoreTexture' property (not coded) BabylonjsCoreRefractionPostProcess.refractionTexture.\n    checkPrimitiveDiff(\n      oldProps.refractionTextureUrl,\n      newProps.refractionTextureUrl,\n      'refractionTextureUrl',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Post process which applies a refraction texture\n *\n * This code has been generated\n */\nexport class FiberRefractionPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberRefractionPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RefractionPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'refractionTextureUrl',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'color',\n        type: 'BabylonjsCoreColor3',\n        optional: false,\n      },\n      {\n        name: 'depth',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'colorLevel',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberRefractionPostProcess',\n  }\n}\n\nexport class FiberSharpenPostProcessPropsHandler\n  implements PropsHandler<FiberSharpenPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberSharpenPostProcessProps,\n    newProps: FiberSharpenPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.colorAmount, newProps.colorAmount, 'colorAmount', changedProps)\n    checkPrimitiveDiff(oldProps.edgeAmount, newProps.edgeAmount, 'edgeAmount', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The SharpenPostProcess applies a sharpen kernel to every pixel\n * See http://en.wikipedia.org/wiki/Kernel_(image_processing)\n *\n * This code has been generated\n */\nexport class FiberSharpenPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSharpenPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SharpenPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberSharpenPostProcess',\n  }\n}\n\nexport class FiberScreenSpaceReflectionPostProcessPropsHandler\n  implements PropsHandler<FiberScreenSpaceReflectionPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberScreenSpaceReflectionPostProcessProps,\n    newProps: FiberScreenSpaceReflectionPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.enableSmoothReflections,\n      newProps.enableSmoothReflections,\n      'enableSmoothReflections',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionSamples,\n      newProps.reflectionSamples,\n      'reflectionSamples',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.reflectionSpecularFalloffExponent,\n      newProps.reflectionSpecularFalloffExponent,\n      'reflectionSpecularFalloffExponent',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.roughnessFactor,\n      newProps.roughnessFactor,\n      'roughnessFactor',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.smoothSteps, newProps.smoothSteps, 'smoothSteps', changedProps)\n    checkPrimitiveDiff(oldProps.step, newProps.step, 'step', changedProps)\n    checkPrimitiveDiff(oldProps.strength, newProps.strength, 'strength', changedProps)\n    checkPrimitiveDiff(oldProps.threshold, newProps.threshold, 'threshold', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The ScreenSpaceReflectionPostProcess performs realtime reflections using only and only the available informations on the screen (positions and normals).\n * Basically, the screen space reflection post-process will compute reflections according the material's reflectivity.\n *\n * This code has been generated\n */\nexport class FiberScreenSpaceReflectionPostProcess\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberScreenSpaceReflectionPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ScreenSpaceReflectionPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'forceGeometryBuffer',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberScreenSpaceReflectionPostProcess',\n  }\n}\n\nexport class FiberStereoscopicInterlacePostProcessIPropsHandler\n  implements PropsHandler<FiberStereoscopicInterlacePostProcessIProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberStereoscopicInterlacePostProcessIProps,\n    newProps: FiberStereoscopicInterlacePostProcessIProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * StereoscopicInterlacePostProcessI used to render stereo views from a rigged camera with support for alternate line interlacing\n *\n * This code has been generated\n */\nexport class FiberStereoscopicInterlacePostProcessI\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStereoscopicInterlacePostProcessIPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StereoscopicInterlacePostProcessI',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'rigCameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: false,\n      },\n      {\n        name: 'isStereoscopicHoriz',\n        type: 'boolean',\n        optional: false,\n      },\n      {\n        name: 'isStereoscopicInterlaced',\n        type: 'boolean',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberStereoscopicInterlacePostProcessI',\n  }\n}\n\nexport class FiberStereoscopicInterlacePostProcessPropsHandler\n  implements PropsHandler<FiberStereoscopicInterlacePostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberStereoscopicInterlacePostProcessProps,\n    newProps: FiberStereoscopicInterlacePostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * StereoscopicInterlacePostProcess used to render stereo views from a rigged camera\n *\n * This code has been generated\n */\nexport class FiberStereoscopicInterlacePostProcess\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberStereoscopicInterlacePostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'StereoscopicInterlacePostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'rigCameras',\n        type: 'BabylonjsCoreCamera[]',\n        optional: false,\n      },\n      {\n        name: 'isStereoscopicHoriz',\n        type: 'boolean',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberStereoscopicInterlacePostProcess',\n  }\n}\n\nexport class FiberTonemapPostProcessPropsHandler\n  implements PropsHandler<FiberTonemapPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberTonemapPostProcessProps,\n    newProps: FiberTonemapPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.exposureAdjustment,\n      newProps.exposureAdjustment,\n      'exposureAdjustment',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Defines a post process to apply tone mapping\n *\n * This code has been generated\n */\nexport class FiberTonemapPostProcess implements HasPropsHandlers<FiberPostProcessProps> {\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberTonemapPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'TonemapPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: '_operator',\n        type: 'BabylonjsCoreTonemappingOperator',\n        optional: false,\n      },\n      {\n        name: 'exposureAdjustment',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'textureFormat',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberTonemapPostProcess',\n  }\n}\n\nexport class FiberVolumetricLightScatteringPostProcessPropsHandler\n  implements PropsHandler<FiberVolumetricLightScatteringPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberVolumetricLightScatteringPostProcessProps,\n    newProps: FiberVolumetricLightScatteringPostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: '{ position: BabylonjsCoreVector3; }' property (not coded) BabylonjsCoreVolumetricLightScatteringPostProcess.attachedNode.\n    checkVector3Diff(\n      oldProps.customMeshPosition,\n      newProps.customMeshPosition,\n      'customMeshPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['customMeshPosition-x'],\n      newProps['customMeshPosition-x'],\n      'customMeshPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['customMeshPosition-y'],\n      newProps['customMeshPosition-y'],\n      'customMeshPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['customMeshPosition-z'],\n      newProps['customMeshPosition-z'],\n      'customMeshPosition.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.decay, newProps.decay, 'decay', changedProps)\n    checkPrimitiveDiff(oldProps.density, newProps.density, 'density', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreVolumetricLightScatteringPostProcess.excludedMeshes.\n    checkPrimitiveDiff(oldProps.exposure, newProps.exposure, 'exposure', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreVolumetricLightScatteringPostProcess.includedMeshes.\n    checkPrimitiveDiff(oldProps.invert, newProps.invert, 'invert', changedProps)\n    // type: 'BabylonjsCoreMesh' property (not coded) BabylonjsCoreVolumetricLightScatteringPostProcess.mesh.\n    checkPrimitiveDiff(\n      oldProps.useCustomMeshPosition,\n      newProps.useCustomMeshPosition,\n      'useCustomMeshPosition',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useDiffuseColor,\n      newProps.useDiffuseColor,\n      'useDiffuseColor',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.weight, newProps.weight, 'weight', changedProps)\n    checkMethodDiff(\n      oldProps.setCustomMeshPosition,\n      newProps.setCustomMeshPosition,\n      'setCustomMeshPosition',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Inspired by https://developer.nvidia.com/gpugems/gpugems3/part-ii-light-and-shadows/chapter-13-volumetric-light-scattering-post-process\n *\n * This code has been generated\n */\nexport class FiberVolumetricLightScatteringPostProcess\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVolumetricLightScatteringPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VolumetricLightScatteringPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'ratio',\n        type: 'any',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'mesh',\n        type: 'BabylonjsCoreMesh',\n        optional: true,\n      },\n      {\n        name: 'samples',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberVolumetricLightScatteringPostProcess',\n  }\n}\n\nexport class FiberVRDistortionCorrectionPostProcessPropsHandler\n  implements PropsHandler<FiberVRDistortionCorrectionPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberVRDistortionCorrectionPostProcessProps,\n    newProps: FiberVRDistortionCorrectionPostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * VRDistortionCorrectionPostProcess used for mobile VR\n *\n * This code has been generated\n */\nexport class FiberVRDistortionCorrectionPostProcess\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVRDistortionCorrectionPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VRDistortionCorrectionPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'isRightEye',\n        type: 'boolean',\n        optional: false,\n      },\n      {\n        name: 'vrMetrics',\n        type: 'BabylonjsCoreVRCameraMetrics',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberVRDistortionCorrectionPostProcess',\n  }\n}\n\nexport class FiberVRMultiviewToSingleviewPostProcessPropsHandler\n  implements PropsHandler<FiberVRMultiviewToSingleviewPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberVRMultiviewToSingleviewPostProcessProps,\n    newProps: FiberVRMultiviewToSingleviewPostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * VRMultiviewToSingleview used to convert multiview texture arrays to standard textures for scenarios such as webVR\n * This will not be used for webXR as it supports displaying texture arrays directly\n *\n * This code has been generated\n */\nexport class FiberVRMultiviewToSingleviewPostProcess\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberVRMultiviewToSingleviewPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VRMultiviewToSingleviewPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'scaleFactor',\n        type: 'number',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberVRMultiviewToSingleviewPostProcess',\n  }\n}\n\nexport class FiberScreenSpaceCurvaturePostProcessPropsHandler\n  implements PropsHandler<FiberScreenSpaceCurvaturePostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberScreenSpaceCurvaturePostProcessProps,\n    newProps: FiberScreenSpaceCurvaturePostProcessProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.ridge, newProps.ridge, 'ridge', changedProps)\n    checkPrimitiveDiff(oldProps.valley, newProps.valley, 'valley', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The Screen Space curvature effect can help highlighting ridge and valley of a model.\n *\n * This code has been generated\n */\nexport class FiberScreenSpaceCurvaturePostProcess\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberScreenSpaceCurvaturePostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ScreenSpaceCurvaturePostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: false,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'blockCompilation',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberScreenSpaceCurvaturePostProcess',\n  }\n}\n\nexport class FiberSubSurfaceScatteringPostProcessPropsHandler\n  implements PropsHandler<FiberSubSurfaceScatteringPostProcessProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberSubSurfaceScatteringPostProcessProps,\n    newProps: FiberSubSurfaceScatteringPostProcessProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * Sub surface scattering post process\n *\n * This code has been generated\n */\nexport class FiberSubSurfaceScatteringPostProcess\n  implements HasPropsHandlers<FiberPostProcessProps>\n{\n  private propsHandlers: PropsHandler<FiberPostProcessProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSubSurfaceScatteringPostProcessPropsHandler(),\n      new FiberPostProcessPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPostProcessProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPostProcessProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SubSurfaceScatteringPostProcess',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: 'number | BabylonjsCorePostProcessOptions',\n        optional: false,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: true,\n      },\n      {\n        name: 'samplingMode',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'engine',\n        type: 'BabylonjsCoreEngine',\n        optional: true,\n      },\n      {\n        name: 'reusable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'textureType',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberSubSurfaceScatteringPostProcess',\n  }\n}\n\nexport class FiberGizmoPropsHandler implements PropsHandler<FiberGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberGizmoProps,\n    newProps: FiberGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.anchorPoint, newProps.anchorPoint, 'anchorPoint', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh' property (not coded) BabylonjsCoreGizmo.attachedMesh.\n    // type: 'BabylonjsCoreNode' property (not coded) BabylonjsCoreGizmo.attachedNode.\n    checkPrimitiveDiff(\n      oldProps.coordinatesMode,\n      newProps.coordinatesMode,\n      'coordinatesMode',\n      changedProps\n    )\n    checkQuaternionDiff(\n      oldProps.customRotationQuaternion,\n      newProps.customRotationQuaternion,\n      'customRotationQuaternion',\n      true,\n      changedProps\n    )\n    // type: 'BabylonjsCoreUtilityLayerRenderer' property (not coded) BabylonjsCoreGizmo.gizmoLayer.\n    checkPrimitiveDiff(oldProps.scaleRatio, newProps.scaleRatio, 'scaleRatio', changedProps)\n    checkPrimitiveDiff(\n      oldProps.updateGizmoPositionToMatchAttachedMesh,\n      newProps.updateGizmoPositionToMatchAttachedMesh,\n      'updateGizmoPositionToMatchAttachedMesh',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.updateGizmoRotationToMatchAttachedMesh,\n      newProps.updateGizmoRotationToMatchAttachedMesh,\n      'updateGizmoRotationToMatchAttachedMesh',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.updateScale, newProps.updateScale, 'updateScale', changedProps)\n    checkMethodDiff(oldProps.setCustomMesh, newProps.setCustomMesh, 'setCustomMesh', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Renders gizmos on top of an existing scene which provide controls for position, rotation, etc.\n *\n * This code has been generated\n */\nexport class FiberGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Gizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberGizmo',\n  }\n}\n\nexport class FiberPlaneDragGizmoPropsHandler implements PropsHandler<FiberPlaneDragGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberPlaneDragGizmoProps,\n    newProps: FiberPlaneDragGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCorePointerDragBehavior' property (not coded) BabylonjsCorePlaneDragGizmo.dragBehavior.\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkObservableDiff(\n      oldProps.onSnapObservable,\n      newProps.onSnapObservable,\n      'onSnapObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.snapDistance, newProps.snapDistance, 'snapDistance', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Single plane drag gizmo\n *\n * This code has been generated\n */\nexport class FiberPlaneDragGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPlaneDragGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PlaneDragGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'dragPlaneNormal',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'color',\n        type: 'BabylonjsCoreColor3',\n        optional: true,\n      },\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n      {\n        name: 'parent',\n        type: 'BabylonjsCorePositionGizmo',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberPlaneDragGizmo',\n  }\n}\n\nexport class FiberPlaneRotationGizmoPropsHandler\n  implements PropsHandler<FiberPlaneRotationGizmoProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPlaneRotationGizmoProps,\n    newProps: FiberPlaneRotationGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.angle, newProps.angle, 'angle', changedProps)\n    // type: 'BabylonjsCorePointerDragBehavior' property (not coded) BabylonjsCorePlaneRotationGizmo.dragBehavior.\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkObservableDiff(\n      oldProps.onSnapObservable,\n      newProps.onSnapObservable,\n      'onSnapObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.sensitivity, newProps.sensitivity, 'sensitivity', changedProps)\n    checkPrimitiveDiff(oldProps.snapDistance, newProps.snapDistance, 'snapDistance', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Single plane rotation gizmo\n *\n * This code has been generated\n */\nexport class FiberPlaneRotationGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPlaneRotationGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PlaneRotationGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'planeNormal',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'color',\n        type: 'BabylonjsCoreColor3',\n        optional: true,\n      },\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n      {\n        name: 'tessellation',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'parent',\n        type: 'BabylonjsCoreRotationGizmo',\n        optional: true,\n      },\n      {\n        name: 'useEulerRotation',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'thickness',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberPlaneRotationGizmo',\n  }\n}\n\nexport class FiberRotationGizmoPropsHandler implements PropsHandler<FiberRotationGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberRotationGizmoProps,\n    newProps: FiberRotationGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.anchorPoint, newProps.anchorPoint, 'anchorPoint', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh' property (not coded) BabylonjsCoreRotationGizmo.attachedMesh.\n    // type: 'BabylonjsCoreNode' property (not coded) BabylonjsCoreRotationGizmo.attachedNode.\n    checkPrimitiveDiff(\n      oldProps.coordinatesMode,\n      newProps.coordinatesMode,\n      'coordinatesMode',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragEndObservable,\n      newProps.onDragEndObservable,\n      'onDragEndObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragObservable,\n      newProps.onDragObservable,\n      'onDragObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragStartObservable,\n      newProps.onDragStartObservable,\n      'onDragStartObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.scaleRatio, newProps.scaleRatio, 'scaleRatio', changedProps)\n    checkPrimitiveDiff(oldProps.sensitivity, newProps.sensitivity, 'sensitivity', changedProps)\n    checkPrimitiveDiff(oldProps.snapDistance, newProps.snapDistance, 'snapDistance', changedProps)\n    checkPrimitiveDiff(\n      oldProps.updateGizmoPositionToMatchAttachedMesh,\n      newProps.updateGizmoPositionToMatchAttachedMesh,\n      'updateGizmoPositionToMatchAttachedMesh',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.updateGizmoRotationToMatchAttachedMesh,\n      newProps.updateGizmoRotationToMatchAttachedMesh,\n      'updateGizmoRotationToMatchAttachedMesh',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.updateScale, newProps.updateScale, 'updateScale', changedProps)\n    // type: 'BabylonjsCoreIPlaneRotationGizmo' property (not coded) BabylonjsCoreRotationGizmo.xGizmo.\n    // type: 'BabylonjsCoreIPlaneRotationGizmo' property (not coded) BabylonjsCoreRotationGizmo.yGizmo.\n    // type: 'BabylonjsCoreIPlaneRotationGizmo' property (not coded) BabylonjsCoreRotationGizmo.zGizmo.\n    checkMethodDiff(\n      oldProps.addToAxisCache,\n      newProps.addToAxisCache,\n      'addToAxisCache',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Gizmo that enables rotating a mesh along 3 axis\n *\n * This code has been generated\n */\nexport class FiberRotationGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberRotationGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'RotationGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n      {\n        name: 'tessellation',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'useEulerRotation',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'thickness',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'gizmoManager',\n        type: 'BabylonjsCoreGizmoManager',\n        optional: true,\n      },\n      {\n        name: 'options',\n        type: 'BabylonjsCoreRotationGizmoOptions',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberRotationGizmo',\n  }\n}\n\nexport class FiberAxisScaleGizmoPropsHandler implements PropsHandler<FiberAxisScaleGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberAxisScaleGizmoProps,\n    newProps: FiberAxisScaleGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCorePointerDragBehavior' property (not coded) BabylonjsCoreAxisScaleGizmo.dragBehavior.\n    checkPrimitiveDiff(oldProps.dragScale, newProps.dragScale, 'dragScale', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkObservableDiff(\n      oldProps.onSnapObservable,\n      newProps.onSnapObservable,\n      'onSnapObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.sensitivity, newProps.sensitivity, 'sensitivity', changedProps)\n    checkPrimitiveDiff(oldProps.snapDistance, newProps.snapDistance, 'snapDistance', changedProps)\n    checkPrimitiveDiff(\n      oldProps.uniformScaling,\n      newProps.uniformScaling,\n      'uniformScaling',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setCustomMesh, newProps.setCustomMesh, 'setCustomMesh', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Single axis scale gizmo\n *\n * This code has been generated\n */\nexport class FiberAxisScaleGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberAxisScaleGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AxisScaleGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'dragAxis',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'color',\n        type: 'BabylonjsCoreColor3',\n        optional: true,\n      },\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n      {\n        name: 'parent',\n        type: 'BabylonjsCoreScaleGizmo',\n        optional: true,\n      },\n      {\n        name: 'thickness',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberAxisScaleGizmo',\n  }\n}\n\nexport class FiberScaleGizmoPropsHandler implements PropsHandler<FiberScaleGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberScaleGizmoProps,\n    newProps: FiberScaleGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.anchorPoint, newProps.anchorPoint, 'anchorPoint', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh' property (not coded) BabylonjsCoreScaleGizmo.attachedMesh.\n    // type: 'BabylonjsCoreNode' property (not coded) BabylonjsCoreScaleGizmo.attachedNode.\n    checkPrimitiveDiff(\n      oldProps.coordinatesMode,\n      newProps.coordinatesMode,\n      'coordinatesMode',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragEndObservable,\n      newProps.onDragEndObservable,\n      'onDragEndObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragObservable,\n      newProps.onDragObservable,\n      'onDragObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragStartObservable,\n      newProps.onDragStartObservable,\n      'onDragStartObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.scaleRatio, newProps.scaleRatio, 'scaleRatio', changedProps)\n    checkPrimitiveDiff(oldProps.sensitivity, newProps.sensitivity, 'sensitivity', changedProps)\n    checkPrimitiveDiff(oldProps.snapDistance, newProps.snapDistance, 'snapDistance', changedProps)\n    // type: 'BabylonjsCoreIAxisScaleGizmo' property (not coded) BabylonjsCoreScaleGizmo.uniformScaleGizmo.\n    checkPrimitiveDiff(\n      oldProps.updateGizmoRotationToMatchAttachedMesh,\n      newProps.updateGizmoRotationToMatchAttachedMesh,\n      'updateGizmoRotationToMatchAttachedMesh',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.updateScale, newProps.updateScale, 'updateScale', changedProps)\n    // type: 'BabylonjsCoreIAxisScaleGizmo' property (not coded) BabylonjsCoreScaleGizmo.xGizmo.\n    // type: 'BabylonjsCoreIAxisScaleGizmo' property (not coded) BabylonjsCoreScaleGizmo.yGizmo.\n    // type: 'BabylonjsCoreIAxisScaleGizmo' property (not coded) BabylonjsCoreScaleGizmo.zGizmo.\n    checkMethodDiff(\n      oldProps.addToAxisCache,\n      newProps.addToAxisCache,\n      'addToAxisCache',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Gizmo that enables scaling a mesh along 3 axis\n *\n * This code has been generated\n */\nexport class FiberScaleGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberScaleGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ScaleGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n      {\n        name: 'thickness',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'gizmoManager',\n        type: 'BabylonjsCoreGizmoManager',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberScaleGizmo',\n  }\n}\n\nexport class FiberBoundingBoxGizmoPropsHandler implements PropsHandler<FiberBoundingBoxGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberBoundingBoxGizmoProps,\n    newProps: FiberBoundingBoxGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkVector3Diff(oldProps.axisFactor, newProps.axisFactor, 'axisFactor', true, changedProps)\n    checkPrimitiveDiff(\n      oldProps.fixedDragMeshBoundsSize,\n      newProps.fixedDragMeshBoundsSize,\n      'fixedDragMeshBoundsSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.fixedDragMeshScreenSize,\n      newProps.fixedDragMeshScreenSize,\n      'fixedDragMeshScreenSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.fixedDragMeshScreenSizeDistanceFactor,\n      newProps.fixedDragMeshScreenSizeDistanceFactor,\n      'fixedDragMeshScreenSizeDistanceFactor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ignoreChildren,\n      newProps.ignoreChildren,\n      'ignoreChildren',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.includeChildPredicate,\n      newProps.includeChildPredicate,\n      'includeChildPredicate',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragStartObservable,\n      newProps.onDragStartObservable,\n      'onDragStartObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onRotationSphereDragEndObservable,\n      newProps.onRotationSphereDragEndObservable,\n      'onRotationSphereDragEndObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onRotationSphereDragObservable,\n      newProps.onRotationSphereDragObservable,\n      'onRotationSphereDragObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onScaleBoxDragEndObservable,\n      newProps.onScaleBoxDragEndObservable,\n      'onScaleBoxDragEndObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onScaleBoxDragObservable,\n      newProps.onScaleBoxDragObservable,\n      'onScaleBoxDragObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rotationSnapDistance,\n      newProps.rotationSnapDistance,\n      'rotationSnapDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rotationSphereSize,\n      newProps.rotationSphereSize,\n      'rotationSphereSize',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.scaleBoxSize, newProps.scaleBoxSize, 'scaleBoxSize', changedProps)\n    checkPrimitiveDiff(\n      oldProps.scaleDragSpeed,\n      newProps.scaleDragSpeed,\n      'scaleDragSpeed',\n      changedProps\n    )\n    checkVector3Diff(oldProps.scalePivot, newProps.scalePivot, 'scalePivot', false, changedProps)\n    checkPrimitiveDiff(\n      oldProps['scalePivot-x'],\n      newProps['scalePivot-x'],\n      'scalePivot.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['scalePivot-y'],\n      newProps['scalePivot-y'],\n      'scalePivot.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['scalePivot-z'],\n      newProps['scalePivot-z'],\n      'scalePivot.z',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.scalingSnapDistance,\n      newProps.scalingSnapDistance,\n      'scalingSnapDistance',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setColor, newProps.setColor, 'setColor', changedProps)\n    checkMethodDiff(\n      oldProps.setEnabledRotationAxis,\n      newProps.setEnabledRotationAxis,\n      'setEnabledRotationAxis',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setEnabledScaling,\n      newProps.setEnabledScaling,\n      'setEnabledScaling',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Bounding box gizmo\n *\n * This code has been generated\n */\nexport class FiberBoundingBoxGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberBoundingBoxGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BoundingBoxGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'color',\n        type: 'BabylonjsCoreColor3',\n        optional: true,\n      },\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberBoundingBoxGizmo',\n  }\n}\n\nexport class FiberPositionGizmoPropsHandler implements PropsHandler<FiberPositionGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberPositionGizmoProps,\n    newProps: FiberPositionGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.anchorPoint, newProps.anchorPoint, 'anchorPoint', changedProps)\n    // type: 'BabylonjsCoreAbstractMesh' property (not coded) BabylonjsCorePositionGizmo.attachedMesh.\n    // type: 'BabylonjsCoreNode' property (not coded) BabylonjsCorePositionGizmo.attachedNode.\n    checkPrimitiveDiff(\n      oldProps.coordinatesMode,\n      newProps.coordinatesMode,\n      'coordinatesMode',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragEndObservable,\n      newProps.onDragEndObservable,\n      'onDragEndObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragObservable,\n      newProps.onDragObservable,\n      'onDragObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragStartObservable,\n      newProps.onDragStartObservable,\n      'onDragStartObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.planarGizmoEnabled,\n      newProps.planarGizmoEnabled,\n      'planarGizmoEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.scaleRatio, newProps.scaleRatio, 'scaleRatio', changedProps)\n    checkPrimitiveDiff(oldProps.snapDistance, newProps.snapDistance, 'snapDistance', changedProps)\n    checkPrimitiveDiff(\n      oldProps.updateGizmoPositionToMatchAttachedMesh,\n      newProps.updateGizmoPositionToMatchAttachedMesh,\n      'updateGizmoPositionToMatchAttachedMesh',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.updateGizmoRotationToMatchAttachedMesh,\n      newProps.updateGizmoRotationToMatchAttachedMesh,\n      'updateGizmoRotationToMatchAttachedMesh',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.updateScale, newProps.updateScale, 'updateScale', changedProps)\n    // type: 'BabylonjsCoreIAxisDragGizmo' property (not coded) BabylonjsCorePositionGizmo.xGizmo.\n    // type: 'BabylonjsCoreIPlaneDragGizmo' property (not coded) BabylonjsCorePositionGizmo.xPlaneGizmo.\n    // type: 'BabylonjsCoreIAxisDragGizmo' property (not coded) BabylonjsCorePositionGizmo.yGizmo.\n    // type: 'BabylonjsCoreIPlaneDragGizmo' property (not coded) BabylonjsCorePositionGizmo.yPlaneGizmo.\n    // type: 'BabylonjsCoreIAxisDragGizmo' property (not coded) BabylonjsCorePositionGizmo.zGizmo.\n    // type: 'BabylonjsCoreIPlaneDragGizmo' property (not coded) BabylonjsCorePositionGizmo.zPlaneGizmo.\n    checkMethodDiff(\n      oldProps.addToAxisCache,\n      newProps.addToAxisCache,\n      'addToAxisCache',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Gizmo that enables dragging a mesh along 3 axis\n *\n * This code has been generated\n */\nexport class FiberPositionGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPositionGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PositionGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n      {\n        name: 'thickness',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'gizmoManager',\n        type: 'BabylonjsCoreGizmoManager',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberPositionGizmo',\n  }\n}\n\nexport class FiberAxisDragGizmoPropsHandler implements PropsHandler<FiberAxisDragGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberAxisDragGizmoProps,\n    newProps: FiberAxisDragGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCorePointerDragBehavior' property (not coded) BabylonjsCoreAxisDragGizmo.dragBehavior.\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkObservableDiff(\n      oldProps.onSnapObservable,\n      newProps.onSnapObservable,\n      'onSnapObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.snapDistance, newProps.snapDistance, 'snapDistance', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Single axis drag gizmo\n *\n * This code has been generated\n */\nexport class FiberAxisDragGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberAxisDragGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AxisDragGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'dragAxis',\n        type: 'BabylonjsCoreVector3',\n        optional: false,\n      },\n      {\n        name: 'color',\n        type: 'BabylonjsCoreColor3',\n        optional: true,\n      },\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n      {\n        name: 'parent',\n        type: 'BabylonjsCorePositionGizmo',\n        optional: true,\n      },\n      {\n        name: 'thickness',\n        type: 'number',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberAxisDragGizmo',\n  }\n}\n\nexport class FiberLightGizmoPropsHandler implements PropsHandler<FiberLightGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberLightGizmoProps,\n    newProps: FiberLightGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreNode' property (not coded) BabylonjsCoreLightGizmo.attachedNode.\n    checkObjectDiff(oldProps.light, newProps.light, 'light', changedProps)\n    checkObservableDiff(\n      oldProps.onClickedObservable,\n      newProps.onClickedObservable,\n      'onClickedObservable',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Gizmo that enables viewing a light\n *\n * This code has been generated\n */\nexport class FiberLightGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberLightGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'LightGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberLightGizmo',\n  }\n}\n\nexport class FiberCameraGizmoPropsHandler implements PropsHandler<FiberCameraGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberCameraGizmoProps,\n    newProps: FiberCameraGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreCamera' property (not coded) BabylonjsCoreCameraGizmo.camera.\n    checkPrimitiveDiff(\n      oldProps.displayFrustum,\n      newProps.displayFrustum,\n      'displayFrustum',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onClickedObservable,\n      newProps.onClickedObservable,\n      'onClickedObservable',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Gizmo that enables viewing a camera\n *\n * This code has been generated\n */\nexport class FiberCameraGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberCameraGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'CameraGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'gizmoLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberCameraGizmo',\n  }\n}\n\nexport class FiberSlateGizmoPropsHandler implements PropsHandler<FiberSlateGizmoProps> {\n  getPropertyUpdates(\n    oldProps: FiberSlateGizmoProps,\n    newProps: FiberSlateGizmoProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsGuiHolographicSlate' property (not coded) BabylonjsGuiSlateGizmo.attachedSlate.\n    checkPrimitiveDiff(\n      oldProps.fixedScreenSize,\n      newProps.fixedScreenSize,\n      'fixedScreenSize',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.fixedScreenSizeDistanceFactor,\n      newProps.fixedScreenSizeDistanceFactor,\n      'fixedScreenSizeDistanceFactor',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Gizmo to resize 2D slates\n *\n * This code has been generated\n */\nexport class FiberSlateGizmo implements HasPropsHandlers<FiberGizmoProps> {\n  private propsHandlers: PropsHandler<FiberGizmoProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberSlateGizmoPropsHandler(), new FiberGizmoPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SlateGizmo',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'utilityLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGizmo: true,\n    className: 'FiberSlateGizmo',\n  }\n}\n\nexport class FiberGUI3DManagerPropsHandler implements PropsHandler<FiberGUI3DManagerProps> {\n  getPropertyUpdates(\n    oldProps: FiberGUI3DManagerProps,\n    newProps: FiberGUI3DManagerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.controlScaling,\n      newProps.controlScaling,\n      'controlScaling',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPickedPointChangedObservable,\n      newProps.onPickedPointChangedObservable,\n      'onPickedPointChangedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPickingObservable,\n      newProps.onPickingObservable,\n      'onPickingObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useRealisticScaling,\n      newProps.useRealisticScaling,\n      'useRealisticScaling',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addControl, newProps.addControl, 'addControl', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to manage 3D user interface\n *\n * This code has been generated\n */\nexport class FiberGUI3DManager implements HasPropsHandlers<FiberGUI3DManagerProps> {\n  private propsHandlers: PropsHandler<FiberGUI3DManagerProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberGUI3DManagerPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGUI3DManagerProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGUI3DManagerProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GUI3DManager',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isGUI3DControl: true,\n    className: 'FiberGUI3DManager',\n  }\n}\n\nexport class FiberEnvironmentHelperPropsHandler\n  implements PropsHandler<FiberEnvironmentHelperProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberEnvironmentHelperProps,\n    newProps: FiberEnvironmentHelperProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkObservableDiff(\n      oldProps.onErrorObservable,\n      newProps.onErrorObservable,\n      'onErrorObservable',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setMainColor, newProps.setMainColor, 'setMainColor', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The EnvironmentHelper class can be used to add a fully featured non-expensive background to your scene.\n * It includes by default a skybox and a ground relying on the BackgroundMaterial.\n * It also helps with the default setup of your ImageProcessingConfiguration.\n *\n * This code has been generated\n */\nexport class FiberEnvironmentHelper implements HasPropsHandlers<FiberEnvironmentHelperProps> {\n  private propsHandlers: PropsHandler<FiberEnvironmentHelperProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberEnvironmentHelperPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberEnvironmentHelperProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberEnvironmentHelperProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'EnvironmentHelper',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'options',\n        type: 'Partial<BabylonjsCoreIEnvironmentHelperOptions>',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isEnvironment: true,\n    className: 'FiberEnvironmentHelper',\n  }\n}\n\nexport class FiberPhysicsImpostorPropsHandler implements PropsHandler<FiberPhysicsImpostorProps> {\n  getPropertyUpdates(\n    oldProps: FiberPhysicsImpostorProps,\n    newProps: FiberPhysicsImpostorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkLambdaDiff(oldProps.afterStep, newProps.afterStep, 'afterStep', changedProps)\n    checkLambdaDiff(oldProps.beforeStep, newProps.beforeStep, 'beforeStep', changedProps)\n    checkPrimitiveDiff(oldProps.friction, newProps.friction, 'friction', changedProps)\n    checkPrimitiveDiff(oldProps.mass, newProps.mass, 'mass', changedProps)\n    // type: 'BabylonjsCoreIPhysicsEnabledObject' property (not coded) BabylonjsCorePhysicsImpostor.object.\n    checkLambdaDiff(oldProps.onCollide, newProps.onCollide, 'onCollide', changedProps)\n    checkLambdaDiff(\n      oldProps.onCollideEvent,\n      newProps.onCollideEvent,\n      'onCollideEvent',\n      changedProps\n    )\n    // type: 'BabylonjsCorePhysicsImpostor' property (not coded) BabylonjsCorePhysicsImpostor.parent.\n    // type: 'any' property (not coded) BabylonjsCorePhysicsImpostor.physicsBody.\n    checkPrimitiveDiff(\n      oldProps.positionIterations,\n      newProps.positionIterations,\n      'positionIterations',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.pressure, newProps.pressure, 'pressure', changedProps)\n    checkPrimitiveDiff(oldProps.restitution, newProps.restitution, 'restitution', changedProps)\n    checkPrimitiveDiff(oldProps.segments, newProps.segments, 'segments', changedProps)\n    checkPrimitiveDiff(oldProps.soft, newProps.soft, 'soft', changedProps)\n    checkPrimitiveDiff(oldProps.stiffness, newProps.stiffness, 'stiffness', changedProps)\n    checkPrimitiveDiff(oldProps.type, newProps.type, 'type', changedProps)\n    checkPrimitiveDiff(oldProps.uniqueId, newProps.uniqueId, 'uniqueId', changedProps)\n    checkPrimitiveDiff(\n      oldProps.velocityIterations,\n      newProps.velocityIterations,\n      'velocityIterations',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addAnchor, newProps.addAnchor, 'addAnchor', changedProps)\n    checkMethodDiff(oldProps.addHook, newProps.addHook, 'addHook', changedProps)\n    checkMethodDiff(oldProps.addJoint, newProps.addJoint, 'addJoint', changedProps)\n    checkMethodDiff(\n      oldProps.setAngularVelocity,\n      newProps.setAngularVelocity,\n      'setAngularVelocity',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setDeltaPosition,\n      newProps.setDeltaPosition,\n      'setDeltaPosition',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setDeltaRotation,\n      newProps.setDeltaRotation,\n      'setDeltaRotation',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setLinearVelocity,\n      newProps.setLinearVelocity,\n      'setLinearVelocity',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setMass, newProps.setMass, 'setMass', changedProps)\n    checkMethodDiff(oldProps.setParam, newProps.setParam, 'setParam', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Represents a physics imposter\n *\n * This code has been generated\n */\nexport class FiberPhysicsImpostor implements HasPropsHandlers<FiberPhysicsImpostorProps> {\n  private propsHandlers: PropsHandler<FiberPhysicsImpostorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPhysicsImpostorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPhysicsImpostorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPhysicsImpostorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PhysicsImpostor',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'object',\n        type: 'BabylonjsCoreIPhysicsEnabledObject',\n        optional: true,\n      },\n      {\n        name: 'type',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: '_options',\n        type: 'BabylonjsCorePhysicsImpostorParameters',\n        optional: true,\n      },\n      {\n        name: '_scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    delayCreation: true,\n    className: 'FiberPhysicsImpostor',\n  }\n}\n\nexport class FiberPhysicsAggregatePropsHandler implements PropsHandler<FiberPhysicsAggregateProps> {\n  getPropertyUpdates(\n    oldProps: FiberPhysicsAggregateProps,\n    newProps: FiberPhysicsAggregateProps\n  ): PropertyUpdate[] | null {\n    // skipping type: 'BabylonjsCorePhysicsBody' property (not coded) BabylonjsCorePhysicsAggregate.body.\n    // skipping type: 'BabylonjsCorePhysicsMaterial' property (not coded) BabylonjsCorePhysicsAggregate.material.\n    // skipping type: 'BabylonjsCorePhysicsShape' property (not coded) BabylonjsCorePhysicsAggregate.shape.\n    // skipping type: 'BabylonjsCoreTransformNode' property (not coded) BabylonjsCorePhysicsAggregate.transformNode.\n    // skipping type: 'BabylonjsCorePhysicsShapeType | BabylonjsCorePhysicsShape' property (not coded) BabylonjsCorePhysicsAggregate.type.\n    return null // no props to check\n  }\n}\n\n/**\n * Helper class to create and interact with a PhysicsAggregate.\n * This is a transition object that works like Physics Plugin V1 Impostors.\n * This helper instanciate all mandatory physics objects to get a body/shape and material.\n * It's less efficient that handling body and shapes independently but for prototyping or\n * a small numbers of physics objects, it's good enough.\n *\n * This code has been generated\n */\nexport class FiberPhysicsAggregate implements HasPropsHandlers<FiberPhysicsAggregateProps> {\n  private propsHandlers: PropsHandler<FiberPhysicsAggregateProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPhysicsAggregatePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPhysicsAggregateProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPhysicsAggregateProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PhysicsAggregate',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'transformNode',\n        type: 'BabylonjsCoreTransformNode',\n        optional: true,\n      },\n      {\n        name: 'type',\n        type: 'BabylonjsCorePhysicsShapeType | BabylonjsCorePhysicsShape',\n        optional: false,\n      },\n      {\n        name: '_options',\n        type: 'BabylonjsCorePhysicsAggregateParameters',\n        optional: true,\n      },\n      {\n        name: '_scene',\n        type: 'BabylonjsCoreScene',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    delayCreation: true,\n    className: 'FiberPhysicsAggregate',\n  }\n}\n\nexport class FiberVRExperienceHelperPropsHandler\n  implements PropsHandler<FiberVRExperienceHelperProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberVRExperienceHelperProps,\n    newProps: FiberVRExperienceHelperProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.displayGaze, newProps.displayGaze, 'displayGaze', changedProps)\n    checkPrimitiveDiff(\n      oldProps.displayLaserPointer,\n      newProps.displayLaserPointer,\n      'displayLaserPointer',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.enableGazeEvenWhenNoPointerLock,\n      newProps.enableGazeEvenWhenNoPointerLock,\n      'enableGazeEvenWhenNoPointerLock',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.exitVROnDoubleTap,\n      newProps.exitVROnDoubleTap,\n      'exitVROnDoubleTap',\n      changedProps\n    )\n    // type: 'BabylonjsCoreMesh' property (not coded) BabylonjsCoreVRExperienceHelper.gazeTrackerMesh.\n    checkLambdaDiff(\n      oldProps.meshSelectionPredicate,\n      newProps.meshSelectionPredicate,\n      'meshSelectionPredicate',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterCameraTeleport,\n      newProps.onAfterCameraTeleport,\n      'onAfterCameraTeleport',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterEnteringVRObservable,\n      newProps.onAfterEnteringVRObservable,\n      'onAfterEnteringVRObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeCameraTeleport,\n      newProps.onBeforeCameraTeleport,\n      'onBeforeCameraTeleport',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onEnteringVRObservable,\n      newProps.onEnteringVRObservable,\n      'onEnteringVRObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onExitingVRObservable,\n      newProps.onExitingVRObservable,\n      'onExitingVRObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewMeshPicked,\n      newProps.onNewMeshPicked,\n      'onNewMeshPicked',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewMeshSelected,\n      newProps.onNewMeshSelected,\n      'onNewMeshSelected',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onSelectedMeshUnselected,\n      newProps.onSelectedMeshUnselected,\n      'onSelectedMeshUnselected',\n      changedProps\n    )\n    checkVector3Diff(oldProps.position, newProps.position, 'position', true, changedProps)\n    checkLambdaDiff(\n      oldProps.raySelectionPredicate,\n      newProps.raySelectionPredicate,\n      'raySelectionPredicate',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.requestPointerLockOnFullScreen,\n      newProps.requestPointerLockOnFullScreen,\n      'requestPointerLockOnFullScreen',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.teleportationEnabled,\n      newProps.teleportationEnabled,\n      'teleportationEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCoreMesh' property (not coded) BabylonjsCoreVRExperienceHelper.teleportationTarget.\n    checkPrimitiveDiff(\n      oldProps.updateControllerLaserColor,\n      newProps.updateControllerLaserColor,\n      'updateControllerLaserColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.updateGazeTrackerColor,\n      newProps.updateGazeTrackerColor,\n      'updateGazeTrackerColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.updateGazeTrackerScale,\n      newProps.updateGazeTrackerScale,\n      'updateGazeTrackerScale',\n      changedProps\n    )\n    // type: 'BabylonjsCoreVRExperienceHelperOptions' property (not coded) BabylonjsCoreVRExperienceHelper.webVROptions.\n    // type: 'BabylonjsCoreWebXRDefaultExperience' property (not coded) BabylonjsCoreVRExperienceHelper.xr.\n    checkPrimitiveDiff(oldProps.xrTestDone, newProps.xrTestDone, 'xrTestDone', changedProps)\n    checkMethodDiff(oldProps.addFloorMesh, newProps.addFloorMesh, 'addFloorMesh', changedProps)\n    checkMethodDiff(\n      oldProps.enableTeleportation,\n      newProps.enableTeleportation,\n      'enableTeleportation',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setGazeColor, newProps.setGazeColor, 'setGazeColor', changedProps)\n    checkMethodDiff(oldProps.setLaserColor, newProps.setLaserColor, 'setLaserColor', changedProps)\n    checkMethodDiff(\n      oldProps.setLaserLightingState,\n      newProps.setLaserLightingState,\n      'setLaserLightingState',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Helps to quickly add VR support to an existing scene.\n * See https://doc.babylonjs.com/features/featuresDeepDive/cameras/webVRHelper\n *\n * This code has been generated\n */\nexport class FiberVRExperienceHelper implements HasPropsHandlers<FiberVRExperienceHelperProps> {\n  private propsHandlers: PropsHandler<FiberVRExperienceHelperProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberVRExperienceHelperPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberVRExperienceHelperProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberVRExperienceHelperProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'VRExperienceHelper',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'webVROptions',\n        type: 'BabylonjsCoreVRExperienceHelperOptions',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberVRExperienceHelper',\n  }\n}\n\nexport class FiberDynamicTerrainPropsHandler implements PropsHandler<FiberDynamicTerrainProps> {\n  getPropertyUpdates(\n    oldProps: FiberDynamicTerrainProps,\n    newProps: FiberDynamicTerrainProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreCamera' property (not coded) ExtensionsDynamicTerrain.camera.\n    checkPrimitiveDiff(\n      oldProps.cameraLODCorrection,\n      newProps.cameraLODCorrection,\n      'cameraLODCorrection',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.computeNormals,\n      newProps.computeNormals,\n      'computeNormals',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.initialLOD, newProps.initialLOD, 'initialLOD', changedProps)\n    checkPrimitiveDiff(\n      oldProps.isAlwaysVisible,\n      newProps.isAlwaysVisible,\n      'isAlwaysVisible',\n      changedProps\n    )\n    checkNumericArrayDiff(oldProps.LODLimits, newProps.LODLimits, 'LODLimits', changedProps)\n    checkPrimitiveDiff(oldProps.LODNegativeX, newProps.LODNegativeX, 'LODNegativeX', changedProps)\n    checkPrimitiveDiff(oldProps.LODNegativeZ, newProps.LODNegativeZ, 'LODNegativeZ', changedProps)\n    checkPrimitiveDiff(oldProps.LODPositiveX, newProps.LODPositiveX, 'LODPositiveX', changedProps)\n    checkPrimitiveDiff(oldProps.LODPositiveZ, newProps.LODPositiveZ, 'LODPositiveZ', changedProps)\n    // type: 'number[] | Float32Array' property (not coded) ExtensionsDynamicTerrain.mapColors.\n    // type: 'number[] | Float32Array' property (not coded) ExtensionsDynamicTerrain.mapData.\n    // type: 'number[] | Float32Array' property (not coded) ExtensionsDynamicTerrain.mapNormals.\n    checkPrimitiveDiff(oldProps.mapSubX, newProps.mapSubX, 'mapSubX', changedProps)\n    checkPrimitiveDiff(oldProps.mapSubZ, newProps.mapSubZ, 'mapSubZ', changedProps)\n    // type: 'number[] | Float32Array' property (not coded) ExtensionsDynamicTerrain.mapUVs.\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(\n      oldProps.precomputeNormalsFromMap,\n      newProps.precomputeNormalsFromMap,\n      'precomputeNormalsFromMap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.refreshEveryFrame,\n      newProps.refreshEveryFrame,\n      'refreshEveryFrame',\n      changedProps\n    )\n    // type: '{ x: number; z: number; }' property (not coded) ExtensionsDynamicTerrain.shiftFromCamera.\n    checkPrimitiveDiff(\n      oldProps.subToleranceX,\n      newProps.subToleranceX,\n      'subToleranceX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.subToleranceZ,\n      newProps.subToleranceZ,\n      'subToleranceZ',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useCustomVertexFunction,\n      newProps.useCustomVertexFunction,\n      'useCustomVertexFunction',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/** This code has been generated */\nexport class FiberDynamicTerrain implements HasPropsHandlers<FiberDynamicTerrainProps> {\n  private propsHandlers: PropsHandler<FiberDynamicTerrainProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberDynamicTerrainPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberDynamicTerrainProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberDynamicTerrainProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DynamicTerrain',\n    namespace: './extensions/DynamicTerrain',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'terrainSub',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'mapData',\n            type: 'number[] | Float32Array',\n            optional: true,\n          },\n          {\n            name: 'mapSubX',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'mapSubZ',\n            type: 'number',\n            optional: true,\n          },\n          {\n            name: 'mapUVs',\n            type: 'number[] | Float32Array',\n            optional: true,\n          },\n          {\n            name: 'mapColors',\n            type: 'number[] | Float32Array',\n            optional: true,\n          },\n          {\n            name: 'mapNormals',\n            type: 'number[] | Float32Array',\n            optional: true,\n          },\n          {\n            name: 'invertSide',\n            type: 'boolean',\n            optional: true,\n          },\n          {\n            name: 'camera',\n            type: 'BabylonjsCoreCamera',\n            optional: true,\n          },\n          {\n            name: 'SPmapData',\n            type: 'number[][] | Float32Array[]',\n            optional: true,\n          },\n          {\n            name: 'sps',\n            type: 'BabylonjsCoreSolidParticleSystem',\n            optional: true,\n          },\n          {\n            name: 'SPcolorData',\n            type: 'number[][] | Float32Array[]',\n            optional: true,\n          },\n          {\n            name: 'SPuvData',\n            type: 'number[][] | Float32Array[]',\n            optional: true,\n          },\n          {\n            name: 'intializedCallback',\n            type: 'any',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    acceptsMaterials: true,\n    className: 'FiberDynamicTerrain',\n  }\n}\n\nexport class FiberPointsCloudSystemPropsHandler\n  implements PropsHandler<FiberPointsCloudSystemProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPointsCloudSystemProps,\n    newProps: FiberPointsCloudSystemProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.computeBoundingBox,\n      newProps.computeBoundingBox,\n      'computeBoundingBox',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.computeParticleColor,\n      newProps.computeParticleColor,\n      'computeParticleColor',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.computeParticleRotation,\n      newProps.computeParticleRotation,\n      'computeParticleRotation',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.computeParticleTexture,\n      newProps.computeParticleTexture,\n      'computeParticleTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.counter, newProps.counter, 'counter', changedProps)\n    checkPrimitiveDiff(\n      oldProps.isAlwaysVisible,\n      newProps.isAlwaysVisible,\n      'isAlwaysVisible',\n      changedProps\n    )\n    // type: 'BabylonjsCoreMesh' property (not coded) BabylonjsCorePointsCloudSystem.mesh.\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(oldProps.nbParticles, newProps.nbParticles, 'nbParticles', changedProps)\n    // type: 'BabylonjsCoreCloudPoint[]' property (not coded) BabylonjsCorePointsCloudSystem.particles.\n    // type: 'any' property (not coded) BabylonjsCorePointsCloudSystem.vars.\n    checkMethodDiff(oldProps.addPoints, newProps.addPoints, 'addPoints', changedProps)\n    checkMethodDiff(\n      oldProps.addSurfacePoints,\n      newProps.addSurfacePoints,\n      'addSurfacePoints',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addVolumePoints,\n      newProps.addVolumePoints,\n      'addVolumePoints',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setParticles, newProps.setParticles, 'setParticles', changedProps)\n    checkMethodDiff(\n      oldProps.setVisibilityBox,\n      newProps.setVisibilityBox,\n      'setVisibilityBox',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The PointCloudSystem (PCS) is a single updatable mesh. The points corresponding to the vertices of this big mesh.\n * As it is just a mesh, the PointCloudSystem has all the same properties as any other BJS mesh : not more, not less. It can be scaled, rotated, translated, enlighted, textured, moved, etc.\n *\n * The PointCloudSystem is also a particle system, with each point being a particle. It provides some methods to manage the particles.\n * However it is behavior agnostic. This means it has no emitter, no particle physics, no particle recycler. You have to implement your own behavior.\n *\n * Full documentation here : TO BE ENTERED\n *\n * This code has been generated\n */\nexport class FiberPointsCloudSystem implements HasPropsHandlers<FiberPointsCloudSystemProps> {\n  private propsHandlers: PropsHandler<FiberPointsCloudSystemProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPointsCloudSystemPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPointsCloudSystemProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPointsCloudSystemProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PointsCloudSystem',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'pointSize',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'updatable',\n            type: 'boolean',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPointsCloudSystem',\n  }\n}\n\nexport class FiberViewportPropsHandler implements PropsHandler<FiberViewportProps> {\n  getPropertyUpdates(\n    oldProps: FiberViewportProps,\n    newProps: FiberViewportProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.height, newProps.height, 'height', changedProps)\n    checkPrimitiveDiff(oldProps.width, newProps.width, 'width', changedProps)\n    checkPrimitiveDiff(oldProps.x, newProps.x, 'x', changedProps)\n    checkPrimitiveDiff(oldProps.y, newProps.y, 'y', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to represent a viewport on screen\n *\n * This code has been generated\n */\nexport class FiberViewport implements HasPropsHandlers<FiberViewportProps> {\n  private propsHandlers: PropsHandler<FiberViewportProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberViewportPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberViewportProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberViewportProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Viewport',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'x',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'y',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'width',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'height',\n        type: 'number',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberViewport',\n  }\n}\n\nexport class FiberUtilityLayerRendererPropsHandler\n  implements PropsHandler<FiberUtilityLayerRendererProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberUtilityLayerRendererProps,\n    newProps: FiberUtilityLayerRendererProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkLambdaDiff(\n      oldProps.mainSceneTrackerPredicate,\n      newProps.mainSceneTrackerPredicate,\n      'mainSceneTrackerPredicate',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.onlyCheckPointerDownEvents,\n      newProps.onlyCheckPointerDownEvents,\n      'onlyCheckPointerDownEvents',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPointerOutObservable,\n      newProps.onPointerOutObservable,\n      'onPointerOutObservable',\n      changedProps\n    )\n    // type: 'BabylonjsCoreScene' property (not coded) BabylonjsCoreUtilityLayerRenderer.originalScene.\n    checkPrimitiveDiff(\n      oldProps.pickingEnabled,\n      newProps.pickingEnabled,\n      'pickingEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pickUtilitySceneFirst,\n      newProps.pickUtilitySceneFirst,\n      'pickUtilitySceneFirst',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.processAllEvents,\n      newProps.processAllEvents,\n      'processAllEvents',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.shouldRender, newProps.shouldRender, 'shouldRender', changedProps)\n    // type: 'BabylonjsCoreScene' property (not coded) BabylonjsCoreUtilityLayerRenderer.utilityLayerScene.\n    checkMethodDiff(\n      oldProps.setRenderCamera,\n      newProps.setRenderCamera,\n      'setRenderCamera',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Renders a layer on top of an existing scene\n *\n * This code has been generated\n */\nexport class FiberUtilityLayerRenderer implements HasPropsHandlers<FiberUtilityLayerRendererProps> {\n  private propsHandlers: PropsHandler<FiberUtilityLayerRendererProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberUtilityLayerRendererPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberUtilityLayerRendererProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberUtilityLayerRendererProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'UtilityLayerRenderer',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'originalScene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'handleEvents',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isUtilityLayerRenderer: true,\n    className: 'FiberUtilityLayerRenderer',\n  }\n}\n\nexport class FiberMaterialPluginBasePropsHandler\n  implements PropsHandler<FiberMaterialPluginBaseProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMaterialPluginBaseProps,\n    newProps: FiberMaterialPluginBaseProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    checkPrimitiveDiff(oldProps.priority, newProps.priority, 'priority', changedProps)\n    checkPrimitiveDiff(\n      oldProps.registerForExtraEvents,\n      newProps.registerForExtraEvents,\n      'registerForExtraEvents',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.resolveIncludes,\n      newProps.resolveIncludes,\n      'resolveIncludes',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addFallbacks, newProps.addFallbacks, 'addFallbacks', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Base class for material plugins.\n *\n * This code has been generated\n */\nexport class FiberMaterialPluginBase implements HasPropsHandlers<FiberMaterialPluginBaseProps> {\n  private propsHandlers: PropsHandler<FiberMaterialPluginBaseProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberMaterialPluginBasePropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialPluginBaseProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialPluginBaseProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MaterialPluginBase',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'material',\n        type: 'BabylonjsCoreMaterial',\n        optional: false,\n      },\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'priority',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'defines',\n        type: '{ [key: string]: any; }',\n        optional: true,\n      },\n      {\n        name: 'addToPluginList',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'enable',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'resolveIncludes',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberMaterialPluginBase',\n  }\n}\n\nexport class FiberShadowGeneratorPropsHandler implements PropsHandler<FiberShadowGeneratorProps> {\n  getPropertyUpdates(\n    oldProps: FiberShadowGeneratorProps,\n    newProps: FiberShadowGeneratorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.bias, newProps.bias, 'bias', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blurBoxOffset,\n      newProps.blurBoxOffset,\n      'blurBoxOffset',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.blurKernel, newProps.blurKernel, 'blurKernel', changedProps)\n    checkPrimitiveDiff(oldProps.blurScale, newProps.blurScale, 'blurScale', changedProps)\n    checkPrimitiveDiff(\n      oldProps.contactHardeningLightSizeUVRatio,\n      newProps.contactHardeningLightSizeUVRatio,\n      'contactHardeningLightSizeUVRatio',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.customAllowRendering,\n      newProps.customAllowRendering,\n      'customAllowRendering',\n      changedProps\n    )\n    // type: 'BabylonjsCoreICustomShaderOptions' property (not coded) BabylonjsCoreShadowGenerator.customShaderOptions.\n    checkPrimitiveDiff(oldProps.darkness, newProps.darkness, 'darkness', changedProps)\n    checkPrimitiveDiff(oldProps.depthScale, newProps.depthScale, 'depthScale', changedProps)\n    checkPrimitiveDiff(\n      oldProps.enableSoftTransparentShadow,\n      newProps.enableSoftTransparentShadow,\n      'enableSoftTransparentShadow',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.filter, newProps.filter, 'filter', changedProps)\n    checkPrimitiveDiff(\n      oldProps.filteringQuality,\n      newProps.filteringQuality,\n      'filteringQuality',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceBackFacesOnly,\n      newProps.forceBackFacesOnly,\n      'forceBackFacesOnly',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.frustumEdgeFalloff,\n      newProps.frustumEdgeFalloff,\n      'frustumEdgeFalloff',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.id, newProps.id, 'id', changedProps)\n    checkPrimitiveDiff(oldProps.mapSize, newProps.mapSize, 'mapSize', changedProps)\n    checkPrimitiveDiff(oldProps.normalBias, newProps.normalBias, 'normalBias', changedProps)\n    checkObservableDiff(\n      oldProps.onAfterShadowMapRenderMeshObservable,\n      newProps.onAfterShadowMapRenderMeshObservable,\n      'onAfterShadowMapRenderMeshObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterShadowMapRenderObservable,\n      newProps.onAfterShadowMapRenderObservable,\n      'onAfterShadowMapRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeShadowMapRenderMeshObservable,\n      newProps.onBeforeShadowMapRenderMeshObservable,\n      'onBeforeShadowMapRenderMeshObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeShadowMapRenderObservable,\n      newProps.onBeforeShadowMapRenderObservable,\n      'onBeforeShadowMapRenderObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.transparencyShadow,\n      newProps.transparencyShadow,\n      'transparencyShadow',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useBlurCloseExponentialShadowMap,\n      newProps.useBlurCloseExponentialShadowMap,\n      'useBlurCloseExponentialShadowMap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useBlurExponentialShadowMap,\n      newProps.useBlurExponentialShadowMap,\n      'useBlurExponentialShadowMap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useCloseExponentialShadowMap,\n      newProps.useCloseExponentialShadowMap,\n      'useCloseExponentialShadowMap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useContactHardeningShadow,\n      newProps.useContactHardeningShadow,\n      'useContactHardeningShadow',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useExponentialShadowMap,\n      newProps.useExponentialShadowMap,\n      'useExponentialShadowMap',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useKernelBlur,\n      newProps.useKernelBlur,\n      'useKernelBlur',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useOpacityTextureForTransparentShadow,\n      newProps.useOpacityTextureForTransparentShadow,\n      'useOpacityTextureForTransparentShadow',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.usePercentageCloserFiltering,\n      newProps.usePercentageCloserFiltering,\n      'usePercentageCloserFiltering',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.usePoissonSampling,\n      newProps.usePoissonSampling,\n      'usePoissonSampling',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addShadowCaster,\n      newProps.addShadowCaster,\n      'addShadowCaster',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setDarkness, newProps.setDarkness, 'setDarkness', changedProps)\n    checkMethodDiff(\n      oldProps.setTransparencyShadow,\n      newProps.setTransparencyShadow,\n      'setTransparencyShadow',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Default implementation IShadowGenerator.\n * This is the main object responsible of generating shadows in the framework.\n * Documentation: https://doc.babylonjs.com/features/featuresDeepDive/lights/shadows\n *\n * This code has been generated\n */\nexport class FiberShadowGenerator implements HasPropsHandlers<FiberShadowGeneratorProps> {\n  private propsHandlers: PropsHandler<FiberShadowGeneratorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberShadowGeneratorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberShadowGeneratorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberShadowGeneratorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ShadowGenerator',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'mapSize',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'light',\n        type: 'BabylonjsCoreIShadowLight',\n        optional: true,\n      },\n      {\n        name: 'usefullFloatFirst',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: true,\n      },\n      {\n        name: 'useRedTextureType',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    delayCreation: true,\n    isShadowGenerator: true,\n    className: 'FiberShadowGenerator',\n  }\n}\n\nexport class FiberCascadedShadowGeneratorPropsHandler\n  implements PropsHandler<FiberCascadedShadowGeneratorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberCascadedShadowGeneratorProps,\n    newProps: FiberCascadedShadowGeneratorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.autoCalcDepthBounds,\n      newProps.autoCalcDepthBounds,\n      'autoCalcDepthBounds',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.autoCalcDepthBoundsRefreshRate,\n      newProps.autoCalcDepthBoundsRefreshRate,\n      'autoCalcDepthBoundsRefreshRate',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.cascadeBlendPercentage,\n      newProps.cascadeBlendPercentage,\n      'cascadeBlendPercentage',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.debug, newProps.debug, 'debug', changedProps)\n    checkPrimitiveDiff(oldProps.depthClamp, newProps.depthClamp, 'depthClamp', changedProps)\n    checkPrimitiveDiff(\n      oldProps.freezeShadowCastersBoundingInfo,\n      newProps.freezeShadowCastersBoundingInfo,\n      'freezeShadowCastersBoundingInfo',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lambda, newProps.lambda, 'lambda', changedProps)\n    checkPrimitiveDiff(oldProps.numCascades, newProps.numCascades, 'numCascades', changedProps)\n    checkPrimitiveDiff(\n      oldProps.penumbraDarkness,\n      newProps.penumbraDarkness,\n      'penumbraDarkness',\n      changedProps\n    )\n    // type: 'BabylonjsCoreBoundingInfo' property (not coded) BabylonjsCoreCascadedShadowGenerator.shadowCastersBoundingInfo.\n    checkPrimitiveDiff(oldProps.shadowMaxZ, newProps.shadowMaxZ, 'shadowMaxZ', changedProps)\n    checkPrimitiveDiff(\n      oldProps.stabilizeCascades,\n      newProps.stabilizeCascades,\n      'stabilizeCascades',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setDepthRenderer,\n      newProps.setDepthRenderer,\n      'setDepthRenderer',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setMinMaxDistance,\n      newProps.setMinMaxDistance,\n      'setMinMaxDistance',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A CSM implementation allowing casting shadows on large scenes.\n * Documentation : https://doc.babylonjs.com/babylon101/cascadedShadows\n * Based on: https://github.com/TheRealMJP/Shadows and https://johanmedestrom.wordpress.com/2016/03/18/opengl-cascaded-shadow-maps/\n *\n * This code has been generated\n */\nexport class FiberCascadedShadowGenerator\n  implements HasPropsHandlers<FiberCascadedShadowGeneratorProps>\n{\n  private propsHandlers: PropsHandler<FiberCascadedShadowGeneratorProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberCascadedShadowGeneratorPropsHandler(),\n      new FiberShadowGeneratorPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberCascadedShadowGeneratorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberCascadedShadowGeneratorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'CascadedShadowGenerator',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'mapSize',\n        type: 'number',\n        optional: false,\n      },\n      {\n        name: 'light',\n        type: 'BabylonjsCoreDirectionalLight',\n        optional: true,\n      },\n      {\n        name: 'usefulFloatFirst',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'camera',\n        type: 'BabylonjsCoreCamera',\n        optional: true,\n      },\n      {\n        name: 'useRedTextureType',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    delayCreation: true,\n    isShadowGenerator: true,\n    className: 'FiberCascadedShadowGenerator',\n  }\n}\n\nexport class FiberEngineViewPropsHandler implements PropsHandler<FiberEngineViewProps> {\n  getPropertyUpdates(\n    oldProps: FiberEngineViewProps,\n    newProps: FiberEngineViewProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreCamera' property (not coded) BabylonjsCoreEngineView.camera.\n    checkPrimitiveDiff(\n      oldProps.clearBeforeCopy,\n      newProps.clearBeforeCopy,\n      'clearBeforeCopy',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.customResize, newProps.customResize, 'customResize', changedProps)\n    checkPrimitiveDiff(oldProps.enabled, newProps.enabled, 'enabled', changedProps)\n    // type: 'HTMLCanvasElement' property (not coded) BabylonjsCoreEngineView.target.\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Class used to define an additional view for the engine\n *\n * This code has been generated\n */\nexport class FiberEngineView implements HasPropsHandlers<FiberEngineViewProps> {\n  private propsHandlers: PropsHandler<FiberEngineViewProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberEngineViewPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberEngineViewProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberEngineViewProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'EngineView',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    delayCreation: true,\n    className: 'FiberEngineView',\n  }\n}\n\nexport class FiberGizmoManagerPropsHandler implements PropsHandler<FiberGizmoManagerProps> {\n  getPropertyUpdates(\n    oldProps: FiberGizmoManagerProps,\n    newProps: FiberGizmoManagerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreGizmoManager.attachableMeshes.\n    // type: 'BabylonjsCoreNode[]' property (not coded) BabylonjsCoreGizmoManager.attachableNodes.\n    // type: 'BabylonjsCoreSixDofDragBehavior' property (not coded) BabylonjsCoreGizmoManager.boundingBoxDragBehavior.\n    checkPrimitiveDiff(\n      oldProps.boundingBoxGizmoEnabled,\n      newProps.boundingBoxGizmoEnabled,\n      'boundingBoxGizmoEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.clearGizmoOnEmptyPointerEvent,\n      newProps.clearGizmoOnEmptyPointerEvent,\n      'clearGizmoOnEmptyPointerEvent',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.coordinatesMode,\n      newProps.coordinatesMode,\n      'coordinatesMode',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.enableAutoPicking,\n      newProps.enableAutoPicking,\n      'enableAutoPicking',\n      changedProps\n    )\n    // type: '{ positionGizmo: BabylonjsCoreIPositionGizmo; rotationGizmo: BabylonjsCoreIRotationGizmo; scaleGizmo: BabylonjsCoreIScaleGizmo; boundingBoxGizmo: BabylonjsCoreIBoundingBoxGizmo; }' property (not coded) BabylonjsCoreGizmoManager.gizmos.\n    checkObservableDiff(\n      oldProps.onAttachedToMeshObservable,\n      newProps.onAttachedToMeshObservable,\n      'onAttachedToMeshObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAttachedToNodeObservable,\n      newProps.onAttachedToNodeObservable,\n      'onAttachedToNodeObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.positionGizmoEnabled,\n      newProps.positionGizmoEnabled,\n      'positionGizmoEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rotationGizmoEnabled,\n      newProps.rotationGizmoEnabled,\n      'rotationGizmoEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.scaleGizmoEnabled,\n      newProps.scaleGizmoEnabled,\n      'scaleGizmoEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.scaleRatio, newProps.scaleRatio, 'scaleRatio', changedProps)\n    checkPrimitiveDiff(\n      oldProps.usePointerToAttachGizmos,\n      newProps.usePointerToAttachGizmos,\n      'usePointerToAttachGizmos',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addToAxisCache,\n      newProps.addToAxisCache,\n      'addToAxisCache',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Helps setup gizmo's in the scene to rotate/scale/position nodes\n *\n * This code has been generated\n */\nexport class FiberGizmoManager implements HasPropsHandlers<FiberGizmoManagerProps> {\n  private propsHandlers: PropsHandler<FiberGizmoManagerProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberGizmoManagerPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberGizmoManagerProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberGizmoManagerProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'GizmoManager',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: '_scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'thickness',\n        type: 'number',\n        optional: true,\n      },\n      {\n        name: 'utilityLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n      {\n        name: 'keepDepthUtilityLayer',\n        type: 'BabylonjsCoreUtilityLayerRenderer',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberGizmoManager',\n  }\n}\n\nexport class FiberLayerPropsHandler implements PropsHandler<FiberLayerProps> {\n  getPropertyUpdates(\n    oldProps: FiberLayerProps,\n    newProps: FiberLayerProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.alphaBlendingMode,\n      newProps.alphaBlendingMode,\n      'alphaBlendingMode',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.alphaTest, newProps.alphaTest, 'alphaTest', changedProps)\n    checkPrimitiveDiff(\n      oldProps.applyPostProcess,\n      newProps.applyPostProcess,\n      'applyPostProcess',\n      changedProps\n    )\n    checkColor4Diff(oldProps.color, newProps.color, 'color', changedProps)\n    checkPrimitiveDiff(oldProps.isBackground, newProps.isBackground, 'isBackground', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(oldProps.layerMask, newProps.layerMask, 'layerMask', changedProps)\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreLayer.offset.\n    checkLambdaDiff(oldProps.onAfterRender, newProps.onAfterRender, 'onAfterRender', changedProps)\n    checkObservableDiff(\n      oldProps.onAfterRenderObservable,\n      newProps.onAfterRenderObservable,\n      'onAfterRenderObservable',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.onBeforeRender,\n      newProps.onBeforeRender,\n      'onBeforeRender',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeRenderObservable,\n      newProps.onBeforeRenderObservable,\n      'onBeforeRenderObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onDispose, newProps.onDispose, 'onDispose', changedProps)\n    checkObservableDiff(\n      oldProps.onDisposeObservable,\n      newProps.onDisposeObservable,\n      'onDisposeObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderOnlyInRenderTargetTextures,\n      newProps.renderOnlyInRenderTargetTextures,\n      'renderOnlyInRenderTargetTextures',\n      changedProps\n    )\n    // type: 'BabylonjsCoreRenderTargetTexture[]' property (not coded) BabylonjsCoreLayer.renderTargetTextures.\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCoreLayer.scale.\n    checkTextureDiff(oldProps.texture, newProps.texture, 'texture', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This represents a full screen 2d layer.\n * This can be useful to display a picture in the  background of your scene for instance.\n *\n * This code has been generated\n */\nexport class FiberLayer implements HasPropsHandlers<FiberLayerProps> {\n  private propsHandlers: PropsHandler<FiberLayerProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberLayerPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberLayerProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberLayerProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'Layer',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'name',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'imgUrl',\n        type: 'string',\n        optional: false,\n      },\n      {\n        name: 'scene',\n        type: 'BabylonjsCoreScene',\n        optional: false,\n      },\n      {\n        name: 'isBackground',\n        type: 'boolean',\n        optional: true,\n      },\n      {\n        name: 'color',\n        type: 'BabylonjsCoreColor4',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isLayer: true,\n    className: 'FiberLayer',\n  }\n}\n\nexport class FiberImageProcessingConfigurationPropsHandler\n  implements PropsHandler<FiberImageProcessingConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberImageProcessingConfigurationProps,\n    newProps: FiberImageProcessingConfigurationProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.applyByPostProcess,\n      newProps.applyByPostProcess,\n      'applyByPostProcess',\n      changedProps\n    )\n    // type: 'BabylonjsCoreColorCurves' property (not coded) BabylonjsCoreImageProcessingConfiguration.colorCurves.\n    checkPrimitiveDiff(\n      oldProps.colorCurvesEnabled,\n      newProps.colorCurvesEnabled,\n      'colorCurvesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.colorGradingBGR,\n      newProps.colorGradingBGR,\n      'colorGradingBGR',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.colorGradingEnabled,\n      newProps.colorGradingEnabled,\n      'colorGradingEnabled',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.colorGradingTexture,\n      newProps.colorGradingTexture,\n      'colorGradingTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.colorGradingWithGreenDepth,\n      newProps.colorGradingWithGreenDepth,\n      'colorGradingWithGreenDepth',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.contrast, newProps.contrast, 'contrast', changedProps)\n    checkPrimitiveDiff(\n      oldProps.ditheringEnabled,\n      newProps.ditheringEnabled,\n      'ditheringEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ditheringIntensity,\n      newProps.ditheringIntensity,\n      'ditheringIntensity',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.exposure, newProps.exposure, 'exposure', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkObservableDiff(\n      oldProps.onUpdateParameters,\n      newProps.onUpdateParameters,\n      'onUpdateParameters',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.skipFinalColorClamp,\n      newProps.skipFinalColorClamp,\n      'skipFinalColorClamp',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.toneMappingEnabled,\n      newProps.toneMappingEnabled,\n      'toneMappingEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.toneMappingType,\n      newProps.toneMappingType,\n      'toneMappingType',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteBlendMode,\n      newProps.vignetteBlendMode,\n      'vignetteBlendMode',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCameraFov,\n      newProps.vignetteCameraFov,\n      'vignetteCameraFov',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCenterX,\n      newProps.vignetteCenterX,\n      'vignetteCenterX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCenterY,\n      newProps.vignetteCenterY,\n      'vignetteCenterY',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCentreX,\n      newProps.vignetteCentreX,\n      'vignetteCentreX',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteCentreY,\n      newProps.vignetteCentreY,\n      'vignetteCentreY',\n      changedProps\n    )\n    checkColor4Diff(oldProps.vignetteColor, newProps.vignetteColor, 'vignetteColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.vignetteEnabled,\n      newProps.vignetteEnabled,\n      'vignetteEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteStretch,\n      newProps.vignetteStretch,\n      'vignetteStretch',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.vignetteWeight,\n      newProps.vignetteWeight,\n      'vignetteWeight',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * This groups together the common properties used for image processing either in direct forward pass\n * or through post processing effect depending on the use of the image processing pipeline in your scene\n * or not.\n *\n * This code has been generated\n */\nexport class FiberImageProcessingConfiguration\n  implements HasPropsHandlers<FiberImageProcessingConfigurationProps>\n{\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberImageProcessingConfigurationProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberImageProcessingConfigurationPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberImageProcessingConfigurationProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberImageProcessingConfigurationProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'ImageProcessingConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberImageProcessingConfiguration',\n  }\n}\n\nexport class FiberPBRClearCoatConfigurationPropsHandler\n  implements PropsHandler<FiberPBRClearCoatConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRClearCoatConfigurationProps,\n    newProps: FiberPBRClearCoatConfigurationProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkTextureDiff(oldProps.bumpTexture, newProps.bumpTexture, 'bumpTexture', changedProps)\n    checkPrimitiveDiff(\n      oldProps.indexOfRefraction,\n      newProps.indexOfRefraction,\n      'indexOfRefraction',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.intensity, newProps.intensity, 'intensity', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.isTintEnabled,\n      newProps.isTintEnabled,\n      'isTintEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.remapF0OnInterfaceChange,\n      newProps.remapF0OnInterfaceChange,\n      'remapF0OnInterfaceChange',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.roughness, newProps.roughness, 'roughness', changedProps)\n    checkTextureDiff(oldProps.texture, newProps.texture, 'texture', changedProps)\n    checkTextureDiff(\n      oldProps.textureRoughness,\n      newProps.textureRoughness,\n      'textureRoughness',\n      changedProps\n    )\n    checkColor3Diff(oldProps.tintColor, newProps.tintColor, 'tintColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.tintColorAtDistance,\n      newProps.tintColorAtDistance,\n      'tintColorAtDistance',\n      changedProps\n    )\n    checkTextureDiff(oldProps.tintTexture, newProps.tintTexture, 'tintTexture', changedProps)\n    checkPrimitiveDiff(\n      oldProps.tintThickness,\n      newProps.tintThickness,\n      'tintThickness',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useRoughnessFromMainTexture,\n      newProps.useRoughnessFromMainTexture,\n      'useRoughnessFromMainTexture',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addFallbacks, newProps.addFallbacks, 'addFallbacks', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Plugin that implements the clear coat component of the PBR material\n *\n * This code has been generated\n */\nexport class FiberPBRClearCoatConfiguration\n  implements HasPropsHandlers<FiberMaterialPluginBaseProps>\n{\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberMaterialPluginBaseProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRClearCoatConfigurationPropsHandler(),\n      new FiberMaterialPluginBasePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialPluginBaseProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialPluginBaseProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRClearCoatConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'material',\n        type: 'BabylonjsCorePBRBaseMaterial',\n        optional: false,\n      },\n      {\n        name: 'addToPluginList',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPBRClearCoatConfiguration',\n  }\n}\n\nexport class FiberPBRIridescenceConfigurationPropsHandler\n  implements PropsHandler<FiberPBRIridescenceConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRIridescenceConfigurationProps,\n    newProps: FiberPBRIridescenceConfigurationProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.indexOfRefraction,\n      newProps.indexOfRefraction,\n      'indexOfRefraction',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.intensity, newProps.intensity, 'intensity', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.maximumThickness,\n      newProps.maximumThickness,\n      'maximumThickness',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.minimumThickness,\n      newProps.minimumThickness,\n      'minimumThickness',\n      changedProps\n    )\n    checkTextureDiff(oldProps.texture, newProps.texture, 'texture', changedProps)\n    checkTextureDiff(\n      oldProps.thicknessTexture,\n      newProps.thicknessTexture,\n      'thicknessTexture',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addFallbacks, newProps.addFallbacks, 'addFallbacks', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Plugin that implements the iridescence (thin film) component of the PBR material\n *\n * This code has been generated\n */\nexport class FiberPBRIridescenceConfiguration\n  implements HasPropsHandlers<FiberMaterialPluginBaseProps>\n{\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberMaterialPluginBaseProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRIridescenceConfigurationPropsHandler(),\n      new FiberMaterialPluginBasePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialPluginBaseProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialPluginBaseProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRIridescenceConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'material',\n        type: 'BabylonjsCorePBRBaseMaterial',\n        optional: false,\n      },\n      {\n        name: 'addToPluginList',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPBRIridescenceConfiguration',\n  }\n}\n\nexport class FiberPBRAnisotropicConfigurationPropsHandler\n  implements PropsHandler<FiberPBRAnisotropicConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRAnisotropicConfigurationProps,\n    newProps: FiberPBRAnisotropicConfigurationProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.angle, newProps.angle, 'angle', changedProps)\n    // type: 'BabylonjsCoreVector2' property (not coded) BabylonjsCorePBRAnisotropicConfiguration.direction.\n    checkPrimitiveDiff(oldProps.intensity, newProps.intensity, 'intensity', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(oldProps.legacy, newProps.legacy, 'legacy', changedProps)\n    checkTextureDiff(oldProps.texture, newProps.texture, 'texture', changedProps)\n    checkMethodDiff(oldProps.addFallbacks, newProps.addFallbacks, 'addFallbacks', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Plugin that implements the anisotropic component of the PBR material\n *\n * This code has been generated\n */\nexport class FiberPBRAnisotropicConfiguration\n  implements HasPropsHandlers<FiberMaterialPluginBaseProps>\n{\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberMaterialPluginBaseProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRAnisotropicConfigurationPropsHandler(),\n      new FiberMaterialPluginBasePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialPluginBaseProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialPluginBaseProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRAnisotropicConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'material',\n        type: 'BabylonjsCorePBRBaseMaterial',\n        optional: false,\n      },\n      {\n        name: 'addToPluginList',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPBRAnisotropicConfiguration',\n  }\n}\n\nexport class FiberPBRBRDFConfigurationPropsHandler\n  implements PropsHandler<FiberPBRBRDFConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRBRDFConfigurationProps,\n    newProps: FiberPBRBRDFConfigurationProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.useEnergyConservation,\n      newProps.useEnergyConservation,\n      'useEnergyConservation',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useSmithVisibilityHeightCorrelated,\n      newProps.useSmithVisibilityHeightCorrelated,\n      'useSmithVisibilityHeightCorrelated',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useSpecularGlossinessInputEnergyConservation,\n      newProps.useSpecularGlossinessInputEnergyConservation,\n      'useSpecularGlossinessInputEnergyConservation',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useSphericalHarmonics,\n      newProps.useSphericalHarmonics,\n      'useSphericalHarmonics',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Plugin that implements the BRDF component of the PBR material\n *\n * This code has been generated\n */\nexport class FiberPBRBRDFConfiguration implements HasPropsHandlers<FiberMaterialPluginBaseProps> {\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberMaterialPluginBaseProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRBRDFConfigurationPropsHandler(),\n      new FiberMaterialPluginBasePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialPluginBaseProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialPluginBaseProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRBRDFConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'material',\n        type: 'BabylonjsCorePBRBaseMaterial',\n        optional: false,\n      },\n      {\n        name: 'addToPluginList',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPBRBRDFConfiguration',\n  }\n}\n\nexport class FiberPBRSheenConfigurationPropsHandler\n  implements PropsHandler<FiberPBRSheenConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRSheenConfigurationProps,\n    newProps: FiberPBRSheenConfigurationProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.albedoScaling,\n      newProps.albedoScaling,\n      'albedoScaling',\n      changedProps\n    )\n    checkColor3Diff(oldProps.color, newProps.color, 'color', changedProps)\n    checkPrimitiveDiff(oldProps.intensity, newProps.intensity, 'intensity', changedProps)\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.linkSheenWithAlbedo,\n      newProps.linkSheenWithAlbedo,\n      'linkSheenWithAlbedo',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.roughness, newProps.roughness, 'roughness', changedProps)\n    checkTextureDiff(oldProps.texture, newProps.texture, 'texture', changedProps)\n    checkTextureDiff(\n      oldProps.textureRoughness,\n      newProps.textureRoughness,\n      'textureRoughness',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useRoughnessFromMainTexture,\n      newProps.useRoughnessFromMainTexture,\n      'useRoughnessFromMainTexture',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addFallbacks, newProps.addFallbacks, 'addFallbacks', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Plugin that implements the sheen component of the PBR material.\n *\n * This code has been generated\n */\nexport class FiberPBRSheenConfiguration implements HasPropsHandlers<FiberMaterialPluginBaseProps> {\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberMaterialPluginBaseProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRSheenConfigurationPropsHandler(),\n      new FiberMaterialPluginBasePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialPluginBaseProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialPluginBaseProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRSheenConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'material',\n        type: 'BabylonjsCorePBRBaseMaterial',\n        optional: false,\n      },\n      {\n        name: 'addToPluginList',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPBRSheenConfiguration',\n  }\n}\n\nexport class FiberPBRSubSurfaceConfigurationPropsHandler\n  implements PropsHandler<FiberPBRSubSurfaceConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPBRSubSurfaceConfigurationProps,\n    newProps: FiberPBRSubSurfaceConfigurationProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkColor3Diff(\n      oldProps.diffusionDistance,\n      newProps.diffusionDistance,\n      'diffusionDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.indexOfRefraction,\n      newProps.indexOfRefraction,\n      'indexOfRefraction',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.invertRefractionY,\n      newProps.invertRefractionY,\n      'invertRefractionY',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isRefractionEnabled,\n      newProps.isRefractionEnabled,\n      'isRefractionEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isScatteringEnabled,\n      newProps.isScatteringEnabled,\n      'isScatteringEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.isTranslucencyEnabled,\n      newProps.isTranslucencyEnabled,\n      'isTranslucencyEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.linkRefractionWithTransparency,\n      newProps.linkRefractionWithTransparency,\n      'linkRefractionWithTransparency',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.maximumThickness,\n      newProps.maximumThickness,\n      'maximumThickness',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.minimumThickness,\n      newProps.minimumThickness,\n      'minimumThickness',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.refractionIntensity,\n      newProps.refractionIntensity,\n      'refractionIntensity',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.refractionIntensityTexture,\n      newProps.refractionIntensityTexture,\n      'refractionIntensityTexture',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.refractionTexture,\n      newProps.refractionTexture,\n      'refractionTexture',\n      changedProps\n    )\n    checkColor3Diff(\n      oldProps.scatteringDiffusionProfile,\n      newProps.scatteringDiffusionProfile,\n      'scatteringDiffusionProfile',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.thicknessTexture,\n      newProps.thicknessTexture,\n      'thicknessTexture',\n      changedProps\n    )\n    checkColor3Diff(oldProps.tintColor, newProps.tintColor, 'tintColor', changedProps)\n    checkPrimitiveDiff(\n      oldProps.tintColorAtDistance,\n      newProps.tintColorAtDistance,\n      'tintColorAtDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.translucencyIntensity,\n      newProps.translucencyIntensity,\n      'translucencyIntensity',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.translucencyIntensityTexture,\n      newProps.translucencyIntensityTexture,\n      'translucencyIntensityTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useAlbedoToTintRefraction,\n      newProps.useAlbedoToTintRefraction,\n      'useAlbedoToTintRefraction',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useAlbedoToTintTranslucency,\n      newProps.useAlbedoToTintTranslucency,\n      'useAlbedoToTintTranslucency',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useGltfStyleTextures,\n      newProps.useGltfStyleTextures,\n      'useGltfStyleTextures',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useMaskFromThicknessTexture,\n      newProps.useMaskFromThicknessTexture,\n      'useMaskFromThicknessTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useThicknessAsDepth,\n      newProps.useThicknessAsDepth,\n      'useThicknessAsDepth',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.volumeIndexOfRefraction,\n      newProps.volumeIndexOfRefraction,\n      'volumeIndexOfRefraction',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addFallbacks, newProps.addFallbacks, 'addFallbacks', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Plugin that implements the sub surface component of the PBR material\n *\n * This code has been generated\n */\nexport class FiberPBRSubSurfaceConfiguration\n  implements HasPropsHandlers<FiberMaterialPluginBaseProps>\n{\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberMaterialPluginBaseProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberPBRSubSurfaceConfigurationPropsHandler(),\n      new FiberMaterialPluginBasePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialPluginBaseProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialPluginBaseProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PBRSubSurfaceConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'material',\n        type: 'BabylonjsCorePBRBaseMaterial',\n        optional: false,\n      },\n      {\n        name: 'addToPluginList',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPBRSubSurfaceConfiguration',\n  }\n}\n\nexport class FiberPrePassConfigurationPropsHandler\n  implements PropsHandler<FiberPrePassConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPrePassConfigurationProps,\n    newProps: FiberPrePassConfigurationProps\n  ): PropertyUpdate[] | null {\n    // skipping type: 'BabylonjsCoreMatrix' property (not coded) BabylonjsCorePrePassConfiguration.currentViewProjection.\n    // skipping type: '{ [index: number]: Float32Array; }' property (not coded) BabylonjsCorePrePassConfiguration.previousBones.\n    // skipping type: 'BabylonjsCoreMatrix' property (not coded) BabylonjsCorePrePassConfiguration.previousViewProjection.\n    // skipping type: '{ [index: number]: BabylonjsCoreMatrix; }' property (not coded) BabylonjsCorePrePassConfiguration.previousWorldMatrices.\n    return null // no props to check\n  }\n}\n\n/**\n * Configuration needed for prepass-capable materials\n *\n * This code has been generated\n */\nexport class FiberPrePassConfiguration implements HasPropsHandlers<FiberPrePassConfigurationProps> {\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberPrePassConfigurationProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPrePassConfigurationPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPrePassConfigurationProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPrePassConfigurationProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PrePassConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberPrePassConfiguration',\n  }\n}\n\nexport class FiberDetailMapConfigurationPropsHandler\n  implements PropsHandler<FiberDetailMapConfigurationProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberDetailMapConfigurationProps,\n    newProps: FiberDetailMapConfigurationProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.bumpLevel, newProps.bumpLevel, 'bumpLevel', changedProps)\n    checkPrimitiveDiff(\n      oldProps.diffuseBlendLevel,\n      newProps.diffuseBlendLevel,\n      'diffuseBlendLevel',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.isEnabled, newProps.isEnabled, 'isEnabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.normalBlendMethod,\n      newProps.normalBlendMethod,\n      'normalBlendMethod',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.roughnessBlendLevel,\n      newProps.roughnessBlendLevel,\n      'roughnessBlendLevel',\n      changedProps\n    )\n    checkTextureDiff(oldProps.texture, newProps.texture, 'texture', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Plugin that implements the detail map component of a material\n *\n * Inspired from:\n *   Unity: https://docs.unity3d.com/Packages/com.unity.render-pipelines.high-definition@9.0/manual/Mask-Map-and-Detail-Map.html and https://docs.unity3d.com/Manual/StandardShaderMaterialParameterDetail.html\n *   Unreal: https://docs.unrealengine.com/en-US/Engine/Rendering/Materials/HowTo/DetailTexturing/index.html\n *   Cryengine: https://docs.cryengine.com/display/SDKDOC2/Detail+Maps\n *\n * This code has been generated\n */\nexport class FiberDetailMapConfiguration implements HasPropsHandlers<FiberMaterialPluginBaseProps> {\n  public readonly isTargetable = false\n  private propsHandlers: PropsHandler<FiberMaterialPluginBaseProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberDetailMapConfigurationPropsHandler(),\n      new FiberMaterialPluginBasePropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMaterialPluginBaseProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMaterialPluginBaseProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DetailMapConfiguration',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'material',\n        type: 'BabylonjsCorePBRBaseMaterial | BabylonjsCoreStandardMaterial',\n        optional: false,\n      },\n      {\n        name: 'addToPluginList',\n        type: 'boolean',\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    className: 'FiberDetailMapConfiguration',\n  }\n}\n\nexport class FiberAutoRotationBehaviorPropsHandler\n  implements PropsHandler<FiberAutoRotationBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberAutoRotationBehaviorProps,\n    newProps: FiberAutoRotationBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.idleRotationSpeed,\n      newProps.idleRotationSpeed,\n      'idleRotationSpeed',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.idleRotationSpinupTime,\n      newProps.idleRotationSpinupTime,\n      'idleRotationSpinupTime',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.idleRotationWaitTime,\n      newProps.idleRotationWaitTime,\n      'idleRotationWaitTime',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.targetAlpha, newProps.targetAlpha, 'targetAlpha', changedProps)\n    checkPrimitiveDiff(\n      oldProps.zoomStopsAnimation,\n      newProps.zoomStopsAnimation,\n      'zoomStopsAnimation',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The autoRotation behavior (AutoRotationBehavior) is designed to create a smooth rotation of an ArcRotateCamera when there is no user interaction.\n *\n * This code has been generated\n */\nexport class FiberAutoRotationBehavior implements HasPropsHandlers<FiberAutoRotationBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberAutoRotationBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberAutoRotationBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAutoRotationBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAutoRotationBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AutoRotationBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberAutoRotationBehavior',\n  }\n}\n\nexport class FiberBouncingBehaviorPropsHandler implements PropsHandler<FiberBouncingBehaviorProps> {\n  getPropertyUpdates(\n    oldProps: FiberBouncingBehaviorProps,\n    newProps: FiberBouncingBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.autoTransitionRange,\n      newProps.autoTransitionRange,\n      'autoTransitionRange',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lowerRadiusTransitionRange,\n      newProps.lowerRadiusTransitionRange,\n      'lowerRadiusTransitionRange',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.transitionDuration,\n      newProps.transitionDuration,\n      'transitionDuration',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.upperRadiusTransitionRange,\n      newProps.upperRadiusTransitionRange,\n      'upperRadiusTransitionRange',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Add a bouncing effect to an ArcRotateCamera when reaching a specified minimum and maximum radius\n *\n * This code has been generated\n */\nexport class FiberBouncingBehavior implements HasPropsHandlers<FiberBouncingBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberBouncingBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberBouncingBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberBouncingBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberBouncingBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BouncingBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberBouncingBehavior',\n  }\n}\n\nexport class FiberFramingBehaviorPropsHandler implements PropsHandler<FiberFramingBehaviorProps> {\n  getPropertyUpdates(\n    oldProps: FiberFramingBehaviorProps,\n    newProps: FiberFramingBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.autoCorrectCameraLimitsAndSensibility,\n      newProps.autoCorrectCameraLimitsAndSensibility,\n      'autoCorrectCameraLimitsAndSensibility',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.defaultElevation,\n      newProps.defaultElevation,\n      'defaultElevation',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.elevationReturnTime,\n      newProps.elevationReturnTime,\n      'elevationReturnTime',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.elevationReturnWaitTime,\n      newProps.elevationReturnWaitTime,\n      'elevationReturnWaitTime',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.framingTime, newProps.framingTime, 'framingTime', changedProps)\n    checkPrimitiveDiff(oldProps.mode, newProps.mode, 'mode', changedProps)\n    checkObservableDiff(\n      oldProps.onTargetFramingAnimationEndObservable,\n      newProps.onTargetFramingAnimationEndObservable,\n      'onTargetFramingAnimationEndObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.positionScale,\n      newProps.positionScale,\n      'positionScale',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.radiusScale, newProps.radiusScale, 'radiusScale', changedProps)\n    checkPrimitiveDiff(\n      oldProps.zoomStopsAnimation,\n      newProps.zoomStopsAnimation,\n      'zoomStopsAnimation',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * The framing behavior (FramingBehavior) is designed to automatically position an ArcRotateCamera when its target is set to a mesh. It is also useful if you want to prevent the camera to go under a virtual horizontal plane.\n *\n * This code has been generated\n */\nexport class FiberFramingBehavior implements HasPropsHandlers<FiberFramingBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberFramingBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberFramingBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberFramingBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberFramingBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FramingBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberFramingBehavior',\n  }\n}\n\nexport class FiberAttachToBoxBehaviorPropsHandler\n  implements PropsHandler<FiberAttachToBoxBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberAttachToBoxBehaviorProps,\n    newProps: FiberAttachToBoxBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.distanceAwayFromBottomOfFace,\n      newProps.distanceAwayFromBottomOfFace,\n      'distanceAwayFromBottomOfFace',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.distanceAwayFromFace,\n      newProps.distanceAwayFromFace,\n      'distanceAwayFromFace',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.name, newProps.name, 'name', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A behavior that when attached to a mesh will will place a specified node on the meshes face pointing towards the camera\n *\n * This code has been generated\n */\nexport class FiberAttachToBoxBehavior implements HasPropsHandlers<FiberAttachToBoxBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberAttachToBoxBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberAttachToBoxBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberAttachToBoxBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberAttachToBoxBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'AttachToBoxBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: '_ui',\n        type: 'BabylonjsCoreTransformNode',\n        optional: false,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberAttachToBoxBehavior',\n  }\n}\n\nexport class FiberBaseSixDofDragBehaviorPropsHandler\n  implements PropsHandler<FiberBaseSixDofDragBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberBaseSixDofDragBehaviorProps,\n    newProps: FiberBaseSixDofDragBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.allowMultiPointer,\n      newProps.allowMultiPointer,\n      'allowMultiPointer',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.currentDraggingPointerId,\n      newProps.currentDraggingPointerId,\n      'currentDraggingPointerId',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.currentDraggingPointerID,\n      newProps.currentDraggingPointerID,\n      'currentDraggingPointerID',\n      changedProps\n    )\n    checkNumericArrayDiff(\n      oldProps.currentDraggingPointerIds,\n      newProps.currentDraggingPointerIds,\n      'currentDraggingPointerIds',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.detachCameraControls,\n      newProps.detachCameraControls,\n      'detachCameraControls',\n      changedProps\n    )\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreBaseSixDofDragBehavior.draggableMeshes.\n    checkObservableDiff(\n      oldProps.onDragEndObservable,\n      newProps.onDragEndObservable,\n      'onDragEndObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragObservable,\n      newProps.onDragObservable,\n      'onDragObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragStartObservable,\n      newProps.onDragStartObservable,\n      'onDragStartObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.zDragFactor, newProps.zDragFactor, 'zDragFactor', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Base behavior for six degrees of freedom interactions in XR experiences.\n * Creates virtual meshes that are dragged around\n * And observables for position/rotation changes\n *\n * This code has been generated\n */\nexport class FiberBaseSixDofDragBehavior\n  implements HasPropsHandlers<FiberBaseSixDofDragBehaviorProps>\n{\n  private propsHandlers: PropsHandler<FiberBaseSixDofDragBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberBaseSixDofDragBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberBaseSixDofDragBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberBaseSixDofDragBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'BaseSixDofDragBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberBaseSixDofDragBehavior',\n  }\n}\n\nexport class FiberFadeInOutBehaviorPropsHandler\n  implements PropsHandler<FiberFadeInOutBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberFadeInOutBehaviorProps,\n    newProps: FiberFadeInOutBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.delay, newProps.delay, 'delay', changedProps)\n    checkPrimitiveDiff(oldProps.fadeInDelay, newProps.fadeInDelay, 'fadeInDelay', changedProps)\n    checkPrimitiveDiff(oldProps.fadeInTime, newProps.fadeInTime, 'fadeInTime', changedProps)\n    checkPrimitiveDiff(oldProps.fadeOutDelay, newProps.fadeOutDelay, 'fadeOutDelay', changedProps)\n    checkPrimitiveDiff(oldProps.fadeOutTime, newProps.fadeOutTime, 'fadeOutTime', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A behavior that when attached to a mesh will allow the mesh to fade in and out\n *\n * This code has been generated\n */\nexport class FiberFadeInOutBehavior implements HasPropsHandlers<FiberFadeInOutBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberFadeInOutBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberFadeInOutBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberFadeInOutBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberFadeInOutBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FadeInOutBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberFadeInOutBehavior',\n  }\n}\n\nexport class FiberFollowBehaviorPropsHandler implements PropsHandler<FiberFollowBehaviorProps> {\n  getPropertyUpdates(\n    oldProps: FiberFollowBehaviorProps,\n    newProps: FiberFollowBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreTransformNode' property (not coded) BabylonjsCoreFollowBehavior.attachedNode.\n    checkPrimitiveDiff(\n      oldProps.defaultDistance,\n      newProps.defaultDistance,\n      'defaultDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.fixedVerticalOffset,\n      newProps.fixedVerticalOffset,\n      'fixedVerticalOffset',\n      changedProps\n    )\n    // type: 'BabylonjsCoreCamera' property (not coded) BabylonjsCoreFollowBehavior.followedCamera.\n    checkPrimitiveDiff(\n      oldProps.ignoreAngleClamp,\n      newProps.ignoreAngleClamp,\n      'ignoreAngleClamp',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ignoreCameraPitchAndRoll,\n      newProps.ignoreCameraPitchAndRoll,\n      'ignoreCameraPitchAndRoll',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ignoreDistanceClamp,\n      newProps.ignoreDistanceClamp,\n      'ignoreDistanceClamp',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.interpolatePose,\n      newProps.interpolatePose,\n      'interpolatePose',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lerpTime, newProps.lerpTime, 'lerpTime', changedProps)\n    checkPrimitiveDiff(\n      oldProps.maximumDistance,\n      newProps.maximumDistance,\n      'maximumDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.maxViewHorizontalDegrees,\n      newProps.maxViewHorizontalDegrees,\n      'maxViewHorizontalDegrees',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.maxViewVerticalDegrees,\n      newProps.maxViewVerticalDegrees,\n      'maxViewVerticalDegrees',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.minimumDistance,\n      newProps.minimumDistance,\n      'minimumDistance',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.orientToCameraDeadzoneDegrees,\n      newProps.orientToCameraDeadzoneDegrees,\n      'orientToCameraDeadzoneDegrees',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.pitchOffset, newProps.pitchOffset, 'pitchOffset', changedProps)\n    checkPrimitiveDiff(\n      oldProps.useFixedVerticalOffset,\n      newProps.useFixedVerticalOffset,\n      'useFixedVerticalOffset',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.verticalMaxDistance,\n      newProps.verticalMaxDistance,\n      'verticalMaxDistance',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A behavior that when attached to a mesh will follow a camera\n *\n * This code has been generated\n */\nexport class FiberFollowBehavior implements HasPropsHandlers<FiberFollowBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberFollowBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberFollowBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberFollowBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberFollowBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'FollowBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberFollowBehavior',\n  }\n}\n\nexport class FiberHandConstraintBehaviorPropsHandler\n  implements PropsHandler<FiberHandConstraintBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberHandConstraintBehaviorProps,\n    newProps: FiberHandConstraintBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.gazeProximityRadius,\n      newProps.gazeProximityRadius,\n      'gazeProximityRadius',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.handConstraintVisibility,\n      newProps.handConstraintVisibility,\n      'handConstraintVisibility',\n      changedProps\n    )\n    // type: 'XRHandedness' property (not coded) BabylonjsCoreHandConstraintBehavior.handedness.\n    checkPrimitiveDiff(oldProps.lerpTime, newProps.lerpTime, 'lerpTime', changedProps)\n    checkPrimitiveDiff(\n      oldProps.nodeOrientationMode,\n      newProps.nodeOrientationMode,\n      'nodeOrientationMode',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.palmUpStrictness,\n      newProps.palmUpStrictness,\n      'palmUpStrictness',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.targetOffset, newProps.targetOffset, 'targetOffset', changedProps)\n    checkPrimitiveDiff(oldProps.targetZone, newProps.targetZone, 'targetZone', changedProps)\n    checkPrimitiveDiff(\n      oldProps.zoneOrientationMode,\n      newProps.zoneOrientationMode,\n      'zoneOrientationMode',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Hand constraint behavior that makes the attached `TransformNode` follow hands in XR experiences.\n *\n * This code has been generated\n */\nexport class FiberHandConstraintBehavior\n  implements HasPropsHandlers<FiberHandConstraintBehaviorProps>\n{\n  private propsHandlers: PropsHandler<FiberHandConstraintBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberHandConstraintBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberHandConstraintBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberHandConstraintBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'HandConstraintBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberHandConstraintBehavior',\n  }\n}\n\nexport class FiberMultiPointerScaleBehaviorPropsHandler\n  implements PropsHandler<FiberMultiPointerScaleBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberMultiPointerScaleBehaviorProps,\n    newProps: FiberMultiPointerScaleBehaviorProps\n  ): PropertyUpdate[] | null {\n    return null // no props to check\n  }\n}\n\n/**\n * A behavior that when attached to a mesh will allow the mesh to be scaled\n *\n * This code has been generated\n */\nexport class FiberMultiPointerScaleBehavior\n  implements HasPropsHandlers<FiberMultiPointerScaleBehaviorProps>\n{\n  private propsHandlers: PropsHandler<FiberMultiPointerScaleBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberMultiPointerScaleBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberMultiPointerScaleBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberMultiPointerScaleBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'MultiPointerScaleBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberMultiPointerScaleBehavior',\n  }\n}\n\nexport class FiberPointerDragBehaviorPropsHandler\n  implements PropsHandler<FiberPointerDragBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberPointerDragBehaviorProps,\n    newProps: FiberPointerDragBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreAbstractMesh' property (not coded) BabylonjsCorePointerDragBehavior.attachedNode.\n    checkPrimitiveDiff(\n      oldProps.currentDraggingPointerId,\n      newProps.currentDraggingPointerId,\n      'currentDraggingPointerId',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.currentDraggingPointerID,\n      newProps.currentDraggingPointerID,\n      'currentDraggingPointerID',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.detachCameraControls,\n      newProps.detachCameraControls,\n      'detachCameraControls',\n      changedProps\n    )\n    checkNumericArrayDiff(oldProps.dragButtons, newProps.dragButtons, 'dragButtons', changedProps)\n    checkPrimitiveDiff(\n      oldProps.dragDeltaRatio,\n      newProps.dragDeltaRatio,\n      'dragDeltaRatio',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.dragging, newProps.dragging, 'dragging', changedProps)\n    checkPrimitiveDiff(oldProps.enabled, newProps.enabled, 'enabled', changedProps)\n    checkVector3Diff(\n      oldProps.lastDragPosition,\n      newProps.lastDragPosition,\n      'lastDragPosition',\n      false,\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['lastDragPosition-x'],\n      newProps['lastDragPosition-x'],\n      'lastDragPosition.x',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['lastDragPosition-y'],\n      newProps['lastDragPosition-y'],\n      'lastDragPosition.y',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps['lastDragPosition-z'],\n      newProps['lastDragPosition-z'],\n      'lastDragPosition.z',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.maxDragAngle, newProps.maxDragAngle, 'maxDragAngle', changedProps)\n    checkPrimitiveDiff(oldProps.moveAttached, newProps.moveAttached, 'moveAttached', changedProps)\n    checkObservableDiff(\n      oldProps.onDragEndObservable,\n      newProps.onDragEndObservable,\n      'onDragEndObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragObservable,\n      newProps.onDragObservable,\n      'onDragObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDragStartObservable,\n      newProps.onDragStartObservable,\n      'onDragStartObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onEnabledObservable,\n      newProps.onEnabledObservable,\n      'onEnabledObservable',\n      changedProps\n    )\n    // type: '{ dragAxis?: BabylonjsCoreVector3; dragPlaneNormal?: BabylonjsCoreVector3; }' property (not coded) BabylonjsCorePointerDragBehavior.options.\n    checkPrimitiveDiff(\n      oldProps.startAndReleaseDragOnPointerEvents,\n      newProps.startAndReleaseDragOnPointerEvents,\n      'startAndReleaseDragOnPointerEvents',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.updateDragPlane,\n      newProps.updateDragPlane,\n      'updateDragPlane',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useObjectOrientationForDragging,\n      newProps.useObjectOrientationForDragging,\n      'useObjectOrientationForDragging',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.validateDrag, newProps.validateDrag, 'validateDrag', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A behavior that when attached to a mesh will allow the mesh to be dragged around the screen based on pointer events\n *\n * This code has been generated\n */\nexport class FiberPointerDragBehavior implements HasPropsHandlers<FiberPointerDragBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberPointerDragBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberPointerDragBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberPointerDragBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberPointerDragBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'PointerDragBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [\n      {\n        name: 'options',\n        type: [\n          {\n            name: 'dragAxis',\n            type: 'BabylonjsCoreVector3',\n            optional: true,\n          },\n          {\n            name: 'dragPlaneNormal',\n            type: 'BabylonjsCoreVector3',\n            optional: true,\n          },\n        ],\n        optional: true,\n      },\n    ],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberPointerDragBehavior',\n  }\n}\n\nexport class FiberSixDofDragBehaviorPropsHandler\n  implements PropsHandler<FiberSixDofDragBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberSixDofDragBehaviorProps,\n    newProps: FiberSixDofDragBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(\n      oldProps.disableMovement,\n      newProps.disableMovement,\n      'disableMovement',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.dragDeltaRatio,\n      newProps.dragDeltaRatio,\n      'dragDeltaRatio',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.faceCameraOnDragStart,\n      newProps.faceCameraOnDragStart,\n      'faceCameraOnDragStart',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPositionChangedObservable,\n      newProps.onPositionChangedObservable,\n      'onPositionChangedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rotateAroundYOnly,\n      newProps.rotateAroundYOnly,\n      'rotateAroundYOnly',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rotateDraggedObject,\n      newProps.rotateDraggedObject,\n      'rotateDraggedObject',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.rotateWithMotionController,\n      newProps.rotateWithMotionController,\n      'rotateWithMotionController',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A behavior that when attached to a mesh will allow the mesh to be dragged around based on directions and origin of the pointer's ray\n *\n * This code has been generated\n */\nexport class FiberSixDofDragBehavior implements HasPropsHandlers<FiberSixDofDragBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberSixDofDragBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [\n      new FiberSixDofDragBehaviorPropsHandler(),\n      new FiberBaseSixDofDragBehaviorPropsHandler(),\n    ]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberSixDofDragBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberSixDofDragBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SixDofDragBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberSixDofDragBehavior',\n  }\n}\n\nexport class FiberSurfaceMagnetismBehaviorPropsHandler\n  implements PropsHandler<FiberSurfaceMagnetismBehaviorProps>\n{\n  getPropertyUpdates(\n    oldProps: FiberSurfaceMagnetismBehaviorProps,\n    newProps: FiberSurfaceMagnetismBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.enabled, newProps.enabled, 'enabled', changedProps)\n    checkPrimitiveDiff(\n      oldProps.hitNormalOffset,\n      newProps.hitNormalOffset,\n      'hitNormalOffset',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.interpolatePose,\n      newProps.interpolatePose,\n      'interpolatePose',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.keepOrientationVertical,\n      newProps.keepOrientationVertical,\n      'keepOrientationVertical',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.lerpTime, newProps.lerpTime, 'lerpTime', changedProps)\n    checkPrimitiveDiff(\n      oldProps.maxStickingDistance,\n      newProps.maxStickingDistance,\n      'maxStickingDistance',\n      changedProps\n    )\n    // type: 'BabylonjsCoreAbstractMesh[]' property (not coded) BabylonjsCoreSurfaceMagnetismBehavior.meshes.\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * A behavior that allows a transform node to stick to a surface position/orientation\n *\n * This code has been generated\n */\nexport class FiberSurfaceMagnetismBehavior\n  implements HasPropsHandlers<FiberSurfaceMagnetismBehaviorProps>\n{\n  private propsHandlers: PropsHandler<FiberSurfaceMagnetismBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberSurfaceMagnetismBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberSurfaceMagnetismBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberSurfaceMagnetismBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'SurfaceMagnetismBehavior',\n    namespace: '@babylonjs/core',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberSurfaceMagnetismBehavior',\n  }\n}\n\nexport class FiberDefaultBehaviorPropsHandler implements PropsHandler<FiberDefaultBehaviorProps> {\n  getPropertyUpdates(\n    oldProps: FiberDefaultBehaviorProps,\n    newProps: FiberDefaultBehaviorProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreMesh' property (not coded) BabylonjsGuiDefaultBehavior.attachedNode.\n    checkPrimitiveDiff(\n      oldProps.followBehaviorEnabled,\n      newProps.followBehaviorEnabled,\n      'followBehaviorEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.sixDofDragBehaviorEnabled,\n      newProps.sixDofDragBehaviorEnabled,\n      'sixDofDragBehaviorEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.surfaceMagnetismBehaviorEnabled,\n      newProps.surfaceMagnetismBehaviorEnabled,\n      'surfaceMagnetismBehaviorEnabled',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Default behavior for 3D UI elements.\n * Handles a FollowBehavior, SixDofBehavior and SurfaceMagnetismBehavior\n *\n * This code has been generated\n */\nexport class FiberDefaultBehavior implements HasPropsHandlers<FiberDefaultBehaviorProps> {\n  private propsHandlers: PropsHandler<FiberDefaultBehaviorProps>[]\n\n  constructor() {\n    this.propsHandlers = [new FiberDefaultBehaviorPropsHandler()]\n  }\n\n  getPropsHandlers(): PropsHandler<FiberDefaultBehaviorProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<FiberDefaultBehaviorProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n\n  public static readonly CreateInfo = {\n    creationType: 'Constructor',\n    libraryLocation: 'DefaultBehavior',\n    namespace: '@babylonjs/gui',\n    parameters: [],\n  }\n  public static readonly Metadata: CreatedInstanceMetadata = {\n    isBehavior: true,\n    className: 'FiberDefaultBehavior',\n  }\n}\n\nexport class FiberScenePropsHandler implements PropsHandler<FiberSceneProps> {\n  getPropertyUpdates(\n    oldProps: FiberSceneProps,\n    newProps: FiberSceneProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    // type: 'BabylonjsCoreAbstractActionManager' property (not coded) BabylonjsCoreScene.actionManager.\n    // type: 'BabylonjsCoreCamera' property (not coded) BabylonjsCoreScene.activeCamera.\n    // type: 'BabylonjsCoreCamera[]' property (not coded) BabylonjsCoreScene.activeCameras.\n    checkLambdaDiff(\n      oldProps.afterCameraRender,\n      newProps.afterCameraRender,\n      'afterCameraRender',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.afterRender, newProps.afterRender, 'afterRender', changedProps)\n    checkColor3Diff(oldProps.ambientColor, newProps.ambientColor, 'ambientColor', changedProps)\n    // type: 'BabylonjsCoreAnimationPropertiesOverride' property (not coded) BabylonjsCoreScene.animationPropertiesOverride.\n    checkPrimitiveDiff(\n      oldProps.animationsEnabled,\n      newProps.animationsEnabled,\n      'animationsEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.animationTimeScale,\n      newProps.animationTimeScale,\n      'animationTimeScale',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.autoClear, newProps.autoClear, 'autoClear', changedProps)\n    checkPrimitiveDiff(\n      oldProps.autoClearDepthAndStencil,\n      newProps.autoClearDepthAndStencil,\n      'autoClearDepthAndStencil',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.beforeCameraRender,\n      newProps.beforeCameraRender,\n      'beforeCameraRender',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.beforeRender, newProps.beforeRender, 'beforeRender', changedProps)\n    checkPrimitiveDiff(\n      oldProps.blockfreeActiveMeshesAndRenderingGroups,\n      newProps.blockfreeActiveMeshesAndRenderingGroups,\n      'blockfreeActiveMeshesAndRenderingGroups',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.blockMaterialDirtyMechanism,\n      newProps.blockMaterialDirtyMechanism,\n      'blockMaterialDirtyMechanism',\n      changedProps\n    )\n    // type: 'BabylonjsCoreCamera' property (not coded) BabylonjsCoreScene.cameraToUseForPointers.\n    checkColor4Diff(oldProps.clearColor, newProps.clearColor, 'clearColor', changedProps)\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreScene.clipPlane.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreScene.clipPlane2.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreScene.clipPlane3.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreScene.clipPlane4.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreScene.clipPlane5.\n    // type: 'BabylonjsCorePlane' property (not coded) BabylonjsCoreScene.clipPlane6.\n    checkPrimitiveDiff(\n      oldProps.collisionsEnabled,\n      newProps.collisionsEnabled,\n      'collisionsEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.constantlyUpdateMeshUnderPointer,\n      newProps.constantlyUpdateMeshUnderPointer,\n      'constantlyUpdateMeshUnderPointer',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.customLODSelector,\n      newProps.customLODSelector,\n      'customLODSelector',\n      changedProps\n    )\n    // type: 'BabylonjsCoreRenderTargetTexture[]' property (not coded) BabylonjsCoreScene.customRenderTargets.\n    checkPrimitiveDiff(\n      oldProps.defaultCursor,\n      newProps.defaultCursor,\n      'defaultCursor',\n      changedProps\n    )\n    // type: 'BabylonjsCoreMaterial' property (not coded) BabylonjsCoreScene.defaultMaterial.\n    // type: 'RegExp[]' property (not coded) BabylonjsCoreScene.disableOfflineSupportExceptionRules.\n    checkPrimitiveDiff(\n      oldProps.dispatchAllSubMeshesOfActiveMeshes,\n      newProps.dispatchAllSubMeshesOfActiveMeshes,\n      'dispatchAllSubMeshesOfActiveMeshes',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.doNotHandleCursors,\n      newProps.doNotHandleCursors,\n      'doNotHandleCursors',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.DoubleClickDelay,\n      newProps.DoubleClickDelay,\n      'DoubleClickDelay',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.DragMovementThreshold,\n      newProps.DragMovementThreshold,\n      'DragMovementThreshold',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.dumpNextRenderTargets,\n      newProps.dumpNextRenderTargets,\n      'dumpNextRenderTargets',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.environmentBRDFTexture,\n      newProps.environmentBRDFTexture,\n      'environmentBRDFTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.environmentIntensity,\n      newProps.environmentIntensity,\n      'environmentIntensity',\n      changedProps\n    )\n    checkTextureDiff(\n      oldProps.environmentTexture,\n      newProps.environmentTexture,\n      'environmentTexture',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.ExclusiveDoubleClickMode,\n      newProps.ExclusiveDoubleClickMode,\n      'ExclusiveDoubleClickMode',\n      changedProps\n    )\n    checkColor3Diff(oldProps.fogColor, newProps.fogColor, 'fogColor', changedProps)\n    checkPrimitiveDiff(oldProps.fogDensity, newProps.fogDensity, 'fogDensity', changedProps)\n    checkPrimitiveDiff(oldProps.fogEnabled, newProps.fogEnabled, 'fogEnabled', changedProps)\n    checkPrimitiveDiff(oldProps.fogEnd, newProps.fogEnd, 'fogEnd', changedProps)\n    checkPrimitiveDiff(oldProps.fogMode, newProps.fogMode, 'fogMode', changedProps)\n    checkPrimitiveDiff(oldProps.fogStart, newProps.fogStart, 'fogStart', changedProps)\n    checkPrimitiveDiff(\n      oldProps.forcePointsCloud,\n      newProps.forcePointsCloud,\n      'forcePointsCloud',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.forceWireframe,\n      newProps.forceWireframe,\n      'forceWireframe',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.getActiveMeshCandidates,\n      newProps.getActiveMeshCandidates,\n      'getActiveMeshCandidates',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.getActiveSubMeshCandidates,\n      newProps.getActiveSubMeshCandidates,\n      'getActiveSubMeshCandidates',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.getCollidingSubMeshCandidates,\n      newProps.getCollidingSubMeshCandidates,\n      'getCollidingSubMeshCandidates',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.getDeterministicFrameTime,\n      newProps.getDeterministicFrameTime,\n      'getDeterministicFrameTime',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.getIntersectingSubMeshCandidates,\n      newProps.getIntersectingSubMeshCandidates,\n      'getIntersectingSubMeshCandidates',\n      changedProps\n    )\n    checkVector3Diff(oldProps.gravity, newProps.gravity, 'gravity', false, changedProps)\n    checkPrimitiveDiff(oldProps['gravity-x'], newProps['gravity-x'], 'gravity.x', changedProps)\n    checkPrimitiveDiff(oldProps['gravity-y'], newProps['gravity-y'], 'gravity.y', changedProps)\n    checkPrimitiveDiff(oldProps['gravity-z'], newProps['gravity-z'], 'gravity.z', changedProps)\n    checkPrimitiveDiff(oldProps.hoverCursor, newProps.hoverCursor, 'hoverCursor', changedProps)\n    // type: 'string[]' property (not coded) BabylonjsCoreScene.importedMeshesFiles.\n    checkPrimitiveDiff(\n      oldProps.lensFlaresEnabled,\n      newProps.lensFlaresEnabled,\n      'lensFlaresEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.lightsEnabled,\n      newProps.lightsEnabled,\n      'lightsEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.loadingPluginName,\n      newProps.loadingPluginName,\n      'loadingPluginName',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.LongPressDelay,\n      newProps.LongPressDelay,\n      'LongPressDelay',\n      changedProps\n    )\n    // type: 'any' property (not coded) BabylonjsCoreScene.metadata.\n    checkPrimitiveDiff(\n      oldProps.needsPreviousWorldMatrices,\n      newProps.needsPreviousWorldMatrices,\n      'needsPreviousWorldMatrices',\n      changedProps\n    )\n    // type: 'BabylonjsCoreIOfflineProvider' property (not coded) BabylonjsCoreScene.offlineProvider.\n    checkObservableDiff(\n      oldProps.onActiveCameraChanged,\n      newProps.onActiveCameraChanged,\n      'onActiveCameraChanged',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onActiveCamerasChanged,\n      newProps.onActiveCamerasChanged,\n      'onActiveCamerasChanged',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterActiveMeshesEvaluationObservable,\n      newProps.onAfterActiveMeshesEvaluationObservable,\n      'onAfterActiveMeshesEvaluationObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterAnimationsObservable,\n      newProps.onAfterAnimationsObservable,\n      'onAfterAnimationsObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterCameraRenderObservable,\n      newProps.onAfterCameraRenderObservable,\n      'onAfterCameraRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterDrawPhaseObservable,\n      newProps.onAfterDrawPhaseObservable,\n      'onAfterDrawPhaseObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterParticlesRenderingObservable,\n      newProps.onAfterParticlesRenderingObservable,\n      'onAfterParticlesRenderingObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterPhysicsObservable,\n      newProps.onAfterPhysicsObservable,\n      'onAfterPhysicsObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterRenderCameraObservable,\n      newProps.onAfterRenderCameraObservable,\n      'onAfterRenderCameraObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterRenderingGroupObservable,\n      newProps.onAfterRenderingGroupObservable,\n      'onAfterRenderingGroupObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterRenderObservable,\n      newProps.onAfterRenderObservable,\n      'onAfterRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterRenderTargetsRenderObservable,\n      newProps.onAfterRenderTargetsRenderObservable,\n      'onAfterRenderTargetsRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAfterStepObservable,\n      newProps.onAfterStepObservable,\n      'onAfterStepObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onAnimationFileImportedObservable,\n      newProps.onAnimationFileImportedObservable,\n      'onAnimationFileImportedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeActiveMeshesEvaluationObservable,\n      newProps.onBeforeActiveMeshesEvaluationObservable,\n      'onBeforeActiveMeshesEvaluationObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeAnimationsObservable,\n      newProps.onBeforeAnimationsObservable,\n      'onBeforeAnimationsObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeCameraRenderObservable,\n      newProps.onBeforeCameraRenderObservable,\n      'onBeforeCameraRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeDrawPhaseObservable,\n      newProps.onBeforeDrawPhaseObservable,\n      'onBeforeDrawPhaseObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeParticlesRenderingObservable,\n      newProps.onBeforeParticlesRenderingObservable,\n      'onBeforeParticlesRenderingObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforePhysicsObservable,\n      newProps.onBeforePhysicsObservable,\n      'onBeforePhysicsObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeRenderingGroupObservable,\n      newProps.onBeforeRenderingGroupObservable,\n      'onBeforeRenderingGroupObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeRenderObservable,\n      newProps.onBeforeRenderObservable,\n      'onBeforeRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeRenderTargetsRenderObservable,\n      newProps.onBeforeRenderTargetsRenderObservable,\n      'onBeforeRenderTargetsRenderObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onBeforeStepObservable,\n      newProps.onBeforeStepObservable,\n      'onBeforeStepObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onCameraRemovedObservable,\n      newProps.onCameraRemovedObservable,\n      'onCameraRemovedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onDataLoadedObservable,\n      newProps.onDataLoadedObservable,\n      'onDataLoadedObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onDispose, newProps.onDispose, 'onDispose', changedProps)\n    checkObservableDiff(\n      oldProps.onDisposeObservable,\n      newProps.onDisposeObservable,\n      'onDisposeObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onGeometryRemovedObservable,\n      newProps.onGeometryRemovedObservable,\n      'onGeometryRemovedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onKeyboardObservable,\n      newProps.onKeyboardObservable,\n      'onKeyboardObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onLightRemovedObservable,\n      newProps.onLightRemovedObservable,\n      'onLightRemovedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onMaterialRemovedObservable,\n      newProps.onMaterialRemovedObservable,\n      'onMaterialRemovedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onMeshImportedObservable,\n      newProps.onMeshImportedObservable,\n      'onMeshImportedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onMeshRemovedObservable,\n      newProps.onMeshRemovedObservable,\n      'onMeshRemovedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onMultiMaterialRemovedObservable,\n      newProps.onMultiMaterialRemovedObservable,\n      'onMultiMaterialRemovedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewCameraAddedObservable,\n      newProps.onNewCameraAddedObservable,\n      'onNewCameraAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewGeometryAddedObservable,\n      newProps.onNewGeometryAddedObservable,\n      'onNewGeometryAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewLightAddedObservable,\n      newProps.onNewLightAddedObservable,\n      'onNewLightAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewMaterialAddedObservable,\n      newProps.onNewMaterialAddedObservable,\n      'onNewMaterialAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewMeshAddedObservable,\n      newProps.onNewMeshAddedObservable,\n      'onNewMeshAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewMultiMaterialAddedObservable,\n      newProps.onNewMultiMaterialAddedObservable,\n      'onNewMultiMaterialAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewSkeletonAddedObservable,\n      newProps.onNewSkeletonAddedObservable,\n      'onNewSkeletonAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewTextureAddedObservable,\n      newProps.onNewTextureAddedObservable,\n      'onNewTextureAddedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onNewTransformNodeAddedObservable,\n      newProps.onNewTransformNodeAddedObservable,\n      'onNewTransformNodeAddedObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onPointerDown, newProps.onPointerDown, 'onPointerDown', changedProps)\n    checkLambdaDiff(oldProps.onPointerMove, newProps.onPointerMove, 'onPointerMove', changedProps)\n    checkObservableDiff(\n      oldProps.onPointerObservable,\n      newProps.onPointerObservable,\n      'onPointerObservable',\n      changedProps\n    )\n    checkLambdaDiff(oldProps.onPointerPick, newProps.onPointerPick, 'onPointerPick', changedProps)\n    checkLambdaDiff(oldProps.onPointerUp, newProps.onPointerUp, 'onPointerUp', changedProps)\n    checkObservableDiff(\n      oldProps.onPreKeyboardObservable,\n      newProps.onPreKeyboardObservable,\n      'onPreKeyboardObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onPrePointerObservable,\n      newProps.onPrePointerObservable,\n      'onPrePointerObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onReadyObservable,\n      newProps.onReadyObservable,\n      'onReadyObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onScenePerformancePriorityChangedObservable,\n      newProps.onScenePerformancePriorityChangedObservable,\n      'onScenePerformancePriorityChangedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onSkeletonRemovedObservable,\n      newProps.onSkeletonRemovedObservable,\n      'onSkeletonRemovedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTextureRemovedObservable,\n      newProps.onTextureRemovedObservable,\n      'onTextureRemovedObservable',\n      changedProps\n    )\n    checkObservableDiff(\n      oldProps.onTransformNodeRemovedObservable,\n      newProps.onTransformNodeRemovedObservable,\n      'onTransformNodeRemovedObservable',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.particlesEnabled,\n      newProps.particlesEnabled,\n      'particlesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.performancePriority,\n      newProps.performancePriority,\n      'performancePriority',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.physicsEnabled,\n      newProps.physicsEnabled,\n      'physicsEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pointerDownFastCheck,\n      newProps.pointerDownFastCheck,\n      'pointerDownFastCheck',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerDownPredicate,\n      newProps.pointerDownPredicate,\n      'pointerDownPredicate',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pointerMoveFastCheck,\n      newProps.pointerMoveFastCheck,\n      'pointerMoveFastCheck',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerMovePredicate,\n      newProps.pointerMovePredicate,\n      'pointerMovePredicate',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerMoveTrianglePredicate,\n      newProps.pointerMoveTrianglePredicate,\n      'pointerMoveTrianglePredicate',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.pointerUpFastCheck,\n      newProps.pointerUpFastCheck,\n      'pointerUpFastCheck',\n      changedProps\n    )\n    checkLambdaDiff(\n      oldProps.pointerUpPredicate,\n      newProps.pointerUpPredicate,\n      'pointerUpPredicate',\n      changedProps\n    )\n    checkPrimitiveDiff(oldProps.pointerX, newProps.pointerX, 'pointerX', changedProps)\n    checkPrimitiveDiff(oldProps.pointerY, newProps.pointerY, 'pointerY', changedProps)\n    checkPrimitiveDiff(\n      oldProps.postProcessesEnabled,\n      newProps.postProcessesEnabled,\n      'postProcessesEnabled',\n      changedProps\n    )\n    // type: 'BabylonjsCorePostProcessManager' property (not coded) BabylonjsCoreScene.postProcessManager.\n    checkPrimitiveDiff(\n      oldProps.preventDefaultOnPointerDown,\n      newProps.preventDefaultOnPointerDown,\n      'preventDefaultOnPointerDown',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.preventDefaultOnPointerUp,\n      newProps.preventDefaultOnPointerUp,\n      'preventDefaultOnPointerUp',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.probesEnabled,\n      newProps.probesEnabled,\n      'probesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.proceduralTexturesEnabled,\n      newProps.proceduralTexturesEnabled,\n      'proceduralTexturesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.renderTargetsEnabled,\n      newProps.renderTargetsEnabled,\n      'renderTargetsEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.requireLightSorting,\n      newProps.requireLightSorting,\n      'requireLightSorting',\n      changedProps\n    )\n    // type: 'any' property (not coded) BabylonjsCoreScene.reservedDataStore.\n    checkPrimitiveDiff(\n      oldProps.shadowsEnabled,\n      newProps.shadowsEnabled,\n      'shadowsEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.skeletonsEnabled,\n      newProps.skeletonsEnabled,\n      'skeletonsEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.skipFrustumClipping,\n      newProps.skipFrustumClipping,\n      'skipFrustumClipping',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.skipPointerDownPicking,\n      newProps.skipPointerDownPicking,\n      'skipPointerDownPicking',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.skipPointerMovePicking,\n      newProps.skipPointerMovePicking,\n      'skipPointerMovePicking',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.skipPointerUpPicking,\n      newProps.skipPointerUpPicking,\n      'skipPointerUpPicking',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.spritesEnabled,\n      newProps.spritesEnabled,\n      'spritesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.texturesEnabled,\n      newProps.texturesEnabled,\n      'texturesEnabled',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useConstantAnimationDeltaTime,\n      newProps.useConstantAnimationDeltaTime,\n      'useConstantAnimationDeltaTime',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useDelayedTextureLoading,\n      newProps.useDelayedTextureLoading,\n      'useDelayedTextureLoading',\n      changedProps\n    )\n    checkPrimitiveDiff(\n      oldProps.useRightHandedSystem,\n      newProps.useRightHandedSystem,\n      'useRightHandedSystem',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addActionManager,\n      newProps.addActionManager,\n      'addActionManager',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addAnimation, newProps.addAnimation, 'addAnimation', changedProps)\n    checkMethodDiff(\n      oldProps.addAnimationGroup,\n      newProps.addAnimationGroup,\n      'addAnimationGroup',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addCamera, newProps.addCamera, 'addCamera', changedProps)\n    checkMethodDiff(\n      oldProps.addExternalData,\n      newProps.addExternalData,\n      'addExternalData',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addGeometry, newProps.addGeometry, 'addGeometry', changedProps)\n    checkMethodDiff(oldProps.addLight, newProps.addLight, 'addLight', changedProps)\n    checkMethodDiff(oldProps.addMaterial, newProps.addMaterial, 'addMaterial', changedProps)\n    checkMethodDiff(oldProps.addMesh, newProps.addMesh, 'addMesh', changedProps)\n    checkMethodDiff(\n      oldProps.addMorphTargetManager,\n      newProps.addMorphTargetManager,\n      'addMorphTargetManager',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addMultiMaterial,\n      newProps.addMultiMaterial,\n      'addMultiMaterial',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addParticleSystem,\n      newProps.addParticleSystem,\n      'addParticleSystem',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.addPendingData,\n      newProps.addPendingData,\n      'addPendingData',\n      changedProps\n    )\n    checkMethodDiff(oldProps.addSkeleton, newProps.addSkeleton, 'addSkeleton', changedProps)\n    checkMethodDiff(oldProps.addTexture, newProps.addTexture, 'addTexture', changedProps)\n    checkMethodDiff(\n      oldProps.addTransformNode,\n      newProps.addTransformNode,\n      'addTransformNode',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.deleteCompoundImpostor,\n      newProps.deleteCompoundImpostor,\n      'deleteCompoundImpostor',\n      changedProps\n    )\n    checkMethodDiff(oldProps.enablePhysics, newProps.enablePhysics, 'enablePhysics', changedProps)\n    checkMethodDiff(\n      oldProps.setActiveCameraById,\n      newProps.setActiveCameraById,\n      'setActiveCameraById',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setActiveCameraByID,\n      newProps.setActiveCameraByID,\n      'setActiveCameraByID',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setActiveCameraByName,\n      newProps.setActiveCameraByName,\n      'setActiveCameraByName',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setPointerOverMesh,\n      newProps.setPointerOverMesh,\n      'setPointerOverMesh',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setRenderingAutoClearDepthStencil,\n      newProps.setRenderingAutoClearDepthStencil,\n      'setRenderingAutoClearDepthStencil',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setRenderingOrder,\n      newProps.setRenderingOrder,\n      'setRenderingOrder',\n      changedProps\n    )\n    checkMethodDiff(\n      oldProps.setSceneUniformBuffer,\n      newProps.setSceneUniformBuffer,\n      'setSceneUniformBuffer',\n      changedProps\n    )\n    checkMethodDiff(oldProps.setStepId, newProps.setStepId, 'setStepId', changedProps)\n    checkMethodDiff(\n      oldProps.setTransformMatrix,\n      newProps.setTransformMatrix,\n      'setTransformMatrix',\n      changedProps\n    )\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\nexport const ADTForMesh: string = 'ADTForMesh',\n  ADTForMeshTexture: string = 'ADTForMeshTexture',\n  ADTFullscreenUI: string = 'ADTFullscreenUI',\n  AbstractButton3D: string = 'AbstractButton3D',\n  AbstractMesh: string = 'AbstractMesh',\n  AdvancedDynamicTexture: string = 'AdvancedDynamicTexture',\n  AnaglyphArcRotateCamera: string = 'AnaglyphArcRotateCamera',\n  AnaglyphFreeCamera: string = 'AnaglyphFreeCamera',\n  AnaglyphGamepadCamera: string = 'AnaglyphGamepadCamera',\n  AnaglyphPostProcess: string = 'AnaglyphPostProcess',\n  AnaglyphUniversalCamera: string = 'AnaglyphUniversalCamera',\n  ArcFollowCamera: string = 'ArcFollowCamera',\n  ArcRotateCamera: string = 'ArcRotateCamera',\n  AttachToBoxBehavior: string = 'AttachToBoxBehavior',\n  AutoRotationBehavior: string = 'AutoRotationBehavior',\n  AxisDragGizmo: string = 'AxisDragGizmo',\n  AxisScaleGizmo: string = 'AxisScaleGizmo',\n  BackgroundMaterial: string = 'BackgroundMaterial',\n  BaseSixDofDragBehavior: string = 'BaseSixDofDragBehavior',\n  BaseSlider: string = 'BaseSlider',\n  BaseTexture: string = 'BaseTexture',\n  BlackAndWhitePostProcess: string = 'BlackAndWhitePostProcess',\n  BloomMergePostProcess: string = 'BloomMergePostProcess',\n  BlurPostProcess: string = 'BlurPostProcess',\n  BouncingBehavior: string = 'BouncingBehavior',\n  BoundingBoxGizmo: string = 'BoundingBoxGizmo',\n  Box: string = 'Box',\n  Button: string = 'Button',\n  Button3D: string = 'Button3D',\n  Camera: string = 'Camera',\n  CameraGizmo: string = 'CameraGizmo',\n  Capsule: string = 'Capsule',\n  CascadedShadowGenerator: string = 'CascadedShadowGenerator',\n  Checkbox: string = 'Checkbox',\n  ChromaticAberrationPostProcess: string = 'ChromaticAberrationPostProcess',\n  CircleOfConfusionPostProcess: string = 'CircleOfConfusionPostProcess',\n  ColorCorrectionPostProcess: string = 'ColorCorrectionPostProcess',\n  ColorGradingTexture: string = 'ColorGradingTexture',\n  ColorPicker: string = 'ColorPicker',\n  Container: string = 'Container',\n  Container3D: string = 'Container3D',\n  ContentDisplay3D: string = 'ContentDisplay3D',\n  Control: string = 'Control',\n  Control3D: string = 'Control3D',\n  ConvolutionPostProcess: string = 'ConvolutionPostProcess',\n  CubeTexture: string = 'CubeTexture',\n  CustomProceduralTexture: string = 'CustomProceduralTexture',\n  Cylinder: string = 'Cylinder',\n  CylinderPanel: string = 'CylinderPanel',\n  DashedLines: string = 'DashedLines',\n  Decal: string = 'Decal',\n  DefaultBehavior: string = 'DefaultBehavior',\n  DefaultRenderingPipeline: string = 'DefaultRenderingPipeline',\n  DepthOfFieldBlurPostProcess: string = 'DepthOfFieldBlurPostProcess',\n  DepthOfFieldMergePostProcess: string = 'DepthOfFieldMergePostProcess',\n  DetailMapConfiguration: string = 'DetailMapConfiguration',\n  DeviceOrientationCamera: string = 'DeviceOrientationCamera',\n  DirectionalLight: string = 'DirectionalLight',\n  Disc: string = 'Disc',\n  DisplayGrid: string = 'DisplayGrid',\n  DisplayPassPostProcess: string = 'DisplayPassPostProcess',\n  DynamicTerrain: string = 'DynamicTerrain',\n  DynamicTexture: string = 'DynamicTexture',\n  EffectLayer: string = 'EffectLayer',\n  Ellipse: string = 'Ellipse',\n  EngineView: string = 'EngineView',\n  EnvironmentHelper: string = 'EnvironmentHelper',\n  EquiRectangularCubeTexture: string = 'EquiRectangularCubeTexture',\n  ExtractHighlightsPostProcess: string = 'ExtractHighlightsPostProcess',\n  ExtrudePolygon: string = 'ExtrudePolygon',\n  ExtrudeShape: string = 'ExtrudeShape',\n  ExtrudeShapeCustom: string = 'ExtrudeShapeCustom',\n  FadeInOutBehavior: string = 'FadeInOutBehavior',\n  FilterPostProcess: string = 'FilterPostProcess',\n  FluentBackplateMaterial: string = 'FluentBackplateMaterial',\n  FluentButtonMaterial: string = 'FluentButtonMaterial',\n  FluentMaterial: string = 'FluentMaterial',\n  FlyCamera: string = 'FlyCamera',\n  FocusableButton: string = 'FocusableButton',\n  FollowBehavior: string = 'FollowBehavior',\n  FollowCamera: string = 'FollowCamera',\n  FramingBehavior: string = 'FramingBehavior',\n  FreeCamera: string = 'FreeCamera',\n  FxaaPostProcess: string = 'FxaaPostProcess',\n  GUI3DManager: string = 'GUI3DManager',\n  GamepadCamera: string = 'GamepadCamera',\n  Geodesic: string = 'Geodesic',\n  Gizmo: string = 'Gizmo',\n  GizmoManager: string = 'GizmoManager',\n  GlowLayer: string = 'GlowLayer',\n  Goldberg: string = 'Goldberg',\n  GoldbergMesh: string = 'GoldbergMesh',\n  GrainPostProcess: string = 'GrainPostProcess',\n  GreasedLineBaseMesh: string = 'GreasedLineBaseMesh',\n  GreasedLineMesh: string = 'GreasedLineMesh',\n  GreasedLineRibbonMesh: string = 'GreasedLineRibbonMesh',\n  GreasedLineSimpleMaterial: string = 'GreasedLineSimpleMaterial',\n  Grid: string = 'Grid',\n  Ground: string = 'Ground',\n  GroundFromHeightMap: string = 'GroundFromHeightMap',\n  GroundMesh: string = 'GroundMesh',\n  HDRCubeTexture: string = 'HDRCubeTexture',\n  HandConstraintBehavior: string = 'HandConstraintBehavior',\n  HandMenu: string = 'HandMenu',\n  HandleMaterial: string = 'HandleMaterial',\n  HemisphericLight: string = 'HemisphericLight',\n  HighlightLayer: string = 'HighlightLayer',\n  HighlightsPostProcess: string = 'HighlightsPostProcess',\n  HolographicBackplate: string = 'HolographicBackplate',\n  HolographicButton: string = 'HolographicButton',\n  HolographicSlate: string = 'HolographicSlate',\n  HtmlElementTexture: string = 'HtmlElementTexture',\n  IcoSphere: string = 'IcoSphere',\n  Image: string = 'Image',\n  ImageBasedSlider: string = 'ImageBasedSlider',\n  ImageProcessingConfiguration: string = 'ImageProcessingConfiguration',\n  ImageProcessingPostProcess: string = 'ImageProcessingPostProcess',\n  ImageScrollBar: string = 'ImageScrollBar',\n  InputPassword: string = 'InputPassword',\n  InputText: string = 'InputText',\n  InputTextArea: string = 'InputTextArea',\n  InstancedLinesMesh: string = 'InstancedLinesMesh',\n  InstancedMesh: string = 'InstancedMesh',\n  Lathe: string = 'Lathe',\n  Layer: string = 'Layer',\n  LensRenderingPipeline: string = 'LensRenderingPipeline',\n  Light: string = 'Light',\n  LightGizmo: string = 'LightGizmo',\n  Line: string = 'Line',\n  LineSystem: string = 'LineSystem',\n  Lines: string = 'Lines',\n  LinesMesh: string = 'LinesMesh',\n  MRDLBackglowMaterial: string = 'MRDLBackglowMaterial',\n  MRDLBackplateMaterial: string = 'MRDLBackplateMaterial',\n  MRDLFrontplateMaterial: string = 'MRDLFrontplateMaterial',\n  MRDLInnerquadMaterial: string = 'MRDLInnerquadMaterial',\n  MRDLSliderBarMaterial: string = 'MRDLSliderBarMaterial',\n  MRDLSliderThumbMaterial: string = 'MRDLSliderThumbMaterial',\n  Material: string = 'Material',\n  MaterialPluginBase: string = 'MaterialPluginBase',\n  Mesh: string = 'Mesh',\n  MeshButton3D: string = 'MeshButton3D',\n  MirrorTexture: string = 'MirrorTexture',\n  MotionBlurPostProcess: string = 'MotionBlurPostProcess',\n  MultiLine: string = 'MultiLine',\n  MultiMaterial: string = 'MultiMaterial',\n  MultiPointerScaleBehavior: string = 'MultiPointerScaleBehavior',\n  MultiRenderTarget: string = 'MultiRenderTarget',\n  MultiviewRenderTarget: string = 'MultiviewRenderTarget',\n  NearMenu: string = 'NearMenu',\n  Node: string = 'Node',\n  NodeMaterial: string = 'NodeMaterial',\n  NoiseProceduralTexture: string = 'NoiseProceduralTexture',\n  OcclusionMaterial: string = 'OcclusionMaterial',\n  PBRAnisotropicConfiguration: string = 'PBRAnisotropicConfiguration',\n  PBRBRDFConfiguration: string = 'PBRBRDFConfiguration',\n  PBRBaseMaterial: string = 'PBRBaseMaterial',\n  PBRBaseSimpleMaterial: string = 'PBRBaseSimpleMaterial',\n  PBRClearCoatConfiguration: string = 'PBRClearCoatConfiguration',\n  PBRIridescenceConfiguration: string = 'PBRIridescenceConfiguration',\n  PBRMaterial: string = 'PBRMaterial',\n  PBRMetallicRoughnessMaterial: string = 'PBRMetallicRoughnessMaterial',\n  PBRSheenConfiguration: string = 'PBRSheenConfiguration',\n  PBRSpecularGlossinessMaterial: string = 'PBRSpecularGlossinessMaterial',\n  PBRSubSurfaceConfiguration: string = 'PBRSubSurfaceConfiguration',\n  PassCubePostProcess: string = 'PassCubePostProcess',\n  PassPostProcess: string = 'PassPostProcess',\n  PhysicsAggregate: string = 'PhysicsAggregate',\n  PhysicsImpostor: string = 'PhysicsImpostor',\n  Plane: string = 'Plane',\n  PlaneDragGizmo: string = 'PlaneDragGizmo',\n  PlanePanel: string = 'PlanePanel',\n  PlaneRotationGizmo: string = 'PlaneRotationGizmo',\n  PointLight: string = 'PointLight',\n  PointerDragBehavior: string = 'PointerDragBehavior',\n  PointsCloudSystem: string = 'PointsCloudSystem',\n  Polygon: string = 'Polygon',\n  Polyhedron: string = 'Polyhedron',\n  PositionGizmo: string = 'PositionGizmo',\n  PostProcess: string = 'PostProcess',\n  PostProcessRenderPipeline: string = 'PostProcessRenderPipeline',\n  PrePassConfiguration: string = 'PrePassConfiguration',\n  PrePassRenderTarget: string = 'PrePassRenderTarget',\n  ProceduralTexture: string = 'ProceduralTexture',\n  PushMaterial: string = 'PushMaterial',\n  RadioButton: string = 'RadioButton',\n  RawCubeTexture: string = 'RawCubeTexture',\n  RawTexture: string = 'RawTexture',\n  RawTexture2DArray: string = 'RawTexture2DArray',\n  RawTexture3D: string = 'RawTexture3D',\n  Rectangle: string = 'Rectangle',\n  RefractionPostProcess: string = 'RefractionPostProcess',\n  RefractionTexture: string = 'RefractionTexture',\n  RenderTargetTexture: string = 'RenderTargetTexture',\n  Ribbon: string = 'Ribbon',\n  RotationGizmo: string = 'RotationGizmo',\n  SSAO2RenderingPipeline: string = 'SSAO2RenderingPipeline',\n  SSAORenderingPipeline: string = 'SSAORenderingPipeline',\n  SSRRenderingPipeline: string = 'SSRRenderingPipeline',\n  ScaleGizmo: string = 'ScaleGizmo',\n  ScatterPanel: string = 'ScatterPanel',\n  ScreenSpaceCurvaturePostProcess: string = 'ScreenSpaceCurvaturePostProcess',\n  ScreenSpaceReflectionPostProcess: string = 'ScreenSpaceReflectionPostProcess',\n  ScrollBar: string = 'ScrollBar',\n  ScrollViewer: string = 'ScrollViewer',\n  SelectionPanel: string = 'SelectionPanel',\n  ShaderMaterial: string = 'ShaderMaterial',\n  ShadowGenerator: string = 'ShadowGenerator',\n  ShadowLight: string = 'ShadowLight',\n  SharpenPostProcess: string = 'SharpenPostProcess',\n  SixDofDragBehavior: string = 'SixDofDragBehavior',\n  SlateGizmo: string = 'SlateGizmo',\n  Slider: string = 'Slider',\n  Slider3D: string = 'Slider3D',\n  Sphere: string = 'Sphere',\n  SpherePanel: string = 'SpherePanel',\n  SpotLight: string = 'SpotLight',\n  StackPanel: string = 'StackPanel',\n  StackPanel3D: string = 'StackPanel3D',\n  StandardMaterial: string = 'StandardMaterial',\n  StandardRenderingPipeline: string = 'StandardRenderingPipeline',\n  StereoscopicArcRotateCamera: string = 'StereoscopicArcRotateCamera',\n  StereoscopicFreeCamera: string = 'StereoscopicFreeCamera',\n  StereoscopicGamepadCamera: string = 'StereoscopicGamepadCamera',\n  StereoscopicInterlacePostProcess: string = 'StereoscopicInterlacePostProcess',\n  StereoscopicInterlacePostProcessI: string = 'StereoscopicInterlacePostProcessI',\n  StereoscopicScreenUniversalCamera: string = 'StereoscopicScreenUniversalCamera',\n  StereoscopicUniversalCamera: string = 'StereoscopicUniversalCamera',\n  SubSurfaceScatteringPostProcess: string = 'SubSurfaceScatteringPostProcess',\n  SurfaceMagnetismBehavior: string = 'SurfaceMagnetismBehavior',\n  TargetCamera: string = 'TargetCamera',\n  Text: string = 'Text',\n  TextBlock: string = 'TextBlock',\n  Texture: string = 'Texture',\n  ThinRenderTargetTexture: string = 'ThinRenderTargetTexture',\n  ThinTexture: string = 'ThinTexture',\n  TiledBox: string = 'TiledBox',\n  TiledGround: string = 'TiledGround',\n  TiledPlane: string = 'TiledPlane',\n  ToggleButton: string = 'ToggleButton',\n  TonemapPostProcess: string = 'TonemapPostProcess',\n  Torus: string = 'Torus',\n  TorusKnot: string = 'TorusKnot',\n  TouchButton3D: string = 'TouchButton3D',\n  TouchCamera: string = 'TouchCamera',\n  TouchHolographicButton: string = 'TouchHolographicButton',\n  TouchHolographicMenu: string = 'TouchHolographicMenu',\n  TouchMeshButton3D: string = 'TouchMeshButton3D',\n  TrailMesh: string = 'TrailMesh',\n  TransformNode: string = 'TransformNode',\n  Tube: string = 'Tube',\n  UniversalCamera: string = 'UniversalCamera',\n  UtilityLayerRenderer: string = 'UtilityLayerRenderer',\n  VRDeviceOrientationArcRotateCamera: string = 'VRDeviceOrientationArcRotateCamera',\n  VRDeviceOrientationFreeCamera: string = 'VRDeviceOrientationFreeCamera',\n  VRDeviceOrientationGamepadCamera: string = 'VRDeviceOrientationGamepadCamera',\n  VRDistortionCorrectionPostProcess: string = 'VRDistortionCorrectionPostProcess',\n  VRExperienceHelper: string = 'VRExperienceHelper',\n  VRMultiviewToSingleviewPostProcess: string = 'VRMultiviewToSingleviewPostProcess',\n  VideoTexture: string = 'VideoTexture',\n  Viewport: string = 'Viewport',\n  VirtualJoysticksCamera: string = 'VirtualJoysticksCamera',\n  VirtualKeyboard: string = 'VirtualKeyboard',\n  VolumeBasedPanel: string = 'VolumeBasedPanel',\n  VolumetricLightScatteringPostProcess: string = 'VolumetricLightScatteringPostProcess',\n  WebXRCamera: string = 'WebXRCamera',\n  XRSpaceWarpRenderTarget: string = 'XRSpaceWarpRenderTarget',\n  _ScrollViewerWindow: string = '_ScrollViewerWindow'\nconst classesMap: Record<string, any> = {\n  abstractScene: BabylonjsCoreAbstractScene,\n  AbstractScene: BabylonjsCoreAbstractScene,\n  scene: BabylonjsCoreScene,\n  Scene: BabylonjsCoreScene,\n  dynamicTerrain: ExtensionsDynamicTerrain,\n  DynamicTerrain: ExtensionsDynamicTerrain,\n  camera: BabylonjsCoreCamera,\n  Camera: BabylonjsCoreCamera,\n  gizmo: BabylonjsCoreGizmo,\n  Gizmo: BabylonjsCoreGizmo,\n  gizmoManager: BabylonjsCoreGizmoManager,\n  GizmoManager: BabylonjsCoreGizmoManager,\n  environmentHelper: BabylonjsCoreEnvironmentHelper,\n  EnvironmentHelper: BabylonjsCoreEnvironmentHelper,\n  effectLayer: BabylonjsCoreEffectLayer,\n  EffectLayer: BabylonjsCoreEffectLayer,\n  layer: BabylonjsCoreLayer,\n  Layer: BabylonjsCoreLayer,\n  light: BabylonjsCoreLight,\n  Light: BabylonjsCoreLight,\n  material: BabylonjsCoreMaterial,\n  Material: BabylonjsCoreMaterial,\n  materialPluginBase: BabylonjsCoreMaterialPluginBase,\n  MaterialPluginBase: BabylonjsCoreMaterialPluginBase,\n  viewport: BabylonjsCoreViewport,\n  Viewport: BabylonjsCoreViewport,\n  abstractMesh: BabylonjsCoreAbstractMesh,\n  AbstractMesh: BabylonjsCoreAbstractMesh,\n  mesh: BabylonjsCoreMesh,\n  Mesh: BabylonjsCoreMesh,\n  transformNode: BabylonjsCoreTransformNode,\n  TransformNode: BabylonjsCoreTransformNode,\n  pointsCloudSystem: BabylonjsCorePointsCloudSystem,\n  PointsCloudSystem: BabylonjsCorePointsCloudSystem,\n  postProcess: BabylonjsCorePostProcess,\n  PostProcess: BabylonjsCorePostProcess,\n  tonemapPostProcess: BabylonjsCoreTonemapPostProcess,\n  TonemapPostProcess: BabylonjsCoreTonemapPostProcess,\n  utilityLayerRenderer: BabylonjsCoreUtilityLayerRenderer,\n  UtilityLayerRenderer: BabylonjsCoreUtilityLayerRenderer,\n  advancedDynamicTexture: BabylonjsGuiAdvancedDynamicTexture,\n  AdvancedDynamicTexture: BabylonjsGuiAdvancedDynamicTexture,\n  gui3DManager: BabylonjsGuiGUI3DManager,\n  GUI3DManager: BabylonjsGuiGUI3DManager,\n  autoRotationBehavior: BabylonjsCoreAutoRotationBehavior,\n  AutoRotationBehavior: BabylonjsCoreAutoRotationBehavior,\n  bouncingBehavior: BabylonjsCoreBouncingBehavior,\n  BouncingBehavior: BabylonjsCoreBouncingBehavior,\n  framingBehavior: BabylonjsCoreFramingBehavior,\n  FramingBehavior: BabylonjsCoreFramingBehavior,\n  attachToBoxBehavior: BabylonjsCoreAttachToBoxBehavior,\n  AttachToBoxBehavior: BabylonjsCoreAttachToBoxBehavior,\n  baseSixDofDragBehavior: BabylonjsCoreBaseSixDofDragBehavior,\n  BaseSixDofDragBehavior: BabylonjsCoreBaseSixDofDragBehavior,\n  fadeInOutBehavior: BabylonjsCoreFadeInOutBehavior,\n  FadeInOutBehavior: BabylonjsCoreFadeInOutBehavior,\n  followBehavior: BabylonjsCoreFollowBehavior,\n  FollowBehavior: BabylonjsCoreFollowBehavior,\n  handConstraintBehavior: BabylonjsCoreHandConstraintBehavior,\n  HandConstraintBehavior: BabylonjsCoreHandConstraintBehavior,\n  multiPointerScaleBehavior: BabylonjsCoreMultiPointerScaleBehavior,\n  MultiPointerScaleBehavior: BabylonjsCoreMultiPointerScaleBehavior,\n  pointerDragBehavior: BabylonjsCorePointerDragBehavior,\n  PointerDragBehavior: BabylonjsCorePointerDragBehavior,\n  sixDofDragBehavior: BabylonjsCoreSixDofDragBehavior,\n  SixDofDragBehavior: BabylonjsCoreSixDofDragBehavior,\n  surfaceMagnetismBehavior: BabylonjsCoreSurfaceMagnetismBehavior,\n  SurfaceMagnetismBehavior: BabylonjsCoreSurfaceMagnetismBehavior,\n  vrExperienceHelper: BabylonjsCoreVRExperienceHelper,\n  VRExperienceHelper: BabylonjsCoreVRExperienceHelper,\n  engineView: BabylonjsCoreEngineView,\n  EngineView: BabylonjsCoreEngineView,\n  cascadedShadowGenerator: BabylonjsCoreCascadedShadowGenerator,\n  CascadedShadowGenerator: BabylonjsCoreCascadedShadowGenerator,\n  shadowGenerator: BabylonjsCoreShadowGenerator,\n  ShadowGenerator: BabylonjsCoreShadowGenerator,\n  thinTexture: BabylonjsCoreThinTexture,\n  ThinTexture: BabylonjsCoreThinTexture,\n  greasedLineBaseMesh: BabylonjsCoreGreasedLineBaseMesh,\n  GreasedLineBaseMesh: BabylonjsCoreGreasedLineBaseMesh,\n  physicsImpostor: BabylonjsCorePhysicsImpostor,\n  PhysicsImpostor: BabylonjsCorePhysicsImpostor,\n  physicsAggregate: BabylonjsCorePhysicsAggregate,\n  PhysicsAggregate: BabylonjsCorePhysicsAggregate,\n  postProcessRenderPipeline: BabylonjsCorePostProcessRenderPipeline,\n  PostProcessRenderPipeline: BabylonjsCorePostProcessRenderPipeline,\n  control: BabylonjsGuiControl,\n  Control: BabylonjsGuiControl,\n  textBlock: BabylonjsGuiTextBlock,\n  TextBlock: BabylonjsGuiTextBlock,\n  defaultBehavior: BabylonjsGuiDefaultBehavior,\n  DefaultBehavior: BabylonjsGuiDefaultBehavior,\n  control3D: BabylonjsGuiControl3D,\n  Control3D: BabylonjsGuiControl3D,\n  node: BabylonjsCoreNode,\n  Node: BabylonjsCoreNode,\n  instancedMesh: BabylonjsCoreInstancedMesh,\n  InstancedMesh: BabylonjsCoreInstancedMesh,\n  instancedLinesMesh: BabylonjsCoreInstancedLinesMesh,\n  InstancedLinesMesh: BabylonjsCoreInstancedLinesMesh,\n  linesMesh: BabylonjsCoreLinesMesh,\n  LinesMesh: BabylonjsCoreLinesMesh,\n  goldbergMesh: BabylonjsCoreGoldbergMesh,\n  GoldbergMesh: BabylonjsCoreGoldbergMesh,\n  groundMesh: BabylonjsCoreGroundMesh,\n  GroundMesh: BabylonjsCoreGroundMesh,\n  trailMesh: BabylonjsCoreTrailMesh,\n  TrailMesh: BabylonjsCoreTrailMesh,\n  greasedLineMesh: BabylonjsCoreGreasedLineMesh,\n  GreasedLineMesh: BabylonjsCoreGreasedLineMesh,\n  greasedLineRibbonMesh: BabylonjsCoreGreasedLineRibbonMesh,\n  GreasedLineRibbonMesh: BabylonjsCoreGreasedLineRibbonMesh,\n  renderTargetTexture: BabylonjsCoreRenderTargetTexture,\n  RenderTargetTexture: BabylonjsCoreRenderTargetTexture,\n  targetCamera: BabylonjsCoreTargetCamera,\n  TargetCamera: BabylonjsCoreTargetCamera,\n  freeCamera: BabylonjsCoreFreeCamera,\n  FreeCamera: BabylonjsCoreFreeCamera,\n  webXrCamera: BabylonjsCoreWebXRCamera,\n  WebXRCamera: BabylonjsCoreWebXRCamera,\n  touchCamera: BabylonjsCoreTouchCamera,\n  TouchCamera: BabylonjsCoreTouchCamera,\n  universalCamera: BabylonjsCoreUniversalCamera,\n  UniversalCamera: BabylonjsCoreUniversalCamera,\n  gamepadCamera: BabylonjsCoreGamepadCamera,\n  GamepadCamera: BabylonjsCoreGamepadCamera,\n  anaglyphGamepadCamera: BabylonjsCoreAnaglyphGamepadCamera,\n  AnaglyphGamepadCamera: BabylonjsCoreAnaglyphGamepadCamera,\n  stereoscopicGamepadCamera: BabylonjsCoreStereoscopicGamepadCamera,\n  StereoscopicGamepadCamera: BabylonjsCoreStereoscopicGamepadCamera,\n  anaglyphUniversalCamera: BabylonjsCoreAnaglyphUniversalCamera,\n  AnaglyphUniversalCamera: BabylonjsCoreAnaglyphUniversalCamera,\n  stereoscopicUniversalCamera: BabylonjsCoreStereoscopicUniversalCamera,\n  StereoscopicUniversalCamera: BabylonjsCoreStereoscopicUniversalCamera,\n  stereoscopicScreenUniversalCamera: BabylonjsCoreStereoscopicScreenUniversalCamera,\n  StereoscopicScreenUniversalCamera: BabylonjsCoreStereoscopicScreenUniversalCamera,\n  deviceOrientationCamera: BabylonjsCoreDeviceOrientationCamera,\n  DeviceOrientationCamera: BabylonjsCoreDeviceOrientationCamera,\n  vrDeviceOrientationFreeCamera: BabylonjsCoreVRDeviceOrientationFreeCamera,\n  VRDeviceOrientationFreeCamera: BabylonjsCoreVRDeviceOrientationFreeCamera,\n  vrDeviceOrientationGamepadCamera: BabylonjsCoreVRDeviceOrientationGamepadCamera,\n  VRDeviceOrientationGamepadCamera: BabylonjsCoreVRDeviceOrientationGamepadCamera,\n  anaglyphFreeCamera: BabylonjsCoreAnaglyphFreeCamera,\n  AnaglyphFreeCamera: BabylonjsCoreAnaglyphFreeCamera,\n  stereoscopicFreeCamera: BabylonjsCoreStereoscopicFreeCamera,\n  StereoscopicFreeCamera: BabylonjsCoreStereoscopicFreeCamera,\n  virtualJoysticksCamera: BabylonjsCoreVirtualJoysticksCamera,\n  VirtualJoysticksCamera: BabylonjsCoreVirtualJoysticksCamera,\n  arcRotateCamera: BabylonjsCoreArcRotateCamera,\n  ArcRotateCamera: BabylonjsCoreArcRotateCamera,\n  anaglyphArcRotateCamera: BabylonjsCoreAnaglyphArcRotateCamera,\n  AnaglyphArcRotateCamera: BabylonjsCoreAnaglyphArcRotateCamera,\n  stereoscopicArcRotateCamera: BabylonjsCoreStereoscopicArcRotateCamera,\n  StereoscopicArcRotateCamera: BabylonjsCoreStereoscopicArcRotateCamera,\n  vrDeviceOrientationArcRotateCamera: BabylonjsCoreVRDeviceOrientationArcRotateCamera,\n  VRDeviceOrientationArcRotateCamera: BabylonjsCoreVRDeviceOrientationArcRotateCamera,\n  flyCamera: BabylonjsCoreFlyCamera,\n  FlyCamera: BabylonjsCoreFlyCamera,\n  followCamera: BabylonjsCoreFollowCamera,\n  FollowCamera: BabylonjsCoreFollowCamera,\n  arcFollowCamera: BabylonjsCoreArcFollowCamera,\n  ArcFollowCamera: BabylonjsCoreArcFollowCamera,\n  meshBuilder: BabylonjsCoreMeshBuilder,\n  MeshBuilder: BabylonjsCoreMeshBuilder,\n  pushMaterial: BabylonjsCorePushMaterial,\n  PushMaterial: BabylonjsCorePushMaterial,\n  nodeMaterial: BabylonjsCoreNodeMaterial,\n  NodeMaterial: BabylonjsCoreNodeMaterial,\n  imageProcessingConfiguration: BabylonjsCoreImageProcessingConfiguration,\n  ImageProcessingConfiguration: BabylonjsCoreImageProcessingConfiguration,\n  shaderMaterial: BabylonjsCoreShaderMaterial,\n  ShaderMaterial: BabylonjsCoreShaderMaterial,\n  baseTexture: BabylonjsCoreBaseTexture,\n  BaseTexture: BabylonjsCoreBaseTexture,\n  occlusionMaterial: BabylonjsCoreOcclusionMaterial,\n  OcclusionMaterial: BabylonjsCoreOcclusionMaterial,\n  greasedLineSimpleMaterial: BabylonjsCoreGreasedLineSimpleMaterial,\n  GreasedLineSimpleMaterial: BabylonjsCoreGreasedLineSimpleMaterial,\n  rawTexture: BabylonjsCoreRawTexture,\n  RawTexture: BabylonjsCoreRawTexture,\n  handleMaterial: BabylonjsGuiHandleMaterial,\n  HandleMaterial: BabylonjsGuiHandleMaterial,\n  pbrBaseMaterial: BabylonjsCorePBRBaseMaterial,\n  PBRBaseMaterial: BabylonjsCorePBRBaseMaterial,\n  pbrBaseSimpleMaterial: BabylonjsCorePBRBaseSimpleMaterial,\n  PBRBaseSimpleMaterial: BabylonjsCorePBRBaseSimpleMaterial,\n  pbrMetallicRoughnessMaterial: BabylonjsCorePBRMetallicRoughnessMaterial,\n  PBRMetallicRoughnessMaterial: BabylonjsCorePBRMetallicRoughnessMaterial,\n  pbrSpecularGlossinessMaterial: BabylonjsCorePBRSpecularGlossinessMaterial,\n  PBRSpecularGlossinessMaterial: BabylonjsCorePBRSpecularGlossinessMaterial,\n  pbrMaterial: BabylonjsCorePBRMaterial,\n  PBRMaterial: BabylonjsCorePBRMaterial,\n  standardMaterial: BabylonjsCoreStandardMaterial,\n  StandardMaterial: BabylonjsCoreStandardMaterial,\n  backgroundMaterial: BabylonjsCoreBackgroundMaterial,\n  BackgroundMaterial: BabylonjsCoreBackgroundMaterial,\n  shadowLight: BabylonjsCoreShadowLight,\n  ShadowLight: BabylonjsCoreShadowLight,\n  fluentMaterial: BabylonjsGuiFluentMaterial,\n  FluentMaterial: BabylonjsGuiFluentMaterial,\n  fluentButtonMaterial: BabylonjsGuiFluentButtonMaterial,\n  FluentButtonMaterial: BabylonjsGuiFluentButtonMaterial,\n  fluentBackplateMaterial: BabylonjsGuiFluentBackplateMaterial,\n  FluentBackplateMaterial: BabylonjsGuiFluentBackplateMaterial,\n  mrdlSliderBarMaterial: BabylonjsGuiMRDLSliderBarMaterial,\n  MRDLSliderBarMaterial: BabylonjsGuiMRDLSliderBarMaterial,\n  texture: BabylonjsCoreTexture,\n  Texture: BabylonjsCoreTexture,\n  mrdlSliderThumbMaterial: BabylonjsGuiMRDLSliderThumbMaterial,\n  MRDLSliderThumbMaterial: BabylonjsGuiMRDLSliderThumbMaterial,\n  mrdlBackplateMaterial: BabylonjsGuiMRDLBackplateMaterial,\n  MRDLBackplateMaterial: BabylonjsGuiMRDLBackplateMaterial,\n  mrdlBackglowMaterial: BabylonjsGuiMRDLBackglowMaterial,\n  MRDLBackglowMaterial: BabylonjsGuiMRDLBackglowMaterial,\n  mrdlFrontplateMaterial: BabylonjsGuiMRDLFrontplateMaterial,\n  MRDLFrontplateMaterial: BabylonjsGuiMRDLFrontplateMaterial,\n  mrdlInnerquadMaterial: BabylonjsGuiMRDLInnerquadMaterial,\n  MRDLInnerquadMaterial: BabylonjsGuiMRDLInnerquadMaterial,\n  multiMaterial: BabylonjsCoreMultiMaterial,\n  MultiMaterial: BabylonjsCoreMultiMaterial,\n  directionalLight: BabylonjsCoreDirectionalLight,\n  DirectionalLight: BabylonjsCoreDirectionalLight,\n  pointLight: BabylonjsCorePointLight,\n  PointLight: BabylonjsCorePointLight,\n  spotLight: BabylonjsCoreSpotLight,\n  SpotLight: BabylonjsCoreSpotLight,\n  hemisphericLight: BabylonjsCoreHemisphericLight,\n  HemisphericLight: BabylonjsCoreHemisphericLight,\n  container: BabylonjsGuiContainer,\n  Container: BabylonjsGuiContainer,\n  rectangle: BabylonjsGuiRectangle,\n  Rectangle: BabylonjsGuiRectangle,\n  'babylon-button': BabylonjsGuiButton,\n  Button: BabylonjsGuiButton,\n  focusableButton: BabylonjsGuiFocusableButton,\n  FocusableButton: BabylonjsGuiFocusableButton,\n  selectionPanel: BabylonjsGuiSelectionPanel,\n  SelectionPanel: BabylonjsGuiSelectionPanel,\n  scrollViewer: BabylonjsGuiScrollViewer,\n  ScrollViewer: BabylonjsGuiScrollViewer,\n  'babylon-image': BabylonjsGuiImage,\n  Image: BabylonjsGuiImage,\n  toggleButton: BabylonjsGuiToggleButton,\n  ToggleButton: BabylonjsGuiToggleButton,\n  stackPanel: BabylonjsGuiStackPanel,\n  StackPanel: BabylonjsGuiStackPanel,\n  virtualKeyboard: BabylonjsGuiVirtualKeyboard,\n  VirtualKeyboard: BabylonjsGuiVirtualKeyboard,\n  'babylon-ellipse': BabylonjsGuiEllipse,\n  Ellipse: BabylonjsGuiEllipse,\n  grid: BabylonjsGuiGrid,\n  Grid: BabylonjsGuiGrid,\n  scrollViewerWindow: BabylonjsGui_ScrollViewerWindow,\n  _ScrollViewerWindow: BabylonjsGui_ScrollViewerWindow,\n  checkbox: BabylonjsGuiCheckbox,\n  Checkbox: BabylonjsGuiCheckbox,\n  colorPicker: BabylonjsGuiColorPicker,\n  ColorPicker: BabylonjsGuiColorPicker,\n  inputText: BabylonjsGuiInputText,\n  InputText: BabylonjsGuiInputText,\n  inputTextArea: BabylonjsGuiInputTextArea,\n  InputTextArea: BabylonjsGuiInputTextArea,\n  inputPassword: BabylonjsGuiInputPassword,\n  InputPassword: BabylonjsGuiInputPassword,\n  'babylon-line': BabylonjsGuiLine,\n  Line: BabylonjsGuiLine,\n  multiLine: BabylonjsGuiMultiLine,\n  MultiLine: BabylonjsGuiMultiLine,\n  radioButton: BabylonjsGuiRadioButton,\n  RadioButton: BabylonjsGuiRadioButton,\n  baseSlider: BabylonjsGuiBaseSlider,\n  BaseSlider: BabylonjsGuiBaseSlider,\n  scrollBar: BabylonjsGuiScrollBar,\n  ScrollBar: BabylonjsGuiScrollBar,\n  imageScrollBar: BabylonjsGuiImageScrollBar,\n  ImageScrollBar: BabylonjsGuiImageScrollBar,\n  slider: BabylonjsGuiSlider,\n  Slider: BabylonjsGuiSlider,\n  imageBasedSlider: BabylonjsGuiImageBasedSlider,\n  ImageBasedSlider: BabylonjsGuiImageBasedSlider,\n  displayGrid: BabylonjsGuiDisplayGrid,\n  DisplayGrid: BabylonjsGuiDisplayGrid,\n  container3D: BabylonjsGuiContainer3D,\n  Container3D: BabylonjsGuiContainer3D,\n  volumeBasedPanel: BabylonjsGuiVolumeBasedPanel,\n  VolumeBasedPanel: BabylonjsGuiVolumeBasedPanel,\n  cylinderPanel: BabylonjsGuiCylinderPanel,\n  CylinderPanel: BabylonjsGuiCylinderPanel,\n  touchHolographicMenu: BabylonjsGuiTouchHolographicMenu,\n  TouchHolographicMenu: BabylonjsGuiTouchHolographicMenu,\n  touchHolographicButton: BabylonjsGuiTouchHolographicButton,\n  TouchHolographicButton: BabylonjsGuiTouchHolographicButton,\n  handMenu: BabylonjsGuiHandMenu,\n  HandMenu: BabylonjsGuiHandMenu,\n  nearMenu: BabylonjsGuiNearMenu,\n  NearMenu: BabylonjsGuiNearMenu,\n  planePanel: BabylonjsGuiPlanePanel,\n  PlanePanel: BabylonjsGuiPlanePanel,\n  scatterPanel: BabylonjsGuiScatterPanel,\n  ScatterPanel: BabylonjsGuiScatterPanel,\n  spherePanel: BabylonjsGuiSpherePanel,\n  SpherePanel: BabylonjsGuiSpherePanel,\n  stackPanel3D: BabylonjsGuiStackPanel3D,\n  StackPanel3D: BabylonjsGuiStackPanel3D,\n  contentDisplay3D: BabylonjsGuiContentDisplay3D,\n  ContentDisplay3D: BabylonjsGuiContentDisplay3D,\n  abstractButton3D: BabylonjsGuiAbstractButton3D,\n  AbstractButton3D: BabylonjsGuiAbstractButton3D,\n  button3D: BabylonjsGuiButton3D,\n  Button3D: BabylonjsGuiButton3D,\n  touchButton3D: BabylonjsGuiTouchButton3D,\n  TouchButton3D: BabylonjsGuiTouchButton3D,\n  touchMeshButton3D: BabylonjsGuiTouchMeshButton3D,\n  TouchMeshButton3D: BabylonjsGuiTouchMeshButton3D,\n  holographicButton: BabylonjsGuiHolographicButton,\n  HolographicButton: BabylonjsGuiHolographicButton,\n  meshButton3D: BabylonjsGuiMeshButton3D,\n  MeshButton3D: BabylonjsGuiMeshButton3D,\n  holographicSlate: BabylonjsGuiHolographicSlate,\n  HolographicSlate: BabylonjsGuiHolographicSlate,\n  holographicBackplate: BabylonjsGuiHolographicBackplate,\n  HolographicBackplate: BabylonjsGuiHolographicBackplate,\n  slider3D: BabylonjsGuiSlider3D,\n  Slider3D: BabylonjsGuiSlider3D,\n  glowLayer: BabylonjsCoreGlowLayer,\n  GlowLayer: BabylonjsCoreGlowLayer,\n  highlightLayer: BabylonjsCoreHighlightLayer,\n  HighlightLayer: BabylonjsCoreHighlightLayer,\n  cubeTexture: BabylonjsCoreCubeTexture,\n  CubeTexture: BabylonjsCoreCubeTexture,\n  rawCubeTexture: BabylonjsCoreRawCubeTexture,\n  RawCubeTexture: BabylonjsCoreRawCubeTexture,\n  videoTexture: BabylonjsCoreVideoTexture,\n  VideoTexture: BabylonjsCoreVideoTexture,\n  proceduralTexture: BabylonjsCoreProceduralTexture,\n  ProceduralTexture: BabylonjsCoreProceduralTexture,\n  customProceduralTexture: BabylonjsCoreCustomProceduralTexture,\n  CustomProceduralTexture: BabylonjsCoreCustomProceduralTexture,\n  noiseProceduralTexture: BabylonjsCoreNoiseProceduralTexture,\n  NoiseProceduralTexture: BabylonjsCoreNoiseProceduralTexture,\n  rawTexture2DArray: BabylonjsCoreRawTexture2DArray,\n  RawTexture2DArray: BabylonjsCoreRawTexture2DArray,\n  mirrorTexture: BabylonjsCoreMirrorTexture,\n  MirrorTexture: BabylonjsCoreMirrorTexture,\n  multiRenderTarget: BabylonjsCoreMultiRenderTarget,\n  MultiRenderTarget: BabylonjsCoreMultiRenderTarget,\n  prePassRenderTarget: BabylonjsCorePrePassRenderTarget,\n  PrePassRenderTarget: BabylonjsCorePrePassRenderTarget,\n  imageProcessingPostProcess: BabylonjsCoreImageProcessingPostProcess,\n  ImageProcessingPostProcess: BabylonjsCoreImageProcessingPostProcess,\n  refractionTexture: BabylonjsCoreRefractionTexture,\n  RefractionTexture: BabylonjsCoreRefractionTexture,\n  xrSpaceWarpRenderTarget: BabylonjsCoreXRSpaceWarpRenderTarget,\n  XRSpaceWarpRenderTarget: BabylonjsCoreXRSpaceWarpRenderTarget,\n  multiviewRenderTarget: BabylonjsCoreMultiviewRenderTarget,\n  MultiviewRenderTarget: BabylonjsCoreMultiviewRenderTarget,\n  dynamicTexture: BabylonjsCoreDynamicTexture,\n  DynamicTexture: BabylonjsCoreDynamicTexture,\n  rawTexture3D: BabylonjsCoreRawTexture3D,\n  RawTexture3D: BabylonjsCoreRawTexture3D,\n  colorGradingTexture: BabylonjsCoreColorGradingTexture,\n  ColorGradingTexture: BabylonjsCoreColorGradingTexture,\n  equiRectangularCubeTexture: BabylonjsCoreEquiRectangularCubeTexture,\n  EquiRectangularCubeTexture: BabylonjsCoreEquiRectangularCubeTexture,\n  hdrCubeTexture: BabylonjsCoreHDRCubeTexture,\n  HDRCubeTexture: BabylonjsCoreHDRCubeTexture,\n  htmlElementTexture: BabylonjsCoreHtmlElementTexture,\n  HtmlElementTexture: BabylonjsCoreHtmlElementTexture,\n  thinRenderTargetTexture: BabylonjsCoreThinRenderTargetTexture,\n  ThinRenderTargetTexture: BabylonjsCoreThinRenderTargetTexture,\n  defaultRenderingPipeline: BabylonjsCoreDefaultRenderingPipeline,\n  DefaultRenderingPipeline: BabylonjsCoreDefaultRenderingPipeline,\n  chromaticAberrationPostProcess: BabylonjsCoreChromaticAberrationPostProcess,\n  ChromaticAberrationPostProcess: BabylonjsCoreChromaticAberrationPostProcess,\n  fxaaPostProcess: BabylonjsCoreFxaaPostProcess,\n  FxaaPostProcess: BabylonjsCoreFxaaPostProcess,\n  grainPostProcess: BabylonjsCoreGrainPostProcess,\n  GrainPostProcess: BabylonjsCoreGrainPostProcess,\n  sharpenPostProcess: BabylonjsCoreSharpenPostProcess,\n  SharpenPostProcess: BabylonjsCoreSharpenPostProcess,\n  lensRenderingPipeline: BabylonjsCoreLensRenderingPipeline,\n  LensRenderingPipeline: BabylonjsCoreLensRenderingPipeline,\n  ssao2RenderingPipeline: BabylonjsCoreSSAO2RenderingPipeline,\n  SSAO2RenderingPipeline: BabylonjsCoreSSAO2RenderingPipeline,\n  ssaoRenderingPipeline: BabylonjsCoreSSAORenderingPipeline,\n  SSAORenderingPipeline: BabylonjsCoreSSAORenderingPipeline,\n  standardRenderingPipeline: BabylonjsCoreStandardRenderingPipeline,\n  StandardRenderingPipeline: BabylonjsCoreStandardRenderingPipeline,\n  screenSpaceReflectionPostProcess: BabylonjsCoreScreenSpaceReflectionPostProcess,\n  ScreenSpaceReflectionPostProcess: BabylonjsCoreScreenSpaceReflectionPostProcess,\n  blurPostProcess: BabylonjsCoreBlurPostProcess,\n  BlurPostProcess: BabylonjsCoreBlurPostProcess,\n  ssrRenderingPipeline: BabylonjsCoreSSRRenderingPipeline,\n  SSRRenderingPipeline: BabylonjsCoreSSRRenderingPipeline,\n  anaglyphPostProcess: BabylonjsCoreAnaglyphPostProcess,\n  AnaglyphPostProcess: BabylonjsCoreAnaglyphPostProcess,\n  blackAndWhitePostProcess: BabylonjsCoreBlackAndWhitePostProcess,\n  BlackAndWhitePostProcess: BabylonjsCoreBlackAndWhitePostProcess,\n  extractHighlightsPostProcess: BabylonjsCoreExtractHighlightsPostProcess,\n  ExtractHighlightsPostProcess: BabylonjsCoreExtractHighlightsPostProcess,\n  bloomMergePostProcess: BabylonjsCoreBloomMergePostProcess,\n  BloomMergePostProcess: BabylonjsCoreBloomMergePostProcess,\n  depthOfFieldBlurPostProcess: BabylonjsCoreDepthOfFieldBlurPostProcess,\n  DepthOfFieldBlurPostProcess: BabylonjsCoreDepthOfFieldBlurPostProcess,\n  circleOfConfusionPostProcess: BabylonjsCoreCircleOfConfusionPostProcess,\n  CircleOfConfusionPostProcess: BabylonjsCoreCircleOfConfusionPostProcess,\n  colorCorrectionPostProcess: BabylonjsCoreColorCorrectionPostProcess,\n  ColorCorrectionPostProcess: BabylonjsCoreColorCorrectionPostProcess,\n  convolutionPostProcess: BabylonjsCoreConvolutionPostProcess,\n  ConvolutionPostProcess: BabylonjsCoreConvolutionPostProcess,\n  depthOfFieldMergePostProcess: BabylonjsCoreDepthOfFieldMergePostProcess,\n  DepthOfFieldMergePostProcess: BabylonjsCoreDepthOfFieldMergePostProcess,\n  displayPassPostProcess: BabylonjsCoreDisplayPassPostProcess,\n  DisplayPassPostProcess: BabylonjsCoreDisplayPassPostProcess,\n  filterPostProcess: BabylonjsCoreFilterPostProcess,\n  FilterPostProcess: BabylonjsCoreFilterPostProcess,\n  highlightsPostProcess: BabylonjsCoreHighlightsPostProcess,\n  HighlightsPostProcess: BabylonjsCoreHighlightsPostProcess,\n  motionBlurPostProcess: BabylonjsCoreMotionBlurPostProcess,\n  MotionBlurPostProcess: BabylonjsCoreMotionBlurPostProcess,\n  passPostProcess: BabylonjsCorePassPostProcess,\n  PassPostProcess: BabylonjsCorePassPostProcess,\n  passCubePostProcess: BabylonjsCorePassCubePostProcess,\n  PassCubePostProcess: BabylonjsCorePassCubePostProcess,\n  refractionPostProcess: BabylonjsCoreRefractionPostProcess,\n  RefractionPostProcess: BabylonjsCoreRefractionPostProcess,\n  stereoscopicInterlacePostProcessI: BabylonjsCoreStereoscopicInterlacePostProcessI,\n  StereoscopicInterlacePostProcessI: BabylonjsCoreStereoscopicInterlacePostProcessI,\n  stereoscopicInterlacePostProcess: BabylonjsCoreStereoscopicInterlacePostProcess,\n  StereoscopicInterlacePostProcess: BabylonjsCoreStereoscopicInterlacePostProcess,\n  volumetricLightScatteringPostProcess: BabylonjsCoreVolumetricLightScatteringPostProcess,\n  VolumetricLightScatteringPostProcess: BabylonjsCoreVolumetricLightScatteringPostProcess,\n  vrDistortionCorrectionPostProcess: BabylonjsCoreVRDistortionCorrectionPostProcess,\n  VRDistortionCorrectionPostProcess: BabylonjsCoreVRDistortionCorrectionPostProcess,\n  vrMultiviewToSingleviewPostProcess: BabylonjsCoreVRMultiviewToSingleviewPostProcess,\n  VRMultiviewToSingleviewPostProcess: BabylonjsCoreVRMultiviewToSingleviewPostProcess,\n  screenSpaceCurvaturePostProcess: BabylonjsCoreScreenSpaceCurvaturePostProcess,\n  ScreenSpaceCurvaturePostProcess: BabylonjsCoreScreenSpaceCurvaturePostProcess,\n  subSurfaceScatteringPostProcess: BabylonjsCoreSubSurfaceScatteringPostProcess,\n  SubSurfaceScatteringPostProcess: BabylonjsCoreSubSurfaceScatteringPostProcess,\n  planeDragGizmo: BabylonjsCorePlaneDragGizmo,\n  PlaneDragGizmo: BabylonjsCorePlaneDragGizmo,\n  positionGizmo: BabylonjsCorePositionGizmo,\n  PositionGizmo: BabylonjsCorePositionGizmo,\n  planeRotationGizmo: BabylonjsCorePlaneRotationGizmo,\n  PlaneRotationGizmo: BabylonjsCorePlaneRotationGizmo,\n  rotationGizmo: BabylonjsCoreRotationGizmo,\n  RotationGizmo: BabylonjsCoreRotationGizmo,\n  axisScaleGizmo: BabylonjsCoreAxisScaleGizmo,\n  AxisScaleGizmo: BabylonjsCoreAxisScaleGizmo,\n  scaleGizmo: BabylonjsCoreScaleGizmo,\n  ScaleGizmo: BabylonjsCoreScaleGizmo,\n  boundingBoxGizmo: BabylonjsCoreBoundingBoxGizmo,\n  BoundingBoxGizmo: BabylonjsCoreBoundingBoxGizmo,\n  axisDragGizmo: BabylonjsCoreAxisDragGizmo,\n  AxisDragGizmo: BabylonjsCoreAxisDragGizmo,\n  lightGizmo: BabylonjsCoreLightGizmo,\n  LightGizmo: BabylonjsCoreLightGizmo,\n  cameraGizmo: BabylonjsCoreCameraGizmo,\n  CameraGizmo: BabylonjsCoreCameraGizmo,\n  slateGizmo: BabylonjsGuiSlateGizmo,\n  SlateGizmo: BabylonjsGuiSlateGizmo,\n  pbrClearCoatConfiguration: BabylonjsCorePBRClearCoatConfiguration,\n  PBRClearCoatConfiguration: BabylonjsCorePBRClearCoatConfiguration,\n  pbrIridescenceConfiguration: BabylonjsCorePBRIridescenceConfiguration,\n  PBRIridescenceConfiguration: BabylonjsCorePBRIridescenceConfiguration,\n  pbrAnisotropicConfiguration: BabylonjsCorePBRAnisotropicConfiguration,\n  PBRAnisotropicConfiguration: BabylonjsCorePBRAnisotropicConfiguration,\n  pbrbrdfConfiguration: BabylonjsCorePBRBRDFConfiguration,\n  PBRBRDFConfiguration: BabylonjsCorePBRBRDFConfiguration,\n  pbrSheenConfiguration: BabylonjsCorePBRSheenConfiguration,\n  PBRSheenConfiguration: BabylonjsCorePBRSheenConfiguration,\n  pbrSubSurfaceConfiguration: BabylonjsCorePBRSubSurfaceConfiguration,\n  PBRSubSurfaceConfiguration: BabylonjsCorePBRSubSurfaceConfiguration,\n  prePassConfiguration: BabylonjsCorePrePassConfiguration,\n  PrePassConfiguration: BabylonjsCorePrePassConfiguration,\n  detailMapConfiguration: BabylonjsCoreDetailMapConfiguration,\n  DetailMapConfiguration: BabylonjsCoreDetailMapConfiguration,\n}\nexport const intrinsicClassMap: object = {\n  abstractScene: 'AbstractScene',\n  scene: 'Scene',\n  dynamicTerrain: 'DynamicTerrain',\n  camera: 'Camera',\n  gizmo: 'Gizmo',\n  gizmoManager: 'GizmoManager',\n  environmentHelper: 'EnvironmentHelper',\n  effectLayer: 'EffectLayer',\n  layer: 'Layer',\n  light: 'Light',\n  material: 'Material',\n  materialPluginBase: 'MaterialPluginBase',\n  viewport: 'Viewport',\n  abstractMesh: 'AbstractMesh',\n  mesh: 'Mesh',\n  transformNode: 'TransformNode',\n  pointsCloudSystem: 'PointsCloudSystem',\n  postProcess: 'PostProcess',\n  tonemapPostProcess: 'TonemapPostProcess',\n  utilityLayerRenderer: 'UtilityLayerRenderer',\n  advancedDynamicTexture: 'AdvancedDynamicTexture',\n  gui3DManager: 'GUI3DManager',\n  autoRotationBehavior: 'AutoRotationBehavior',\n  bouncingBehavior: 'BouncingBehavior',\n  framingBehavior: 'FramingBehavior',\n  attachToBoxBehavior: 'AttachToBoxBehavior',\n  baseSixDofDragBehavior: 'BaseSixDofDragBehavior',\n  fadeInOutBehavior: 'FadeInOutBehavior',\n  followBehavior: 'FollowBehavior',\n  handConstraintBehavior: 'HandConstraintBehavior',\n  multiPointerScaleBehavior: 'MultiPointerScaleBehavior',\n  pointerDragBehavior: 'PointerDragBehavior',\n  sixDofDragBehavior: 'SixDofDragBehavior',\n  surfaceMagnetismBehavior: 'SurfaceMagnetismBehavior',\n  vrExperienceHelper: 'VRExperienceHelper',\n  engineView: 'EngineView',\n  cascadedShadowGenerator: 'CascadedShadowGenerator',\n  shadowGenerator: 'ShadowGenerator',\n  thinTexture: 'ThinTexture',\n  greasedLineBaseMesh: 'GreasedLineBaseMesh',\n  physicsImpostor: 'PhysicsImpostor',\n  physicsAggregate: 'PhysicsAggregate',\n  postProcessRenderPipeline: 'PostProcessRenderPipeline',\n  control: 'Control',\n  textBlock: 'TextBlock',\n  defaultBehavior: 'DefaultBehavior',\n  control3D: 'Control3D',\n  node: 'Node',\n  instancedMesh: 'InstancedMesh',\n  instancedLinesMesh: 'InstancedLinesMesh',\n  linesMesh: 'LinesMesh',\n  goldbergMesh: 'GoldbergMesh',\n  groundMesh: 'GroundMesh',\n  trailMesh: 'TrailMesh',\n  greasedLineMesh: 'GreasedLineMesh',\n  greasedLineRibbonMesh: 'GreasedLineRibbonMesh',\n  renderTargetTexture: 'RenderTargetTexture',\n  targetCamera: 'TargetCamera',\n  freeCamera: 'FreeCamera',\n  webXrCamera: 'WebXRCamera',\n  touchCamera: 'TouchCamera',\n  universalCamera: 'UniversalCamera',\n  gamepadCamera: 'GamepadCamera',\n  anaglyphGamepadCamera: 'AnaglyphGamepadCamera',\n  stereoscopicGamepadCamera: 'StereoscopicGamepadCamera',\n  anaglyphUniversalCamera: 'AnaglyphUniversalCamera',\n  stereoscopicUniversalCamera: 'StereoscopicUniversalCamera',\n  stereoscopicScreenUniversalCamera: 'StereoscopicScreenUniversalCamera',\n  deviceOrientationCamera: 'DeviceOrientationCamera',\n  vrDeviceOrientationFreeCamera: 'VRDeviceOrientationFreeCamera',\n  vrDeviceOrientationGamepadCamera: 'VRDeviceOrientationGamepadCamera',\n  anaglyphFreeCamera: 'AnaglyphFreeCamera',\n  stereoscopicFreeCamera: 'StereoscopicFreeCamera',\n  virtualJoysticksCamera: 'VirtualJoysticksCamera',\n  arcRotateCamera: 'ArcRotateCamera',\n  anaglyphArcRotateCamera: 'AnaglyphArcRotateCamera',\n  stereoscopicArcRotateCamera: 'StereoscopicArcRotateCamera',\n  vrDeviceOrientationArcRotateCamera: 'VRDeviceOrientationArcRotateCamera',\n  flyCamera: 'FlyCamera',\n  followCamera: 'FollowCamera',\n  arcFollowCamera: 'ArcFollowCamera',\n  meshBuilder: 'MeshBuilder',\n  pushMaterial: 'PushMaterial',\n  nodeMaterial: 'NodeMaterial',\n  imageProcessingConfiguration: 'ImageProcessingConfiguration',\n  shaderMaterial: 'ShaderMaterial',\n  baseTexture: 'BaseTexture',\n  occlusionMaterial: 'OcclusionMaterial',\n  greasedLineSimpleMaterial: 'GreasedLineSimpleMaterial',\n  rawTexture: 'RawTexture',\n  handleMaterial: 'HandleMaterial',\n  pbrBaseMaterial: 'PBRBaseMaterial',\n  pbrBaseSimpleMaterial: 'PBRBaseSimpleMaterial',\n  pbrMetallicRoughnessMaterial: 'PBRMetallicRoughnessMaterial',\n  pbrSpecularGlossinessMaterial: 'PBRSpecularGlossinessMaterial',\n  pbrMaterial: 'PBRMaterial',\n  standardMaterial: 'StandardMaterial',\n  backgroundMaterial: 'BackgroundMaterial',\n  shadowLight: 'ShadowLight',\n  fluentMaterial: 'FluentMaterial',\n  fluentButtonMaterial: 'FluentButtonMaterial',\n  fluentBackplateMaterial: 'FluentBackplateMaterial',\n  mrdlSliderBarMaterial: 'MRDLSliderBarMaterial',\n  texture: 'Texture',\n  mrdlSliderThumbMaterial: 'MRDLSliderThumbMaterial',\n  mrdlBackplateMaterial: 'MRDLBackplateMaterial',\n  mrdlBackglowMaterial: 'MRDLBackglowMaterial',\n  mrdlFrontplateMaterial: 'MRDLFrontplateMaterial',\n  mrdlInnerquadMaterial: 'MRDLInnerquadMaterial',\n  multiMaterial: 'MultiMaterial',\n  directionalLight: 'DirectionalLight',\n  pointLight: 'PointLight',\n  spotLight: 'SpotLight',\n  hemisphericLight: 'HemisphericLight',\n  container: 'Container',\n  rectangle: 'Rectangle',\n  'babylon-button': 'Button',\n  focusableButton: 'FocusableButton',\n  selectionPanel: 'SelectionPanel',\n  scrollViewer: 'ScrollViewer',\n  'babylon-image': 'Image',\n  toggleButton: 'ToggleButton',\n  stackPanel: 'StackPanel',\n  virtualKeyboard: 'VirtualKeyboard',\n  'babylon-ellipse': 'Ellipse',\n  grid: 'Grid',\n  scrollViewerWindow: '_ScrollViewerWindow',\n  checkbox: 'Checkbox',\n  colorPicker: 'ColorPicker',\n  inputText: 'InputText',\n  inputTextArea: 'InputTextArea',\n  inputPassword: 'InputPassword',\n  'babylon-line': 'Line',\n  multiLine: 'MultiLine',\n  radioButton: 'RadioButton',\n  baseSlider: 'BaseSlider',\n  scrollBar: 'ScrollBar',\n  imageScrollBar: 'ImageScrollBar',\n  slider: 'Slider',\n  imageBasedSlider: 'ImageBasedSlider',\n  displayGrid: 'DisplayGrid',\n  container3D: 'Container3D',\n  volumeBasedPanel: 'VolumeBasedPanel',\n  cylinderPanel: 'CylinderPanel',\n  touchHolographicMenu: 'TouchHolographicMenu',\n  touchHolographicButton: 'TouchHolographicButton',\n  handMenu: 'HandMenu',\n  nearMenu: 'NearMenu',\n  planePanel: 'PlanePanel',\n  scatterPanel: 'ScatterPanel',\n  spherePanel: 'SpherePanel',\n  stackPanel3D: 'StackPanel3D',\n  contentDisplay3D: 'ContentDisplay3D',\n  abstractButton3D: 'AbstractButton3D',\n  button3D: 'Button3D',\n  touchButton3D: 'TouchButton3D',\n  touchMeshButton3D: 'TouchMeshButton3D',\n  holographicButton: 'HolographicButton',\n  meshButton3D: 'MeshButton3D',\n  holographicSlate: 'HolographicSlate',\n  holographicBackplate: 'HolographicBackplate',\n  slider3D: 'Slider3D',\n  glowLayer: 'GlowLayer',\n  highlightLayer: 'HighlightLayer',\n  cubeTexture: 'CubeTexture',\n  rawCubeTexture: 'RawCubeTexture',\n  videoTexture: 'VideoTexture',\n  proceduralTexture: 'ProceduralTexture',\n  customProceduralTexture: 'CustomProceduralTexture',\n  noiseProceduralTexture: 'NoiseProceduralTexture',\n  rawTexture2DArray: 'RawTexture2DArray',\n  mirrorTexture: 'MirrorTexture',\n  multiRenderTarget: 'MultiRenderTarget',\n  prePassRenderTarget: 'PrePassRenderTarget',\n  imageProcessingPostProcess: 'ImageProcessingPostProcess',\n  refractionTexture: 'RefractionTexture',\n  xrSpaceWarpRenderTarget: 'XRSpaceWarpRenderTarget',\n  multiviewRenderTarget: 'MultiviewRenderTarget',\n  dynamicTexture: 'DynamicTexture',\n  rawTexture3D: 'RawTexture3D',\n  colorGradingTexture: 'ColorGradingTexture',\n  equiRectangularCubeTexture: 'EquiRectangularCubeTexture',\n  hdrCubeTexture: 'HDRCubeTexture',\n  htmlElementTexture: 'HtmlElementTexture',\n  thinRenderTargetTexture: 'ThinRenderTargetTexture',\n  defaultRenderingPipeline: 'DefaultRenderingPipeline',\n  chromaticAberrationPostProcess: 'ChromaticAberrationPostProcess',\n  fxaaPostProcess: 'FxaaPostProcess',\n  grainPostProcess: 'GrainPostProcess',\n  sharpenPostProcess: 'SharpenPostProcess',\n  lensRenderingPipeline: 'LensRenderingPipeline',\n  ssao2RenderingPipeline: 'SSAO2RenderingPipeline',\n  ssaoRenderingPipeline: 'SSAORenderingPipeline',\n  standardRenderingPipeline: 'StandardRenderingPipeline',\n  screenSpaceReflectionPostProcess: 'ScreenSpaceReflectionPostProcess',\n  blurPostProcess: 'BlurPostProcess',\n  ssrRenderingPipeline: 'SSRRenderingPipeline',\n  anaglyphPostProcess: 'AnaglyphPostProcess',\n  blackAndWhitePostProcess: 'BlackAndWhitePostProcess',\n  extractHighlightsPostProcess: 'ExtractHighlightsPostProcess',\n  bloomMergePostProcess: 'BloomMergePostProcess',\n  depthOfFieldBlurPostProcess: 'DepthOfFieldBlurPostProcess',\n  circleOfConfusionPostProcess: 'CircleOfConfusionPostProcess',\n  colorCorrectionPostProcess: 'ColorCorrectionPostProcess',\n  convolutionPostProcess: 'ConvolutionPostProcess',\n  depthOfFieldMergePostProcess: 'DepthOfFieldMergePostProcess',\n  displayPassPostProcess: 'DisplayPassPostProcess',\n  filterPostProcess: 'FilterPostProcess',\n  highlightsPostProcess: 'HighlightsPostProcess',\n  motionBlurPostProcess: 'MotionBlurPostProcess',\n  passPostProcess: 'PassPostProcess',\n  passCubePostProcess: 'PassCubePostProcess',\n  refractionPostProcess: 'RefractionPostProcess',\n  stereoscopicInterlacePostProcessI: 'StereoscopicInterlacePostProcessI',\n  stereoscopicInterlacePostProcess: 'StereoscopicInterlacePostProcess',\n  volumetricLightScatteringPostProcess: 'VolumetricLightScatteringPostProcess',\n  vrDistortionCorrectionPostProcess: 'VRDistortionCorrectionPostProcess',\n  vrMultiviewToSingleviewPostProcess: 'VRMultiviewToSingleviewPostProcess',\n  screenSpaceCurvaturePostProcess: 'ScreenSpaceCurvaturePostProcess',\n  subSurfaceScatteringPostProcess: 'SubSurfaceScatteringPostProcess',\n  planeDragGizmo: 'PlaneDragGizmo',\n  positionGizmo: 'PositionGizmo',\n  planeRotationGizmo: 'PlaneRotationGizmo',\n  rotationGizmo: 'RotationGizmo',\n  axisScaleGizmo: 'AxisScaleGizmo',\n  scaleGizmo: 'ScaleGizmo',\n  boundingBoxGizmo: 'BoundingBoxGizmo',\n  axisDragGizmo: 'AxisDragGizmo',\n  lightGizmo: 'LightGizmo',\n  cameraGizmo: 'CameraGizmo',\n  slateGizmo: 'SlateGizmo',\n  pbrClearCoatConfiguration: 'PBRClearCoatConfiguration',\n  pbrIridescenceConfiguration: 'PBRIridescenceConfiguration',\n  pbrAnisotropicConfiguration: 'PBRAnisotropicConfiguration',\n  pbrbrdfConfiguration: 'PBRBRDFConfiguration',\n  pbrSheenConfiguration: 'PBRSheenConfiguration',\n  pbrSubSurfaceConfiguration: 'PBRSubSurfaceConfiguration',\n  prePassConfiguration: 'PrePassConfiguration',\n  detailMapConfiguration: 'DetailMapConfiguration',\n  adtForMesh: 'ADTForMesh',\n  adtForMeshTexture: 'ADTForMeshTexture',\n  adtFullscreenUi: 'ADTFullscreenUI',\n  box: 'Box',\n  capsule: 'Capsule',\n  cylinder: 'Cylinder',\n  dashedLines: 'DashedLines',\n  decal: 'Decal',\n  disc: 'Disc',\n  extrudePolygon: 'ExtrudePolygon',\n  extrudeShape: 'ExtrudeShape',\n  extrudeShapeCustom: 'ExtrudeShapeCustom',\n  geodesic: 'Geodesic',\n  goldberg: 'Goldberg',\n  ground: 'Ground',\n  groundFromHeightMap: 'GroundFromHeightMap',\n  icoSphere: 'IcoSphere',\n  lathe: 'Lathe',\n  lines: 'Lines',\n  lineSystem: 'LineSystem',\n  plane: 'Plane',\n  'babylon-polygon': 'Polygon',\n  polyhedron: 'Polyhedron',\n  ribbon: 'Ribbon',\n  sphere: 'Sphere',\n  'babylon-text': 'Text',\n  tiledBox: 'TiledBox',\n  tiledGround: 'TiledGround',\n  tiledPlane: 'TiledPlane',\n  torus: 'Torus',\n  torusKnot: 'TorusKnot',\n  tube: 'Tube',\n}\n\nexport function babylonClassFactory(importAlias: string): any {\n  return (classesMap as any)[importAlias]\n}\n","import { AnimationGroup } from '@babylonjs/core/Animations/animationGroup.js'\nimport { Skeleton } from '@babylonjs/core/Bones/skeleton.js'\nimport { BoundingInfo } from '@babylonjs/core/Culling/boundingInfo.js'\nimport { Vector3 } from '@babylonjs/core/Maths/math.vector.js'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { IParticleSystem } from '@babylonjs/core/Particles/IParticleSystem.js'\nimport { Nullable } from '@babylonjs/core/types.js'\n\nexport enum LoaderStatus {\n  Loading = 'Loading',\n  Loaded = 'Loaded',\n  Error = 'Error',\n}\n\nexport interface ILoadedModel {\n  /**\n   * LoaderStatus reports if the load succeeded or not.\n   */\n  status: LoaderStatus\n  /**\n   * Mesh created when successfully loaded and all non-parented meshes are parented to this mesh\n   */\n  rootMesh?: AbstractMesh\n  /**\n   * Error message when loader fails.\n   */\n  errorMessage?: string\n  /**\n   * Name of loader used - either as explicitly specified or inferred from extension\n   */\n  loaderName?: string\n\n  meshes?: AbstractMesh[]\n  particleSystems?: IParticleSystem[]\n  skeletons?: Skeleton[]\n  animationGroups?: AnimationGroup[]\n\n  readonly boundingInfo: Nullable<BoundingInfo>\n  readonly scaledToDimension: number | undefined\n\n  scaleTo(maxDimension: number): void\n  dispose(): void\n}\n\nexport class LoadedModel implements ILoadedModel {\n  public status: LoaderStatus = LoaderStatus.Loading\n  public rootMesh?: AbstractMesh\n  public errorMessage?: string\n  public loaderName?: string\n  public meshes?: AbstractMesh[]\n  public particleSystems?: IParticleSystem[]\n  public skeletons?: Skeleton[]\n  public animationGroups?: AnimationGroup[]\n  private _scaledToDimension?: number\n\n  public get scaledToDimension(): number | undefined {\n    return this._scaledToDimension\n  }\n\n  public get boundingInfo(): Nullable<BoundingInfo> {\n    if (!this.rootMesh) {\n      return null\n    }\n\n    // meshes are already parented to root mesh, so we do not need to look further.\n    let min: Nullable<Vector3> = null\n    let max: Nullable<Vector3> = null\n\n    this.rootMesh.getChildMeshes().forEach((childMesh) => {\n      const { minimumWorld, maximumWorld } = childMesh.getBoundingInfo().boundingBox\n      if (min === null) {\n        min = minimumWorld\n      } else {\n        min = Vector3.Minimize(min, minimumWorld)\n      }\n\n      if (max === null) {\n        max = maximumWorld\n      } else {\n        max = Vector3.Maximize(max, maximumWorld)\n      }\n    })\n\n    if (min !== null && max != null) {\n      return new BoundingInfo(min, max)\n    }\n\n    return null\n  }\n\n  public scaleTo(maxDimension: number): void {\n    const boundingInfo = this.boundingInfo // will be null when no meshes are loaded\n    if (boundingInfo && this.rootMesh) {\n      const longestDimension = Math.max(\n        Math.abs(boundingInfo.minimum.x - boundingInfo.maximum.x),\n        Math.abs(boundingInfo.minimum.y - boundingInfo.maximum.y),\n        Math.abs(boundingInfo.minimum.z - boundingInfo.maximum.z)\n      )\n\n      const dimension = maxDimension / longestDimension\n      this.rootMesh.scaling.scaleInPlace(dimension)\n      this._scaledToDimension = maxDimension\n    }\n  }\n\n  /**\n   * Clean up all resources.\n   */\n  public dispose(): void {\n    if (this.rootMesh) {\n      this.rootMesh.dispose(false, true)\n      this.rootMesh = undefined\n      this.meshes = []\n    }\n\n    if (this.particleSystems) {\n      this.particleSystems.forEach((ps) => {\n        // ps.stop();\n        ps.dispose()\n      })\n      this.particleSystems = []\n    }\n\n    if (this.skeletons) {\n      this.skeletons.forEach((skeleton) => skeleton.dispose())\n      this.skeletons = []\n    }\n\n    if (this.animationGroups) {\n      this.animationGroups.forEach((animationGroup) => animationGroup.dispose())\n      this.animationGroups = []\n    }\n  }\n}\n","import { Quaternion, Vector3 } from '@babylonjs/core/Maths/math.vector.js'\nimport { Observable, Observer } from '@babylonjs/core/Misc/observable.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreatedInstance } from './CreatedInstance'\nimport { PropChangeType, PropertyUpdate, PropsHandler } from './PropsHandler'\n\nexport const applyUpdateToInstance = (\n  createdInstance: CreatedInstance<any>,\n  update: PropertyUpdate\n): void => {\n  const target =\n    update.target !== undefined\n      ? createdInstance.hostInstance[update.target]\n      : createdInstance.hostInstance\n\n  switch (update.changeType) {\n    case PropChangeType.Primitive:\n    case PropChangeType.FresnelParameters:\n    case PropChangeType.LambdaExpression:\n    case PropChangeType.Texture:\n      // console.log(` > ${type}: updating ${update.changeType} on ${update.propertyName} to ${update.value}`)\n      if (update.propertyName.indexOf('.') !== -1) {\n        const dotProps: string[] = update.propertyName.split('.')\n        const lastProp = dotProps.pop()!\n        const newTarget = dotProps.reduce((target, prop) => target[prop], target)\n        newTarget[lastProp] = update.value\n      } else {\n        target[update.propertyName] = update.value\n      }\n      break\n    case PropChangeType.Vector3:\n      if (target[update.propertyName] && update.isSetAccessor === false) {\n        ;(target[update.propertyName] as Vector3).copyFrom(update.value)\n      } else if (update.value) {\n        target[update.propertyName] = update.value.clone()\n      } else {\n        target[update.propertyName] = update.value // ie: undefined/null?\n      }\n      break\n    case PropChangeType.Color3:\n    case PropChangeType.Color4:\n      if (update.value) {\n        target[update.propertyName] = update.value.clone()\n      } else {\n        target[update.propertyName] = update.value\n      }\n      break\n    case PropChangeType.Control:\n      target[update.propertyName] = update.value\n      break\n    case PropChangeType.NumericArray:\n      target[update.propertyName] = update.value\n      break\n    case PropChangeType.Observable:\n      // adding and remove observer can cause an infinite loop without something like  setTimeout(() => ..., 1);\n      // ie: clicking a button causes a re-render, which causes the callback to change (inline method)...\n      if (update.propertyName in createdInstance.observers) {\n        createdInstance.observers[update.propertyName]!.callback = update.value\n      } else {\n        const observer: Nullable<Observer<any>> = (\n          target[update.propertyName] as Observable<any>\n        ).add(update.value)\n        createdInstance.observers[update.propertyName] = observer\n      }\n      break\n    case PropChangeType.Method:\n      if (typeof target[update.propertyName] === 'function') {\n        if (Array.isArray(update.value)) {\n          target[update.propertyName](...update.value)\n        } else if (Object(update.value) !== update.value) {\n          // primitive, undefined & null.  Comparison is 7x slower than instanceof check,\n          // TODO: should be: update.value === undefined || typeof(update.value) === 'number' || ...\n          target[update.propertyName](update.value)\n        } else {\n          // TODO: there is a bug here in that setTarget={new Vector3(0, 1, 0)} will throw an exception...\n          console.error(\n            \"need to make sure this isn't something like a Vector3 before destructuring\"\n          )\n          target[update.propertyName](...Object.values(update.value))\n        }\n      } else {\n        console.error(`Cannot call [not a function] ${update.propertyName}(...) on:`, target)\n      }\n      break\n    case PropChangeType.Quaternion:\n      // console.warn(`quaternion update detected ${update.propertyName} to:`, update.value)\n      if (target[update.propertyName] && update.isSetAccessor === false) {\n        ;(target[update.propertyName] as Quaternion).copyFrom(update.value)\n      } else if (update.value) {\n        target[update.propertyName] = (update.value as Quaternion).clone()\n      } else {\n        target[update.propertyName] = update.value // ie: undefined/null?\n      }\n      break\n    default:\n      console.error(`Unhandled property update of type '${update.changeType}'`)\n      break\n  }\n}\n\n/**\n * Only applied in this way immediately after instantiation (not on deltas)\n *\n * @param instance\n * @param props\n */\nexport const applyInitialPropsToCreatedInstance = (\n  createdInstance: CreatedInstance<any>,\n  props: any\n) => {\n  if (createdInstance.propsHandlers === undefined) {\n    return\n  }\n\n  const initPayload: PropertyUpdate[] = []\n  createdInstance.propsHandlers.getPropsHandlers().forEach((propHandler: PropsHandler<any>) => {\n    // NOTE: this can actually be WRONG, because here we want to compare the props with the object.\n    // This is only needed right after object instantiation.\n    const handlerUpdates: PropertyUpdate[] | null = propHandler.getPropertyUpdates(\n      {}, // Here we will reapply things like 'name', so we could get default props from 'babylonObject'.\n      props\n    )\n    if (handlerUpdates !== null) {\n      initPayload.push(...handlerUpdates)\n    }\n  })\n\n  if (initPayload.length > 0) {\n    initPayload.forEach((update) => {\n      applyUpdateToInstance(createdInstance, update)\n    })\n  }\n}\n","import { AnimationGroup } from '@babylonjs/core/Animations/animationGroup.js'\nimport { Skeleton } from '@babylonjs/core/Bones/skeleton.js'\nimport {\n  ISceneLoaderPlugin,\n  ISceneLoaderPluginAsync,\n  ISceneLoaderProgressEvent,\n  SceneLoader,\n} from '@babylonjs/core/Loading/sceneLoader.js'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { Mesh } from '@babylonjs/core/Meshes/mesh.js'\nimport { IParticleSystem } from '@babylonjs/core/Particles/IParticleSystem.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport React, { useContext, useState } from 'react'\nimport { CreatedInstance } from '../../CreatedInstance'\nimport { FiberMesh } from '../../generatedCode'\nimport { FiberMeshProps } from '../../generatedProps'\nimport { PropertyUpdate, PropsHandler } from '../../PropsHandler'\nimport { applyUpdateToInstance } from '../../UpdateInstance'\nimport { useScene } from '../scene'\nimport { ILoadedModel, LoadedModel, LoaderStatus } from './loadedModel'\n\nexport type SceneLoaderContextType =\n  | {\n      updateProgress: (progress: ISceneLoaderProgressEvent) => void\n      lastProgress?: Nullable<ISceneLoaderProgressEvent>\n    }\n  | undefined\n\nexport const SceneLoaderContext = React.createContext<SceneLoaderContextType>(undefined)\n\nexport type SceneLoaderContextProviderProps = {\n  startProgress?: ISceneLoaderProgressEvent\n  children: React.ReactNode\n}\n\nexport const SceneLoaderContextProvider: React.FC<SceneLoaderContextProviderProps> = (\n  props: SceneLoaderContextProviderProps\n) => {\n  const [progress, setProgress] = useState<Nullable<ISceneLoaderProgressEvent>>(null)\n\n  return (\n    <SceneLoaderContext.Provider value={{ lastProgress: progress, updateProgress: setProgress }}>\n      {props.children}\n    </SceneLoaderContext.Provider>\n  )\n}\n\nexport type SceneLoaderOptions = {\n  /**\n   * An array of mesh names, a single mesh name, or empty string for all meshes that filter what meshes are imported\n   */\n  meshNames?: any\n\n  /**\n   * set that all meshes receive shadows.\n   * Defaults to false.\n   */\n  receiveShadows?: boolean\n\n  /**\n   * Scale entire model within these square bounds\n   * Defaults to no scaling.\n   */\n  scaleToDimension?: number\n\n  /**\n   * Always select root mesh as active.\n   * Defaults to false.\n   */\n  alwaysSelectAsActiveMesh?: boolean\n\n  /**\n   * SceneLoader progress events are set on context provider (when available).\n   * Defaults to false.\n   */\n  reportProgress?: boolean\n\n  /**\n   * Not needed if you are within a SceneContext.\n   */\n  scene?: Scene\n\n  /**\n   * Access to loaded model as soon as it is loaded, so it provides a way to hide or scale the meshes before the first render.\n   */\n  onModelLoaded?: (loadedModel: ILoadedModel) => void\n\n  /**\n   * Raw progress event for SceneLoader\n   */\n  onLoadProgress?: (event: ISceneLoaderProgressEvent) => void\n\n  /**\n   * Called if SceneLoader returns an error.\n   */\n  onModelError?: (model: ILoadedModel) => void\n}\n\n/**\n * A cached version of SceneLoader with a Suspense cache.\n */\nconst useSceneLoaderWithCache = (): ((\n  rootUrl: string,\n  sceneFilename: string,\n  pluginExtension?: string,\n  options?: SceneLoaderOptions,\n  initialProps?: FiberMeshProps\n) => LoadedModel) => {\n  // we need our own memoized cache. useMemo, useState, etc. fail miserably - throwing a promise forces the component to remount.\n  let suspenseCache: Record<string, undefined | (() => LoadedModel)> = {}\n  let suspenseScene: Nullable<Scene> = null\n\n  // let tasksCompletedCache: Record<string, LoadedModel> = {};\n\n  return (\n    rootUrl: string,\n    sceneFilename: string,\n    pluginExtension?: string,\n    options?: SceneLoaderOptions,\n    initialProps?: FiberMeshProps\n  ): LoadedModel => {\n    const opts: SceneLoaderOptions = options || {}\n\n    // we are not in a callback here\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hookScene = useScene()\n\n    if (opts.scene === undefined && hookScene === null) {\n      throw new Error(\n        'useSceneLoader can only be used inside a Scene component (or pass scene as an option)'\n      )\n    }\n\n    const scene: Scene = opts.scene || hookScene!\n\n    if (suspenseScene == null) {\n      suspenseScene = scene\n    } else {\n      if (suspenseScene !== scene) {\n        // console.log('new scene detected - clearing useAssetManager cache');\n        suspenseCache = {}\n        // NOTE: could keep meshes with mesh.serialize and Mesh.Parse\n        // Need to research how to do with textures, etc.\n        // browser cache should make the load fast in most cases\n        // tasksCompletedCache = {};\n        suspenseScene = scene\n      }\n    }\n\n    const suspenseKey = `${rootUrl}/${sceneFilename}`\n    // we are not in a callback here\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const sceneLoaderContext = useContext<SceneLoaderContextType>(SceneLoaderContext)\n\n    const createSceneLoader = (): (() => LoadedModel) => {\n      const taskPromise = new Promise<LoadedModel>((resolve, reject) => {\n        const loadedModel = new LoadedModel()\n\n        loadedModel.status = LoaderStatus.Loading\n\n        const loader: Nullable<ISceneLoaderPlugin | ISceneLoaderPluginAsync> =\n          SceneLoader.ImportMesh(\n            opts.meshNames,\n            rootUrl,\n            sceneFilename,\n            scene,\n            (\n              meshes: AbstractMesh[],\n              particleSystems: IParticleSystem[],\n              skeletons: Skeleton[],\n              animationGroups: AnimationGroup[]\n            ): void => {\n              loadedModel.rootMesh = new AbstractMesh(sceneFilename + '-root-model', scene)\n              if (opts.alwaysSelectAsActiveMesh === true) {\n                loadedModel.rootMesh.alwaysSelectAsActiveMesh = true\n              }\n\n              loadedModel.meshes = []\n              meshes.forEach((mesh) => {\n                loadedModel.meshes!.push(mesh)\n\n                // leave meshes already parented to maintain model hierarchy:\n                if (!mesh.parent) {\n                  mesh.parent = loadedModel.rootMesh!\n                }\n\n                if (opts.receiveShadows === true) {\n                  mesh.receiveShadows = true\n                }\n              })\n              loadedModel.particleSystems = particleSystems\n              loadedModel.skeletons = skeletons\n              loadedModel.animationGroups = animationGroups\n\n              loadedModel.status = LoaderStatus.Loaded\n\n              if (opts.scaleToDimension) {\n                loadedModel.scaleTo(opts.scaleToDimension)\n              }\n\n              if (initialProps) {\n                const initPayload: PropertyUpdate[] = []\n                new FiberMesh().getPropsHandlers().forEach((propHandler: PropsHandler<any>) => {\n                  const handlerUpdates: PropertyUpdate[] | null = propHandler.getPropertyUpdates(\n                    {}, // Here we will reapply things like 'name', so we could get default props from 'babylonObject'.\n                    initialProps\n                  )\n                  if (handlerUpdates !== null) {\n                    initPayload.push(...handlerUpdates)\n                  }\n                })\n\n                if (initPayload.length > 0) {\n                  initPayload.forEach((update) => {\n                    applyUpdateToInstance(\n                      { hostInstance: loadedModel.rootMesh } as CreatedInstance<Mesh>,\n                      update\n                    )\n                  })\n                }\n              }\n\n              if (options?.onModelLoaded) {\n                options.onModelLoaded(loadedModel)\n              }\n\n              const originalDispose = loadedModel.dispose\n              loadedModel.dispose = () => {\n                // console.log('Clearing cache (cannot re-use meshes).');\n                suspenseCache[suspenseKey] = undefined\n                originalDispose.call(loadedModel)\n              }\n\n              resolve(loadedModel)\n            },\n            (event: ISceneLoaderProgressEvent): void => {\n              if (opts.reportProgress === true && sceneLoaderContext !== undefined) {\n                sceneLoaderContext!.updateProgress(event)\n              }\n              if (opts.onLoadProgress) {\n                opts.onLoadProgress(event)\n              }\n            },\n            (_: Scene, message: string, exception?: any): void => {\n              if (opts.onModelError) {\n                opts.onModelError(loadedModel)\n              }\n              reject(exception ?? message)\n            },\n            pluginExtension\n          )\n\n        if (loader) {\n          loadedModel.loaderName = loader.name\n        } else {\n          loadedModel.loaderName = 'no loader found'\n        }\n      })\n\n      let result: LoadedModel\n      let error: Nullable<Error> = null\n      let suspender: Nullable<Promise<void>> = null\n      suspender = (async () => {\n        try {\n          result = await taskPromise\n        } catch (e) {\n          error = e as Error\n        } finally {\n          suspender = null\n        }\n      })()\n\n      const getAssets = () => {\n        if (suspender) {\n          throw suspender\n        }\n        if (error !== null) {\n          throw error\n        }\n\n        return result\n      }\n      return getAssets\n    }\n\n    if (suspenseCache[suspenseKey] === undefined) {\n      suspenseCache[suspenseKey] = createSceneLoader()\n    }\n\n    return suspenseCache[suspenseKey]!()\n  }\n}\n\n// this isn't a hook being called\n// eslint-disable-next-line react-hooks/rules-of-hooks\nexport const useSceneLoader = useSceneLoaderWithCache()\n","import { ISceneLoaderProgressEvent } from '@babylonjs/core/Loading/sceneLoader.js'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport React, { useEffect, forwardRef, ReactNode } from 'react'\nimport { FiberAbstractMeshProps, FiberAbstractMeshPropsCtor } from '../generatedProps'\nimport { ILoadedModel } from '../hooks/loaders/loadedModel'\nimport { SceneLoaderOptions, useSceneLoader } from '../hooks/loaders/useSceneLoader'\n\nexport type ModelProps = {\n  /**\n   * Only used on init.  Will not update dynamically (scaling will update dynamically and override this)\n   * An array of mesh names, a single mesh name, or empty string for all meshes that filter what meshes are imported\n   */\n  meshNames?: any\n  receiveShadows?: boolean\n  rootUrl: string\n  sceneFilename: string\n  pluginExtension?: string\n  alwaysSelectAsActiveMesh?: boolean\n  reportProgress?: boolean\n  scaleToDimension?: number\n  onModelLoaded?: (model: ILoadedModel) => void\n  onModelError?: (model: ILoadedModel) => void\n  onLoadProgress?: (event: ISceneLoaderProgressEvent) => void\n  onCreated?: (rootMesh: AbstractMesh) => void\n} & FiberAbstractMeshProps &\n  FiberAbstractMeshPropsCtor & { children?: ReactNode | undefined }\n\nconst Model = forwardRef<AbstractMesh, ModelProps>((props, ref) => {\n  const {\n    alwaysSelectAsActiveMesh,\n    meshNames,\n    onLoadProgress,\n    onModelError,\n    onModelLoaded,\n    receiveShadows,\n    reportProgress,\n    scaleToDimension, // SceneLoaderOptions\n    rootUrl,\n    sceneFilename,\n    pluginExtension, // other parameters\n    children,\n    ...rest // passed on to \"rootMesh\"\n  } = props\n\n  const options: SceneLoaderOptions = {\n    alwaysSelectAsActiveMesh,\n    meshNames,\n    onLoadProgress,\n    onModelError,\n    onModelLoaded,\n    receiveShadows,\n    reportProgress,\n    scaleToDimension,\n  }\n\n  const sceneLoaderResults = useSceneLoader(rootUrl, sceneFilename, pluginExtension, options, rest)\n\n  useEffect(() => {\n    return () => {\n      // console.log('disposing the sceneloader results.')\n      sceneLoaderResults.dispose()\n    }\n  }, [])\n\n  return (\n    <abstractMesh\n      ref={ref}\n      fromInstance={sceneLoaderResults.rootMesh!}\n      childMeshesNotTracked\n      {...rest}\n    >\n      {children}\n    </abstractMesh>\n  )\n})\n\nexport default Model\n","import { Texture } from '@babylonjs/core/Materials/Textures/texture.js'\nimport React from 'react'\n\ninterface SkyboxProps {\n  rootUrl: string\n  size?: number\n  name?: string\n}\n\nconst Skybox: React.FC<SkyboxProps> = (props: SkyboxProps) => (\n  <box\n    name={props.name ? `skybox-${props.name}` : 'skybox'}\n    size={props.size ?? 100}\n    infiniteDistance={true}\n    renderingGroupId={0}\n  >\n    <standardMaterial\n      name={props.name ? `skybox-material-${props.name}` : 'skybox-material'}\n      backFaceCulling={false}\n      disableLighting={true}\n    >\n      <cubeTexture\n        key={`cube-texture-${props.rootUrl}`}\n        rootUrl={props.rootUrl}\n        coordinatesMode={Texture.SKYBOX_MODE}\n        assignTo={'reflectionTexture'}\n      />\n    </standardMaterial>\n  </box>\n)\n\nexport default Skybox\n","import { Engine } from '@babylonjs/core/Engines/engine.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport React, { createContext, useContext } from 'react'\nimport { SceneContext } from './scene'\n\nexport type EngineCanvasContextType = {\n  engine: Nullable<Engine>\n  canvas: Nullable<HTMLCanvasElement | WebGLRenderingContext>\n}\n\nexport const EngineCanvasContext = createContext<EngineCanvasContextType>({\n  engine: null,\n  canvas: null,\n})\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nexport function withEngineCanvasContext<\n  P extends { engineCanvasContext: EngineCanvasContextType },\n  R = Omit<P, 'engineCanvasContext'>\n>(Component: React.ComponentClass<P> | React.FunctionComponent<P>): React.FunctionComponent<R> {\n  return function BoundComponent(props: R) {\n    return (\n      <EngineCanvasContext.Consumer>\n        {(ctx) => <Component {...(props as any)} engineCanvasContext={ctx} />}\n      </EngineCanvasContext.Consumer>\n    )\n  }\n}\n\n/**\n * Get the engine from the context.\n */\nexport const useEngine = (): Nullable<Engine> => {\n  const engineCanvasContext = useContext(EngineCanvasContext)\n  const sceneContext = useContext(SceneContext)\n  if (engineCanvasContext.engine !== null) {\n    return engineCanvasContext.engine\n  }\n\n  if (sceneContext.scene !== null) {\n    return sceneContext.scene.getEngine()\n  }\n\n  return null\n}\n\n/**\n * Get the canvas DOM element from the context.\n */\nexport const useCanvas = (): Nullable<HTMLCanvasElement | WebGLRenderingContext> => {\n  const engineCanvasContext = useContext(EngineCanvasContext)\n  const sceneContext = useContext(SceneContext)\n\n  if (engineCanvasContext.engine !== null) {\n    return engineCanvasContext.canvas\n  }\n\n  if (sceneContext.scene !== null) {\n    return sceneContext.scene.getEngine().getRenderingCanvas()\n  }\n\n  return null\n}\n","import {\n  AbstractAssetTask,\n  AssetsManager,\n  BinaryFileAssetTask,\n  IAssetsProgressEvent,\n  MeshAssetTask,\n  TextureAssetTask,\n} from '@babylonjs/core/Misc/assetsManager.js'\nimport { EventState } from '@babylonjs/core/Misc/observable.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport React, { useContext, useState } from 'react'\nimport { useScene } from '../scene'\n\nexport enum TaskType {\n  Binary = 'Binary',\n  Mesh = 'Mesh',\n  Texture = 'Texture',\n}\n\nexport type BinaryTask = {\n  taskType: TaskType.Binary\n  name: string\n  url: string\n  onSuccess?: BinaryFileAssetTask['onSuccess']\n  onError?: BinaryFileAssetTask['onError']\n}\n\nexport type MeshTask = {\n  taskType: TaskType.Mesh\n  name: string\n  meshesNames?: any\n  rootUrl: string\n  sceneFilename: string\n  onSuccess?: MeshAssetTask['onSuccess']\n  onError?: MeshAssetTask['onError']\n}\n\nexport type TextureTask = {\n  taskType: TaskType.Texture\n  name: string\n  url: string\n  noMipmap?: boolean\n  invertY?: boolean\n  samplingMode?: number\n  onSuccess?: TextureAssetTask['onSuccess']\n  onError?: TextureAssetTask['onError']\n}\n\nexport type Task = BinaryTask | MeshTask | TextureTask\n\nexport type AssetManagerContextType =\n  | {\n      updateProgress: (progress: AssetManagerProgressType) => void\n      lastProgress?: AssetManagerProgressType\n    }\n  | undefined\n\nexport const AssetManagerContext = React.createContext<AssetManagerContextType>(undefined)\n\nexport type AssetManagerProgressType =\n  | {\n      eventData: IAssetsProgressEvent\n      eventState: EventState\n    }\n  | undefined\n\nexport type AssetManagerContextProviderProps = {\n  startProgress?: AssetManagerProgressType\n  children: React.ReactNode\n}\n\nexport const AssetManagerContextProvider: React.FC<AssetManagerContextProviderProps> = (\n  props: AssetManagerContextProviderProps\n) => {\n  const [progress, setProgress] = useState<AssetManagerProgressType>(undefined)\n\n  return (\n    <AssetManagerContext.Provider value={{ lastProgress: progress, updateProgress: setProgress }}>\n      {props.children}\n    </AssetManagerContext.Provider>\n  )\n}\n\nexport type AssetManagerOptions = {\n  useDefaultLoadingScreen?: boolean\n  reportProgress?: boolean // TODO: improve name.  this is the opt-out of reporting (can trigger many re-renders).\n  scene?: Scene\n}\n\nconst getTaskKey = (task: Task): string | undefined => {\n  switch (task.taskType) {\n    case TaskType.Binary:\n      return `binary:${task.url}`\n    case TaskType.Mesh:\n      return `mesh:${task.rootUrl}/${task.sceneFilename}`\n    case TaskType.Texture:\n      return `texture:${task.url}`\n    default:\n      throw new Error(`Unknown task type: ${JSON.stringify(task)}`)\n  }\n}\n\ntype AssetManagerResult = {\n  tasks: AbstractAssetTask[]\n  taskNameMap: Record<string, AbstractAssetTask>\n}\n\n/**\n * This has limited functionality and only works for limited asset types.\n *\n * This is an experimental API and *WILL* change.\n * TODO: function signature is not any.\n */\nconst useAssetManagerWithCache = (): ((\n  tasks: Task[],\n  options?: AssetManagerOptions\n) => AssetManagerResult) => {\n  // we need our own memoized cache. useMemo, useState, etc. fail miserably - throwing a promise forces the component to remount.\n  let suspenseCache: Record<string, () => AssetManagerResult> = {}\n  let suspenseScene: Nullable<Scene> = null\n\n  let tasksCompletedCache: Record<string, AbstractAssetTask> = {}\n\n  return (tasks: Task[], options?: AssetManagerOptions): AssetManagerResult => {\n    // hooks cannot be used inside a callback (this is not a callback)\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hookScene = useScene()\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const assetManagerContext = useContext<AssetManagerContextType>(AssetManagerContext)\n\n    const opts = options || {\n      useDefaultLoadingScreen: false,\n    }\n\n    if (opts.scene === undefined && hookScene === null) {\n      throw new Error(\n        'useAssetManager can only be used inside a Scene component (or pass scene as an option)'\n      )\n    }\n\n    const scene: Scene = opts.scene || hookScene!\n\n    if (suspenseScene == null) {\n      suspenseScene = scene\n    } else {\n      if (suspenseScene !== scene) {\n        // console.log('new scene detected - clearing useAssetManager cache');\n        // new scene detected.  clearing all caches.\n        suspenseCache = {}\n        // NOTE: could keep meshes with mesh.serialize and Mesh.Parse\n        // Need to research how to do with textures, etc.\n        // browser cache should make the load fast in most cases\n        tasksCompletedCache = {}\n        suspenseScene = scene\n      }\n    }\n    // invalidate cache with objects from another scene\n    // Object.getOwnPropertyNames(tasksCompletedCache).forEach(propertyName => {\n    //     const task: AbstractAssetTask = tasksCompletedCache[propertyName];\n    //     if (task instanceof TextureAssetTask) {\n    //         if (task.texture.getScene() !== scene) {\n    //             console.log(`clearing ${task.name} from cache (different scene)`);\n    //             delete tasksCompletedCache[propertyName];\n    //         } else {\n    //             console.log(`scane scene ${task.name}`, scene, task.texture.getScene());\n    //         }\n    //     }\n    // });\n\n    const createGetAssets = (tasks: Task[]): (() => AssetManagerResult) => {\n      if (!Array.isArray(tasks)) {\n        throw new Error('Asset Manager tasks must be an array')\n      }\n\n      const newRequests: Map<AbstractAssetTask, Task> = new Map<AbstractAssetTask, Task>()\n\n      const assetManager: AssetsManager = new AssetsManager(scene)\n      const cachedTasks: any[] = []\n      tasks.forEach((task) => {\n        const key = getTaskKey(task)\n        if (key !== undefined && suspenseCache[key]) {\n          cachedTasks.push(suspenseCache[key])\n        } else {\n          switch (task.taskType) {\n            case TaskType.Binary: {\n              const binaryTask = assetManager.addBinaryFileTask(task.name, task.url)\n              newRequests.set(binaryTask, task)\n              if (task.onSuccess) {\n                binaryTask.onSuccess = task.onSuccess\n              }\n              if (task.onError) {\n                binaryTask.onError = task.onError\n              }\n              break\n            }\n            case TaskType.Mesh: {\n              const meshTask = assetManager.addMeshTask(\n                task.name,\n                task.meshesNames,\n                task.rootUrl,\n                task.sceneFilename\n              )\n              newRequests.set(meshTask, task)\n              if (task.onSuccess) {\n                meshTask.onSuccess = task.onSuccess\n              }\n              if (task.onError) {\n                meshTask.onError = task.onError\n              }\n              break\n            }\n            case TaskType.Texture: {\n              const textureTask: TextureAssetTask = assetManager.addTextureTask(\n                task.name,\n                task.url,\n                task.noMipmap,\n                task.invertY,\n                task.samplingMode\n              )\n              newRequests.set(textureTask, task)\n              if (task.onSuccess) {\n                textureTask.onSuccess = task.onSuccess\n              }\n              if (task.onError) {\n                textureTask.onError = task.onError\n              }\n              break\n            }\n            default:\n              throw new Error(\n                `Only binary/mesh supported currently.  'taskType' found on ${JSON.stringify(task)}`\n              )\n          }\n        }\n      })\n\n      const createResultFromTasks = (tasks: AbstractAssetTask[]): AssetManagerResult => {\n        const taskNameMap = tasks.reduce<Record<string, AbstractAssetTask>>(\n          (prev: Record<string, AbstractAssetTask>, cur: AbstractAssetTask) => {\n            prev[cur.name] = cur\n            return prev\n          },\n          {}\n        )\n        return { tasks, taskNameMap }\n      }\n\n      const taskPromise =\n        tasks.length === cachedTasks.length\n          ? new Promise<AssetManagerResult>((resolve) =>\n              resolve(createResultFromTasks(cachedTasks))\n            )\n          : new Promise<AssetManagerResult>((resolve, reject) => {\n              let failed = false\n              assetManager.useDefaultLoadingScreen = opts.useDefaultLoadingScreen ?? false\n              assetManager.onFinish = (tasks: AbstractAssetTask[]) => {\n                // whether it failed or not - we cache all results\n                tasks.forEach((task) => {\n                  if (newRequests.has(task)) {\n                    // NOTE: we can skip caching failed requests (ie: due to temporary outage / 500)\n                    const originalTask: Task = newRequests.get(task)!\n                    const key = getTaskKey(originalTask)!\n                    tasksCompletedCache[key] = task\n                  }\n                })\n                if (failed === false) {\n                  // include cached ones as well.\n                  const result = createResultFromTasks(tasks.concat(cachedTasks))\n                  resolve(result)\n                }\n              }\n\n              if (opts.reportProgress !== false && assetManagerContext !== undefined) {\n                assetManager.onProgressObservable.add(\n                  (eventData: IAssetsProgressEvent, eventState: EventState) => {\n                    assetManagerContext!.updateProgress({ eventData, eventState })\n                  }\n                )\n              }\n\n              assetManager.onTaskError = (task: AbstractAssetTask) => {\n                failed = true\n                reject(\n                  `Failed task ${\n                    task.errorObject\n                      ? task.errorObject.message ?? `no error message on '${task.name}'`\n                      : task.name\n                  }`\n                )\n              }\n\n              assetManager.load()\n            })\n\n      let result: AssetManagerResult\n      let error: Nullable<Error> = null\n      let suspender: Nullable<Promise<void>> = null\n      suspender = (async () => {\n        try {\n          result = await taskPromise\n        } catch (e) {\n          error = e as Error\n        } finally {\n          suspender = null\n        }\n      })()\n\n      const getAssets = () => {\n        if (suspender) {\n          throw suspender\n        }\n        if (error !== null) {\n          throw error\n        }\n\n        return result\n      }\n      return getAssets\n    }\n\n    const key = JSON.stringify(tasks)\n    if (suspenseCache[key] === undefined) {\n      suspenseCache[key] = createGetAssets(tasks)\n    }\n\n    return suspenseCache[key]()\n  }\n}\n\n// this isn't a hook being called\n// eslint-disable-next-line react-hooks/rules-of-hooks\nexport const useAssetManager = useAssetManagerWithCache()\n","import { Engine } from '@babylonjs/core/Engines/engine.js'\nimport { EngineOptions, ThinEngine } from '@babylonjs/core/Engines/thinEngine.js'\nimport { Observable } from '@babylonjs/core/Misc/observable.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport React, { MutableRefObject, ReactNode, useEffect, useRef, useState } from 'react'\nimport { EngineCanvasContext } from './hooks/engine'\n\nexport type RenderOptions = {\n  /**\n   * Observes visibility and does not render scene when no pixels of canvas are visible\n   * Defaults to false, so you need to opt-in\n   */\n  whenVisibleOnly?: boolean\n}\n\n// TODO: this should return a shouldRenderRef instead of setState for a re-render?\nconst useCanvasObserver = (\n  canvasRef: MutableRefObject<Nullable<HTMLCanvasElement>>,\n  shouldRenderRef: MutableRefObject<boolean>,\n  enabledOption = false,\n  threshold = 0\n) => {\n  useEffect(() => {\n    if (enabledOption !== true) {\n      return\n    }\n\n    if (canvasRef.current === null) {\n      return\n    }\n\n    const callbackFn: IntersectionObserverCallback = (entries) => {\n      const [entry] = entries\n      shouldRenderRef.current = entry.isIntersecting\n      console.log('should render updating:', shouldRenderRef.current)\n    }\n\n    const observer = new IntersectionObserver(callbackFn, { threshold })\n    observer.observe(canvasRef.current)\n\n    const canvas: HTMLCanvasElement = canvasRef.current\n    return () => {\n      observer.unobserve(canvas)\n    }\n  }, [canvasRef, threshold, enabledOption])\n}\n\nexport type EngineProps = {\n  engineOptions?: EngineOptions\n  antialias?: boolean\n  adaptToDeviceRatio?: boolean\n  renderOptions?: RenderOptions\n\n  /**\n   * Skip rendering if set to true (takes precedence over RenderOptions.whenVisibleOnly)\n   */\n  isPaused?: boolean\n\n  /**\n   * Attach resize event when canvas resizes (window resize may not occur).\n   * Defaults to true, so you need to opt-out.\n   */\n  observeCanvasResize?: boolean\n\n  /**\n   * By default touch-action: 'none' will be on the canvas.  Use this to disable.\n   */\n  touchActionNone?: boolean\n  /**\n   * Useful if you want to attach CSS to the canvas by css #id selector.\n   */\n  canvasId?: string\n  // onCreated?: (engine: Engine) => void\n} & { children?: ReactNode | undefined } & React.CanvasHTMLAttributes<HTMLCanvasElement>\n\ntype CanvasSpecificProps = Omit<\n  EngineProps,\n  | 'engineOptions'\n  | 'antialias'\n  | 'adaptToDeviceRatio'\n  | 'renderOptions'\n  | 'observeCanvasResize'\n  | 'children'\n>\n\nconst ReactBabylonjsEngine: React.FC<EngineProps> = (props: EngineProps, context?: any) => {\n  const engine = useRef<Nullable<Engine>>(null)\n  const [engineReady, setEngineReady] = useState<boolean>(false)\n  // const resizeObserver = useRef<Nullable<ResizeObserver>>(null);\n\n  const onBeforeRenderLoopObservable = useRef<Observable<Engine>>(new Observable<Engine>())\n  const onEndRenderLoopObservable = useRef<Observable<Engine>>(new Observable<Engine>())\n\n  const canvasRef = useRef<Nullable<HTMLCanvasElement>>(null)\n  const [canvasReady, setCanvasReady] = useState(false)\n  const shouldRenderRef = useRef(true)\n\n  // const renderOptions: RenderOptions = props.renderOptions ?? {};\n  const {\n    isPaused,\n    touchActionNone,\n    canvasId,\n    engineOptions,\n    antialias,\n    adaptToDeviceRatio,\n    renderOptions,\n    observeCanvasResize,\n    children,\n    style,\n    ...canvasProps\n  } = props\n\n  const observerEnabled =\n    renderOptions !== undefined && renderOptions.whenVisibleOnly === true && !isPaused\n  useCanvasObserver(canvasRef, shouldRenderRef, observerEnabled, 0)\n\n  useEffect(() => {\n    shouldRenderRef.current = !isPaused\n  }, [isPaused])\n\n  useEffect(() => {\n    if (!canvasReady) {\n        return;\n    }\n\n    if (canvasRef.current === null) {\n      return\n    }\n\n    engine.current = new Engine(\n      canvasRef.current,\n      antialias === true, // default false\n      engineOptions,\n      adaptToDeviceRatio === true // default false\n    )\n\n    engine.current.runRenderLoop(() => {\n      if (shouldRenderRef.current === false) {\n        return\n      }\n      if (onBeforeRenderLoopObservable.current.hasObservers()) {\n        onBeforeRenderLoopObservable.current.notifyObservers(engine.current!)\n      }\n\n      // TODO: here is where you could access your own render method\n      engine.current!.scenes.forEach((scene) => {\n        // TODO (fix properly): in React 18.2 (not 18.0 or 18.1 if the camera is in a subcomponent it will be added in a future render!)\n        if (scene.cameras?.length > 0) {\n          scene.render()\n        }\n      })\n\n      if (onEndRenderLoopObservable.current.hasObservers()) {\n        onEndRenderLoopObservable.current.notifyObservers(engine.current!)\n      }\n    })\n\n    // if (props.observeCanvasResize !== false && window?.ResizeObserver) {\n    //   resizeObserver.current = new ResizeObserver(() => {\n    //     engine.current!.resize()\n    //   })\n    //   resizeObserver.current.observe(canvasRef.current);\n    // }\n\n    engine.current.onContextLostObservable.add((eventData: ThinEngine) => {\n      console.warn('context loss observable from Engine: ', eventData)\n    })\n\n    const onResizeWindow = () => {\n      if (engine.current) {\n        engine.current.resize()\n      }\n    }\n\n    window.addEventListener('resize', onResizeWindow)\n    setEngineReady(true) // trigger re-render to render Scene\n\n    return () => {\n      window.removeEventListener('resize', onResizeWindow)\n\n      // if (resizeObserver.current !== null) {\n      //   resizeObserver.current.disconnect()\n      //   resizeObserver.current = null\n      // }\n\n      if (engine.current !== null) {\n        engine.current!.dispose()\n        engine.current = null\n      }\n    }\n  }, [canvasReady])\n\n  const opts: any = {}\n\n  if (touchActionNone !== false) {\n    opts['touch-action'] = 'none'\n  }\n\n  // this is for backwards compatibility - before props were passed to canvas.\n  if (canvasId && canvasProps.id === undefined) {\n    opts.id = canvasId\n  }\n\n  // TODO: this.props.portalCanvas does not need to render a canvas.\n  return (\n    <EngineCanvasContext.Provider value={{ engine: engine.current, canvas: canvasRef.current }}>\n      <canvas\n        {...opts}\n        {...canvasProps}\n        ref={(view) => {canvasRef.current = view; setCanvasReady(true)}}\n        style={{ width: '100%', height: '100%', ...style }}\n      >\n        {engine.current !== null && props.children}\n      </canvas>\n    </EngineCanvasContext.Provider>\n  )\n}\n\nexport default ReactBabylonjsEngine\n","import { Camera } from '@babylonjs/core/Cameras/camera.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { useContext, useEffect, useRef } from 'react'\nimport { SceneContext } from './scene'\n\n/**\n * Handles creating a camera and attaching/disposing.\n * TODO: add new 4.2 parameters: useCtrlForPanning & panningMouseButton\n * @param createCameraFn function that creates and returns a camera\n * @param autoAttach Attach the input controls (default true)\n * @param noPreventDefault Events caught by controls should call prevent default\n * @param useCtrlForPanning (ArcRotateCamera only)\n * @param panningMoustButton (ArcRotateCamera only)\n */\nexport const useCamera = <T extends Camera>(\n  createCameraFn: (scene: Scene) => T,\n  autoAttach = true,\n  noPreventDefault = true /*, useCtrlForPanning: boolean = false, panningMouseButton: number*/\n): Nullable<T> => {\n  const { scene } = useContext(SceneContext)\n  const cameraRef = useRef<Nullable<T>>(null)\n\n  useEffect(() => {\n    if (scene === null) {\n      console.warn('cannot create camera (scene not ready)')\n      return\n    }\n\n    const camera: T = createCameraFn(scene)\n    if (autoAttach === true) {\n      const canvas: HTMLCanvasElement = scene.getEngine()!.getRenderingCanvas()!\n\n      // This attaches the camera to the canvas - adding extra parameters breaks backwards compatibility\n      // https://github.com/BabylonJS/Babylon.js/pull/9192 (keep canvas to work with < 4.2 beta-13)\n      // TODO: look at parameters of other camera types for attaching - likely need an 'options' parameter instead.\n      // if (camera instanceof ArcRotateCamera) {\n      //     camera.attachControl(noPreventDefault, useCtrlForPanning, panningMouseButton)\n      camera.attachControl(canvas, noPreventDefault)\n    }\n    cameraRef.current = camera\n\n    return () => {\n      if (autoAttach === true) {\n        // canvas is only needed for < 4.1.  Type typings broke in 5.x where there was no parameter.\n        const canvas: HTMLCanvasElement = scene.getEngine()!.getRenderingCanvas()!\n        ;(camera as any).detachControl(canvas)\n      }\n      camera.dispose()\n    }\n  }, [scene])\n\n  return cameraRef.current\n}\n","import { IAction } from '@babylonjs/core/Actions/action.js'\nimport { ActionEvent } from '@babylonjs/core/Actions/actionEvent.js'\nimport { ActionManager } from '@babylonjs/core/Actions/actionManager.js'\nimport { ExecuteCodeAction } from '@babylonjs/core/Actions/directActions.js'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { Mesh } from '@babylonjs/core/Meshes/mesh.js'\nimport { EventState, Observer } from '@babylonjs/core/Misc/observable.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { Control } from '@babylonjs/gui/2D/controls/control.js'\nimport { MutableRefObject, useEffect, useRef, useState } from 'react'\nimport { CustomPropsHandler, ICustomPropsHandler } from '../PropsHandler.js'\n\nexport const useCustomPropsHandler = (\n  propsHandler: ICustomPropsHandler<any, any> /*, deps?: React.DependencyList | undefined*/\n): void => {\n  const firstRun = useRef<boolean>(true)\n\n  if (firstRun.current === true) {\n    CustomPropsHandler.RegisterPropsHandler(propsHandler)\n    firstRun.current = false\n  }\n\n  useEffect(() => {\n    return () => {\n      // console.warn('de-registering on unmount', propsHandler.name);\n      CustomPropsHandler.UnregisterPropsHandler(propsHandler)\n    }\n  }, [])\n}\n\nexport type MeshEventType = {\n  (ev: ActionEvent): void\n}\n\nexport type Gui2dEventType = {\n  (eventData: Control, eventState: EventState): void\n}\n\nexport type HoverType = MeshEventType | Gui2dEventType\n\n/**\n * useHover hook\n *\n * NOTE: Supports Mesh and 2D GUI controls only (not 3D GUI).\n *\n * @param over expression when hover over starts\n * @param out expression when hover stops\n * @param ownRef to re-use a Ref you already have, otherwise one is created for you and returned.\n */\nexport const useHover = (\n  over?: HoverType,\n  out?: HoverType,\n  ownRef?: MutableRefObject<Mesh | Control | null>\n): [MutableRefObject<Mesh | Control | null>, boolean] => {\n  const [value, setValue] = useState(false)\n\n  const createdRef = useRef<Mesh>(null) as MutableRefObject<Mesh | Control | null>\n  const ref = ownRef ?? createdRef\n\n  useEffect(() => {\n    if (ref.current) {\n      const registeredMeshActions: Nullable<IAction>[] = []\n      let observer2dGuiEnter: Nullable<Observer<Control>> = null\n      let observer2dGuiOut: Nullable<Observer<Control>> = null\n      if (ref.current instanceof AbstractMesh) {\n        const mesh = ref.current as Mesh\n\n        if (!mesh.actionManager) {\n          mesh.actionManager = new ActionManager(mesh.getScene())\n        }\n\n        const onPointerOverAction: Nullable<IAction> = mesh.actionManager.registerAction(\n          new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, (ev: any) => {\n            over && (over as MeshEventType)(ev)\n            setValue(true)\n          })\n        )\n\n        const onPointerOutAction: Nullable<IAction> = mesh.actionManager.registerAction(\n          new ExecuteCodeAction(ActionManager.OnPointerOutTrigger, (ev: any) => {\n            out && (out as MeshEventType)(ev)\n            setValue(false)\n          })\n        )\n\n        registeredMeshActions.push(onPointerOverAction)\n        registeredMeshActions.push(onPointerOutAction)\n      } else if (ref.current instanceof Control) {\n        const control = ref.current as Control\n        observer2dGuiEnter = control.onPointerEnterObservable.add(over as Gui2dEventType)\n        observer2dGuiOut = control.onPointerOutObservable.add(out as Gui2dEventType)\n      } else {\n        console.warn('Can only apply useHover to non-mesh/2D control currently.', ref.current)\n      }\n\n      if (registeredMeshActions.length > 0 || observer2dGuiEnter !== null) {\n        return () => {\n          if (ref.current) {\n            if (registeredMeshActions.length > 0) {\n              registeredMeshActions.forEach((action: Nullable<IAction>) => {\n                if (action !== null) {\n                  const mesh = ref.current as Mesh\n                  mesh.actionManager?.unregisterAction(action)\n                }\n              })\n              registeredMeshActions.splice(0, registeredMeshActions.length)\n            }\n\n            if (observer2dGuiEnter !== null) {\n              const control = ref.current as Control\n              control.onPointerEnterObservable.remove(observer2dGuiEnter)\n              control.onPointerOutObservable.remove(observer2dGuiOut)\n              observer2dGuiEnter = null\n              observer2dGuiOut = null\n            }\n          }\n        }\n      }\n    }\n  }, [ref.current])\n  // todo: if use ref.current as dep,  duplicate register action.\n\n  return [ref, value]\n}\n\n/**\n * useClick hook\n *\n * @param onClick What would be passed in the OnPickTrigger from ActionManager\n * @param ownRef to re-use a Ref you already have, otherwise one is created for you and returned.\n */\nexport function useClick(\n  onClick: MeshEventType,\n  ownRef?: MutableRefObject<Nullable<Mesh>>\n): [MutableRefObject<Nullable<Mesh>>] {\n  const createdRef = useRef<Nullable<Mesh>>(null)\n  const ref = ownRef ?? createdRef\n\n  useEffect(() => {\n    if (ref.current) {\n      if (ref.current instanceof AbstractMesh) {\n        const mesh = ref.current as Mesh\n\n        if (!mesh.actionManager) {\n          mesh.actionManager = new ActionManager(mesh.getScene())\n        }\n\n        const action: Nullable<IAction> = mesh.actionManager.registerAction(\n          new ExecuteCodeAction(ActionManager.OnPickTrigger, function (ev: any) {\n            onClick(ev)\n          })\n        )\n        return () => {\n          // unregister on teardown\n          mesh.actionManager?.unregisterAction(action!)\n        }\n      } else {\n        console.warn('onClick hook only supports referencing Meshes')\n      }\n    }\n  }, [ref])\n  // todo: if use ref.current as dep,  duplicate register action.\n\n  return [ref]\n}\n","import { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreateInfo } from './codeGenerationDescriptors'\nimport { CreatedInstanceMetadata } from './CreatedInstance'\nimport { LifecycleListener } from './LifecycleListener'\nimport { HasPropsHandlers } from './PropsHandler'\n\nexport type DynamicHost<T, U> = {\n  /**\n   * lookup on host element\n   */\n  hostElementName: string\n  /**\n   * null is only valid when the metadata declares a deferred creation and the lifecycle listener creates the instance.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  hostFactory: (scene: Scene, props: any) => Nullable<T>\n  propHandlerInstance: HasPropsHandlers<U>\n  createInfo: CreateInfo\n  metadata: CreatedInstanceMetadata\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  lifecycleListenerFactory?: (scene: Scene, props: any) => LifecycleListener<T>\n}\n\n/**\n * Experimental - this will change - just a demo!\n *\n * Allows dynamic registration of host elements that the reconciler will take into consideration (case sensitive).\n */\nexport class HostRegistrationStore {\n  private static _store: Record<string, DynamicHost<any, any>> = {}\n\n  /**\n   * Registers a new host element\n   * @param host host element to dynamically register\n   */\n  public static Register(host: DynamicHost<any, any>): void {\n    this._store[host.hostElementName] = host\n  }\n\n  /**\n   * Retrieve a registered host by element name\n   */\n  public static GetRegisteredHost(hostElementName: string): DynamicHost<any, any> | undefined {\n    return this._store[hostElementName]\n  }\n}\n","import { Quaternion, Vector3 } from '@babylonjs/core/Maths/math.vector.js'\nimport { CreatedInstance } from './CreatedInstance'\nimport { PropChangeType, PropertyUpdate, PropsHandler } from './PropsHandler'\n\n/**\n * @deprecated Please use @see applyPropsToRef instead\n * (same functionality different parameters better name, but doesn't work with \"public\" ref provided by reconciler)\n * @param hostInstance a babylonjs public ref (available with useRef)\n * @param props\n */\nexport const applyInitialPropsToInstance = (target: any, props: Record<string, any>): void => {\n  // this is a bad cast.  it is here for backwards compatibility with a react-spring dependency that only uses vector/color prop changes.\n  const initPayload: PropertyUpdate[] = []\n  if ('__rb_createdInstance' in target) {\n    const createdInstance: CreatedInstance<any> =\n      target.__rb_createdInstance as unknown as CreatedInstance<any>\n    if (createdInstance.propsHandlers) {\n      createdInstance.propsHandlers.getPropsHandlers().forEach((propHandler: PropsHandler<any>) => {\n        const handlerUpdates: PropertyUpdate[] | null = propHandler.getPropertyUpdates(\n          {}, // We will reapply any props passed in (will not \"clear\" props, if we pass in an undefined prop)\n          props\n        )\n        if (handlerUpdates !== null) {\n          initPayload.push(...handlerUpdates)\n        }\n      })\n    }\n  }\n\n  if (initPayload.length > 0) {\n    // this is all copied code from `applyUpdateToInstance(...)`\n    initPayload.forEach((update) => {\n      switch (update.changeType) {\n        case PropChangeType.Primitive:\n        case PropChangeType.FresnelParameters:\n        case PropChangeType.LambdaExpression:\n        case PropChangeType.Texture:\n          // console.log(` > ${type}: updating ${update.changeType} on ${update.propertyName} to ${update.value}`)\n          if (update.propertyName.indexOf('.') !== -1) {\n            const dotProps: string[] = update.propertyName.split('.')\n            const lastProp = dotProps.pop()!\n            const newTarget = dotProps.reduce((target, prop) => target[prop], target)\n            newTarget[lastProp] = update.value\n          } else {\n            target[update.propertyName] = update.value\n          }\n          break\n        case PropChangeType.Vector3:\n          if (target[update.propertyName] && update.isSetAccessor === false) {\n            ;(target[update.propertyName] as Vector3).copyFrom(update.value)\n          } else if (update.value) {\n            target[update.propertyName] = update.value.clone()\n          } else {\n            target[update.propertyName] = update.value // ie: undefined/null?\n          }\n          break\n        case PropChangeType.Color3:\n        case PropChangeType.Color4:\n          if (update.value) {\n            target[update.propertyName] = update.value.clone()\n          } else {\n            target[update.propertyName] = update.value\n          }\n          break\n        case PropChangeType.Control:\n          target[update.propertyName] = update.value\n          break\n        case PropChangeType.NumericArray:\n          target[update.propertyName] = update.value\n          break\n        case PropChangeType.Observable:\n          console.warn('observable not supported for plugins (create a request if needed)')\n          break\n        case PropChangeType.Method:\n          if (typeof target[update.propertyName] === 'function') {\n            if (Array.isArray(update.value)) {\n              target[update.propertyName](...update.value)\n            } else if (Object(update.value) !== update.value) {\n              // primitive, undefined & null.  Comparison is 7x slower than instanceof check,\n              // TODO: should be: update.value === undefined || typeof(update.value) === 'number' || ...\n              target[update.propertyName](update.value)\n            } else {\n              // TODO: there is a bug here in that setTarget={new Vector3(0, 1, 0)} will throw an exception...\n              console.error(\n                \"need to make sure this isn't something like a Vector3 before destructuring\"\n              )\n              target[update.propertyName](...Object.values(update.value))\n            }\n          } else {\n            console.error(`Cannot call [not a function] ${update.propertyName}(...) on:`, target)\n          }\n          break\n        case PropChangeType.Quaternion:\n          // console.warn(`quaternion update detected ${update.propertyName} to:`, update.value)\n          if (target[update.propertyName] && update.isSetAccessor === false) {\n            ;(target[update.propertyName] as Quaternion).copyFrom(update.value)\n          } else if (update.value) {\n            target[update.propertyName] = (update.value as Quaternion).clone()\n          } else {\n            target[update.propertyName] = update.value // ie: undefined/null?\n          }\n          break\n        default:\n          console.error(`Unhandled property update of type '${update.changeType}'`)\n          break\n      }\n    })\n  }\n}\n\n/**\n * @deprecated I don't believe this is used currently, but it can be added back.\n */\nexport const applyPropsToRef = (\n  createdInstance: CreatedInstance<any>,\n  props: Record<string, any>\n): void => {\n  throw new Error('if you need this method please create an issue.')\n}\n","export interface GeneratedParameter {\n  name: string\n  type: string | GeneratedParameter[]\n  optional: boolean\n}\n\nexport class CreationType {\n  public static readonly FactoryMethod: string = 'FactoryMethod'\n  public static readonly Constructor: string = 'Constructor'\n}\n\nexport interface CreateInfo {\n  libraryLocation: string // ie: `${libraryLocation}`\n  /**\n   * so far only '@babylonjs/core', '@babylonjs/gui', or 'BABYLONEXT' (for Terrain)\n   */\n  namespace: string\n  factoryMethod?: string // required for 'Factory' creation type.\n  creationType: string // TODO: enum\n  parameters: GeneratedParameter[]\n}\n","import { Scene } from '@babylonjs/core/scene.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { LifecycleListener } from '../LifecycleListener'\nimport { applyInitialPropsToCreatedInstance } from '../UpdateInstance'\n\nexport default abstract class BaseLifecycleListener<T, U> implements LifecycleListener<T> {\n  constructor(protected scene: Scene, protected props: U) {\n    /* empty */\n  }\n\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>): void {\n    if (child.customProps.assignFrom !== undefined) {\n      // when mounted to the root container the parent is considered the \"Scene\". Needed for ie: scene.imageProcessingConfiguration property.\n      const parentHostInstance =\n        parent.metadata.className === 'root' ? this.scene : parent.hostInstance\n\n      if (parentHostInstance[child.customProps.assignFrom] === undefined) {\n        console.error(\n          `Cannot find existing property ${child.customProps.assignFrom} on parent component (check your 'assignFrom')`\n        )\n      } else {\n        // TODO: should we try to verify types like we do in 'fromInstance'?\n        child.hostInstance = parentHostInstance[child.customProps.assignFrom]\n\n        if (child.deferredCreationProps && child.propsHandlers) {\n          applyInitialPropsToCreatedInstance(child, child.deferredCreationProps)\n        } else {\n          console.warn('cannot assign deferred props.  they are lost.')\n        }\n        child.deferredCreationProps = undefined\n      }\n    }\n  }\n\n  onChildAdded(child: CreatedInstance<any>, parent: CreatedInstance<any>): void {\n    /* empty */\n  }\n\n  onMount(instance: CreatedInstance<T>): void {\n    /* empty */\n  }\n\n  onUnmount(): void {\n    /* empty */\n  }\n}\n","import { GlowLayer } from '@babylonjs/core/Layers/glowLayer.js'\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { Mesh } from '@babylonjs/core/Meshes/mesh.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { FiberAbstractMeshProps } from '../generatedProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class AbstractMeshLifecycleListener extends BaseLifecycleListener<\n  AbstractMesh,\n  FiberAbstractMeshProps\n> {\n  onMount(instance?: CreatedInstance<AbstractMesh>) {\n    if (instance === undefined || instance.hostInstance === undefined) {\n      console.error('Missing instance')\n      return\n    }\n\n    const mesh: AbstractMesh = instance.hostInstance\n    let tmp: CreatedInstance<any> | null = instance.parent\n\n    while (tmp !== null) {\n      if (tmp.metadata && tmp.metadata.isGlowLayer === true) {\n        if (tmp.customProps.addIncludeOnlyChildren === true) {\n          // TODO: listen for mesh disposal to remove from inclusion list?\n          ;(tmp.hostInstance as GlowLayer).addIncludedOnlyMesh(mesh as Mesh)\n\n          if (instance.customProps.childMeshesNotTracked === true) {\n            for (const childMesh of mesh.getChildMeshes(false)) {\n              ;(tmp.hostInstance as GlowLayer).addIncludedOnlyMesh(childMesh as Mesh)\n            }\n          }\n        }\n        break\n      }\n\n      if (\n        tmp.metadata &&\n        tmp.metadata.isShadowGenerator === true &&\n        tmp.customProps.shadowCastChildren === true\n      ) {\n        if (\n          tmp.hostInstance !==\n          undefined /* ShadowGenerators have deferred creation (waiting on light source) */\n        ) {\n          ;(tmp.hostInstance as ShadowGenerator).addShadowCaster(\n            mesh as Mesh,\n            instance.customProps.childMeshesNotTracked === true\n          )\n        }\n      }\n      tmp = tmp.parent\n    }\n  }\n\n  /**\n   * This was copied from 'NodeLifecycleListener'.  TODO: Would be better to have inheritance hierarchy like 'BaseLifecycleListener'.\n   */\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>) {\n    super.onParented(parent, child)\n    if (parent.metadata.isNode && child.metadata.isNode) {\n      // TODO: consider add option for setParent(), which parents and maintains mesh pos/rot in world space\n      // child.hostInstance.setParent(parent.hostInstance)\n      child.hostInstance.parent = parent.hostInstance\n    }\n  }\n}\n","import { StandardMaterial } from '@babylonjs/core/Materials/standardMaterial.js'\nimport { Color3 } from '@babylonjs/core/Maths/math.color.js'\nimport { Mesh } from '@babylonjs/core/Meshes/mesh.js'\nimport { AdvancedDynamicTexture } from '@babylonjs/gui/2D/advancedDynamicTexture.js'\nimport { Grid } from '@babylonjs/gui/2D/controls/grid.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { ADTCustomProps, VirtualKeyboardCustomProps } from '../CustomProps'\nimport { FiberAdvancedDynamicTextureProps } from '../generatedProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class AdvancedDynamicTextureLifecycleListener extends BaseLifecycleListener<\n  AdvancedDynamicTexture,\n  FiberAdvancedDynamicTextureProps\n> {\n  private materialRef: Nullable<StandardMaterial> = null\n\n  onUnmount(): void {\n    if (this.materialRef !== null) {\n      this.materialRef.dispose()\n    }\n  }\n\n  onMount(instance: CreatedInstance<AdvancedDynamicTexture>): void {\n    instance.state = { added: true } // allow children to attach\n    this.addControls(instance)\n\n    if ((instance.customProps as ADTCustomProps).createForParentMesh) {\n      // console.log('for parent mesh', instance.parent ? instance.parent.babylonJsObject : 'error: no parent object')\n\n      const mesh: Mesh = instance.parent!.hostInstance // should crawl parent hierarchy for a mesh\n      // console.error('we will be attaching the mesh:', mesh.name, mesh);\n\n      const material = (this.materialRef = new StandardMaterial(\n        'AdvancedDynamicTextureMaterial',\n        mesh.getScene()\n      ))\n      material.backFaceCulling = false\n      material.diffuseColor = Color3.Black()\n      material.specularColor = Color3.Black()\n\n      if (instance.hostInstance === undefined) {\n        console.error('missing instance')\n      } else {\n        if (this.props.hasAlpha) {\n          material.diffuseTexture = instance.hostInstance\n          material.emissiveTexture = instance.hostInstance\n          instance.hostInstance.hasAlpha = true\n        } else {\n          material.emissiveTexture = instance.hostInstance\n          material.opacityTexture = instance.hostInstance\n        }\n      }\n\n      mesh.material = material\n\n      // set to true unless explicitly not wanted.\n      // connects the texture to a hosting mesh to enable interactions\n      const supportPointerMove = (this.props as any).supportPointerMove !== false ? true : false\n\n      instance.hostInstance!.attachToMesh(mesh, supportPointerMove)\n    }\n  }\n\n  addControls(instance: CreatedInstance<any>) {\n    // When there is a panel, it must be added before the children. Otherwise there is no UtilityLayer to attach to.\n    // This project before 'react-reconciler' was added from parent up the tree.  'react-reconciler' wants to do the opposite.\n    instance.children.forEach((child) => {\n      if (child.metadata.isGUI2DControl === true) {\n        if (instance.metadata.isGUI2DGrid === true) {\n          const { gridRow, gridColumn } = child.customProps\n          ;(instance.hostInstance as Grid).addControl(child.hostInstance, gridRow, gridColumn)\n        } else {\n          instance.hostInstance!.addControl(child.hostInstance)\n        }\n\n        child.state = child.state ? { ...child.state, added: true } : { added: true }\n      }\n    })\n\n    if (\n      (instance.customProps as VirtualKeyboardCustomProps).connectControlNames !== undefined &&\n      Array.isArray((instance.customProps as VirtualKeyboardCustomProps).connectControlNames)\n    ) {\n      const controlNames: string[] = (instance.customProps as VirtualKeyboardCustomProps)\n        .connectControlNames!\n      let root = instance\n      while (root.parent !== null) {\n        root = root.parent\n      }\n      this.connect(instance, root, controlNames)\n    }\n\n    instance.children.forEach((child) => {\n      this.addControls(child)\n    })\n  }\n\n  connect(\n    keyboard: CreatedInstance<any>,\n    searchInstance: CreatedInstance<any>,\n    controlNames: string[]\n  ) {\n    if (\n      searchInstance.metadata.isGUI2DControl &&\n      searchInstance.hostInstance &&\n      controlNames.indexOf(searchInstance.hostInstance.name) !== -1\n    ) {\n      // console.log(keyboard.hostInstance, '.connect(->', searchInstance.hostInstance)\n      keyboard.hostInstance.connect(searchInstance.hostInstance)\n    }\n\n    searchInstance.children.forEach((child) => this.connect(keyboard, child, controlNames))\n  }\n}\n\n/**\n * This is attached by convention in react-reconciler HostConfig.\n */\nexport class ADTFullscreenUILifecycleListener extends AdvancedDynamicTextureLifecycleListener {\n  /* empty */\n}\n","import { Behavior, IBehaviorAware } from '@babylonjs/core/Behaviors/behavior.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class BehaviorLifecycleListener extends BaseLifecycleListener<Behavior<any>, any> {\n  private behaviorAware: Nullable<IBehaviorAware<any>> = null\n  private behavior: Nullable<Behavior<any>> = null\n\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>) {\n    super.onParented(parent, child)\n    if (\n      parent.metadata.isNode &&\n      parent.hostInstance?.addBehavior /* TODO: verify if this needs to be a mesh */ &&\n      child.metadata.isBehavior /* always true? */\n    ) {\n      parent.hostInstance.addBehavior(child.hostInstance)\n      this.behaviorAware = parent.hostInstance\n      this.behavior = child.hostInstance\n    } else {\n      console.warn('Could not locate IBehaviorAware on Behavior parent.')\n    }\n  }\n  onUnmount(): void {\n    if (this.behaviorAware) {\n      this.behaviorAware.removeBehavior(this.behavior!)\n    }\n  }\n}\n","import { Camera } from '@babylonjs/core/Cameras/camera.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { FiberCameraProps } from '../generatedProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class CameraLifecycleListener extends BaseLifecycleListener<\n  Camera,\n  FiberCameraProps\n> {\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>): any {\n    super.onParented(parent, child)\n    if (parent.metadata.isNode && child.metadata.isNode) {\n      // TODO: consider add option for setParent(), which parents and maintains mesh pos/rot in world space\n      // child.hostInstance.setParent(parent.hostInstance)\n      child.hostInstance.parent = parent.hostInstance\n    }\n  }\n\n  onMount(instance: CreatedInstance<any>): void {\n    if (instance.hostInstance === undefined) {\n      console.error('Missing instance')\n      return\n    }\n\n    // prevent default unless explicitly specified.\n    const camera = instance.hostInstance as Camera\n    const noPreventDefault = this.props.noPreventDefault === false ? false : true\n\n    // console.log('camera.attachControl:', camera, this.canvas, noPreventDefault)\n    // should be a custom property for autoAttaching?  Will be an issue for multiple cameras.\n    camera.attachControl(this.scene.getEngine().getRenderingCanvas(), noPreventDefault)\n\n    // Targeting removed from here - handled by TargetPropsHandler\n  }\n}\n","import { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { applyInitialPropsToCreatedInstance } from '../UpdateInstance'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default abstract class DeferredCreationLifecycleListener<T, U> extends BaseLifecycleListener<\n  T,\n  U\n> {\n  /**\n   * Not part of LifecycleListener interface - needed by template method 'onMount'.\n   */\n  abstract createInstance: (instance: CreatedInstance<T>, scene: Scene, props: any) => Nullable<T>\n\n  onMount(instance: CreatedInstance<T>): void {\n    const createdInstance = this.createInstance(instance, this.scene, this.props)\n    if (createdInstance === undefined) {\n      console.warn('was unable to create deferred instance')\n    } else {\n      // Meed to assign deferred props (from delayed creation) or they are lost:\n      if (instance.deferredCreationProps && instance.propsHandlers) {\n        applyInitialPropsToCreatedInstance(instance, instance.deferredCreationProps)\n      } else {\n        console.warn('cannot assign deferred props.  they are lost.')\n      }\n      instance.deferredCreationProps = undefined\n    }\n  }\n}\n","import { DirectionalLight } from '@babylonjs/core/Lights/directionalLight.js'\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator.js'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { Observer } from '@babylonjs/core/Misc/observable.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { ShadowGeneratorCustomProps } from '../CustomProps'\nimport DeferredCreationLifecycleListener from './DeferredCreationLifecycleListener'\n\n/**\n * Create a Shadow Generator (CascadedShadowGenerator extends ShadowGenerator, so add/remove shadow casters is from parent class)\n */\nexport default abstract class BaseShadowGeneratorLifecycleListener<\n  T extends ShadowGenerator,\n  U\n> extends DeferredCreationLifecycleListener<T, U> {\n  private onMeshAddedObservable: Nullable<Observer<AbstractMesh>> = null\n  private onMeshRemovedObservable: Nullable<Observer<AbstractMesh>> = null\n\n  abstract createShadowGenerator: (\n    mapSize: number,\n    light: DirectionalLight,\n    useFullFloatFirst?: boolean\n  ) => T\n\n  abstract get generatorType(): string\n\n  createInstance = (instance: CreatedInstance<T>, scene: Scene, props: any): Nullable<T> => {\n    let tmp: CreatedInstance<any> | null = instance.parent\n    let result: Nullable<T> = null\n\n    while (tmp !== null) {\n      if (tmp.metadata.isShadowLight) {\n        // console.log(`Creating ${this.generatorType}  size: ${props.mapSize} with light`, tmp.hostInstance);\n        instance.hostInstance = result = this.createShadowGenerator(\n          props.mapSize,\n          tmp.hostInstance,\n          props.useFullFloatFirst\n        )\n        break\n      }\n      tmp = tmp.parent\n    }\n\n    if (instance.hostInstance === undefined) {\n      console.error(`${this.generatorType} has no light source.`)\n      return null\n    }\n\n    if ((instance.customProps as ShadowGeneratorCustomProps).shadowCastChildren === true) {\n      // recursively add children once the generator has completed deferred creation - after this meshes will add themselves from their LifecycleListener.\n      const addShadowCasters = (children: CreatedInstance<any>[], generator: T): void => {\n        for (const child of children) {\n          if (child.metadata.isMesh === true) {\n            generator.addShadowCaster(\n              child.hostInstance as AbstractMesh,\n              child.customProps.childMeshesNotTracked === true\n            )\n          }\n          if (child.children.length !== 0) {\n            addShadowCasters(child.children, generator)\n          }\n        }\n      }\n      addShadowCasters(instance.children, instance.hostInstance)\n    } else if ((instance.customProps as ShadowGeneratorCustomProps).shadowCasters) {\n      if (!Array.isArray((instance.customProps as ShadowGeneratorCustomProps).shadowCasters)) {\n        console.error(\n          'Shadow casters must be an array (of strings).',\n          (instance.customProps as ShadowGeneratorCustomProps).shadowCasters\n        )\n        return null\n      }\n\n      const shadowCasters: string[] = (instance.customProps as ShadowGeneratorCustomProps)\n        .shadowCasters!\n\n      // TODO: also need a listener for models or if we want to add a predicate:\n      this.onMeshAddedObservable = scene.onNewMeshAddedObservable.add((mesh: AbstractMesh) => {\n        if (shadowCasters.indexOf(mesh.name) >= 0) {\n          instance.hostInstance!.addShadowCaster(mesh)\n        }\n      })\n\n      this.onMeshRemovedObservable = scene.onMeshRemovedObservable.add((mesh: AbstractMesh) => {\n        if (shadowCasters.indexOf(mesh.name) >= 0) {\n          instance.hostInstance!.removeShadowCaster(mesh)\n        }\n      })\n\n      scene.meshes.forEach((mesh: AbstractMesh) => {\n        if (shadowCasters.indexOf(mesh.name) >= 0) {\n          instance.hostInstance!.addShadowCaster(mesh)\n        }\n      })\n    } else if ((instance.customProps as ShadowGeneratorCustomProps).shadowCastersExcluding) {\n      if (\n        !Array.isArray((instance.customProps as ShadowGeneratorCustomProps).shadowCastersExcluding)\n      ) {\n        console.error(\n          'Shadow casters excluding must be an array (of strings).',\n          (instance.customProps as ShadowGeneratorCustomProps).shadowCastersExcluding\n        )\n      } else {\n        const shadowCastersExcluding: string[] = (\n          instance.customProps as ShadowGeneratorCustomProps\n        ).shadowCastersExcluding!\n\n        // TODO: also need a listener for models or if we want to add a predicate:\n        this.onMeshAddedObservable = scene.onNewMeshAddedObservable.add((mesh: AbstractMesh) => {\n          if (shadowCastersExcluding.indexOf(mesh.name) === -1) {\n            instance.hostInstance!.addShadowCaster(mesh)\n          }\n        })\n\n        this.onMeshRemovedObservable = scene.onMeshRemovedObservable.add((mesh: AbstractMesh) => {\n          if (shadowCastersExcluding.indexOf(mesh.name) === -1) {\n            instance.hostInstance!.removeShadowCaster(mesh)\n          }\n        })\n\n        scene.meshes.forEach((mesh: AbstractMesh) => {\n          if (shadowCastersExcluding.indexOf(mesh.name) === -1) {\n            instance.hostInstance!.addShadowCaster(mesh)\n          }\n        })\n      }\n    }\n\n    return result\n  }\n\n  onUnmount(): void {\n    if (this.onMeshAddedObservable !== null) {\n      this.scene.onNewMeshAddedObservable.remove(this.onMeshAddedObservable)\n      this.onMeshAddedObservable = null\n    }\n\n    if (this.onMeshRemovedObservable !== null) {\n      this.scene.onMeshRemovedObservable.remove(this.onMeshRemovedObservable)\n      this.onMeshRemovedObservable = null\n    }\n  }\n}\n","import { DirectionalLight } from '@babylonjs/core/Lights/directionalLight.js'\nimport { CascadedShadowGenerator } from '@babylonjs/core/Lights/Shadows/cascadedShadowGenerator.js'\nimport BaseShadowGeneratorLifecycleListener from './BaseShadowGeneratorLifecycleListener'\n\nexport default class CascadedShadowGeneratorLifecycleListener extends BaseShadowGeneratorLifecycleListener<\n  CascadedShadowGenerator,\n  any\n> {\n  createShadowGenerator = (\n    mapSize: number,\n    light: DirectionalLight,\n    useFullFloatFirst?: boolean\n  ) => {\n    return new CascadedShadowGenerator(mapSize, light, useFullFloatFirst)\n  }\n\n  get generatorType(): string {\n    return 'CascadedShadowGenerator'\n  }\n}\n","import { EngineView } from '@babylonjs/core/Engines/Extensions/engine.views.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport DeferredCreationLifecycleListener from './DeferredCreationLifecycleListener'\n\n/**\n * These have no constructor.  Are only created from the engine.\n */\nexport default class EngineViewLifecycleListener extends DeferredCreationLifecycleListener<\n  EngineView,\n  any\n> {\n  createInstance = (\n    instance: CreatedInstance<EngineView>,\n    scene: Scene,\n    props: any\n  ): Nullable<EngineView> => {\n    const canvas: Nullable<HTMLCanvasElement> =\n      props.canvas ?? this.scene.getEngine().getRenderingCanvas()\n    if (canvas === null) {\n      return null\n    }\n\n    instance.hostInstance = scene.getEngine().registerView(canvas, props.camera)\n    return instance.hostInstance\n  }\n\n  onUnmount(): void {\n    const canvas: Nullable<HTMLCanvasElement> = this.scene.getEngine().getRenderingCanvas()\n    if (canvas !== null) {\n      this.scene.getEngine().unRegisterView(canvas)\n    }\n  }\n}\n","import { EnvironmentHelper } from '@babylonjs/core/Helpers/environmentHelper.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class EnvironmentHelperLifecycleListener extends BaseLifecycleListener<\n  EnvironmentHelper,\n  any\n> {\n  onMount(instance: CreatedInstance<EnvironmentHelper>): void {\n    if (instance.hostInstance === undefined) {\n      console.error('Missing instance')\n      return\n    }\n\n    // for TypeScript people use <... setMainColor={[mainColor]} />\n    // NOTE: this is missing in FiberEnvironmentHelperProps, so will fail in autocompletion as well as in TypeScript projects.\n    if (this.props.mainColor) {\n      instance.hostInstance.setMainColor(this.props.mainColor)\n    }\n\n    if (this.props.teleportEnvironmentGround) {\n      console.error(\n        'need to enable teleportation to ground (also from VRExperienceHelper, so call order has no impact.'\n      )\n    }\n  }\n}\n","import BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class FallbackLifecycleListener extends BaseLifecycleListener<any, any> {}\n","import { Gizmo } from '@babylonjs/core/Gizmos/gizmo.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { GizmoCustomProps } from '../CustomProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class GizmoLifecycleListener extends BaseLifecycleListener<Gizmo, GizmoCustomProps> {\n  onMount(instance: CreatedInstance<Gizmo>) {\n    const gizmo = instance.hostInstance!\n    const gizmoProps: GizmoCustomProps = instance.customProps\n\n    if (gizmoProps.skipUtilityLayerAttach !== true) {\n      let tmp: CreatedInstance<any> | null = instance.parent\n\n      let foundUtilityLayerRender = false\n      while (tmp !== null) {\n        if (tmp.metadata && tmp.metadata.isUtilityLayerRenderer === true) {\n          gizmo.gizmoLayer = tmp.hostInstance\n          foundUtilityLayerRender = true\n          break\n        }\n        tmp = tmp.parent\n      }\n\n      if (foundUtilityLayerRender !== true) {\n        console.warn('utility layer not found (if intentional use skipUtilityLayerAttach)')\n      }\n    }\n\n    if (\n      gizmoProps.skipAutoAttach !== true ||\n      (gizmoProps.attachGizmoToMesh !== false && gizmoProps.attachGizmoToNode !== false)\n    ) {\n      const searchType =\n        gizmoProps.attachGizmoToMesh === undefined && gizmoProps.attachGizmoToNode === undefined\n          ? null // default with no attach preference specified\n          : gizmoProps.attachGizmoToMesh === true\n          ? 'mesh'\n          : gizmoProps.attachGizmoToNode === true\n          ? 'node'\n          : null\n\n      let tmp: CreatedInstance<any> | null = instance.parent\n      while (tmp !== null) {\n        // Note: LightGizmo expects attachedMesh when assigning light, so check Mesh first\n        // https://forum.babylonjs.com/t/lightgizmo-attaching-a-node/23653/3\n        if ((searchType === null || searchType === 'mesh') && tmp.metadata?.isMesh === true) {\n          gizmo.attachedMesh = tmp.hostInstance\n          break\n        }\n        if ((searchType === null || searchType === 'node') && tmp.metadata?.isNode === true) {\n          gizmo.attachedNode = tmp.hostInstance\n          break\n        }\n        tmp = tmp.parent\n      }\n    }\n  }\n}\n","import { GizmoManager } from '@babylonjs/core/Gizmos/gizmoManager.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { FiberGizmoManagerProps } from '../generatedProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class GizmoManagerLifecycleListener extends BaseLifecycleListener<\n  GizmoManager,\n  FiberGizmoManagerProps\n> {\n  onChildAdded(child: CreatedInstance<any>, parent: CreatedInstance<any>): void {\n    const gizmoManager: GizmoManager = parent.hostInstance! as GizmoManager\n    // TODO: check usePointerToAttachGizmos?\n    if (child.metadata && child.metadata.isGizmo !== true) {\n      if (child.metadata.isNode === true) {\n        gizmoManager.attachToNode(child.hostInstance)\n      } else if (child.metadata.isMesh === true) {\n        gizmoManager.attachToMesh(child.hostInstance)\n      }\n    }\n  }\n}\n","import {\n  checkPrimitiveDiff,\n  HasPropsHandlers,\n  PropertyUpdate,\n  PropsHandler,\n} from '../../PropsHandler'\n\nexport type RowOrColumnDefinitionProps = {\n  value: number\n  unit?: number\n}\n\nexport class RowOrColumnDefinitionPropsHandlers\n  implements PropsHandler<RowOrColumnDefinitionProps>\n{\n  getPropertyUpdates(\n    oldProps: RowOrColumnDefinitionProps,\n    newProps: RowOrColumnDefinitionProps\n  ): PropertyUpdate[] | null {\n    const changedProps: PropertyUpdate[] = []\n    checkPrimitiveDiff(oldProps.value, newProps.value, 'value', changedProps)\n    checkPrimitiveDiff(oldProps.unit, newProps.unit, 'unit', changedProps)\n    return changedProps.length === 0 ? null : changedProps\n  }\n}\n\n/**\n * Handles property updates.\n */\nexport class RowOrColumnDefinitionPropsHandler\n  implements HasPropsHandlers<RowOrColumnDefinitionProps>\n{\n  private propsHandlers: PropsHandler<RowOrColumnDefinitionProps>[]\n\n  constructor() {\n    this.propsHandlers = [new RowOrColumnDefinitionPropsHandlers()]\n  }\n\n  getPropsHandlers(): PropsHandler<RowOrColumnDefinitionProps>[] {\n    return this.propsHandlers\n  }\n\n  addPropsHandler(propHandler: PropsHandler<RowOrColumnDefinitionProps>): void {\n    this.propsHandlers.push(propHandler)\n  }\n}\n","import { Control } from '@babylonjs/gui/2D/controls/control.js'\nimport { Grid } from '@babylonjs/gui/2D/controls/grid.js'\nimport { VirtualKeyboard } from '@babylonjs/gui/2D/controls/virtualKeyboard.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { VirtualKeyboardCustomProps } from '../CustomProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class GUI2DControlLifecycleListener extends BaseLifecycleListener<Control, any> {\n  onMount(instance?: CreatedInstance<Control>): void {\n    if (instance === undefined) {\n      console.error('Missing instance')\n      return\n    }\n\n    if (\n      (instance.customProps as VirtualKeyboardCustomProps).defaultKeyboard === true &&\n      instance.hostInstance instanceof VirtualKeyboard\n    ) {\n      // TODO: Generate from factory method.  VirtualKeyboard.CreateDefaultLayout()\n      instance.hostInstance.addKeysRow(['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '\\u2190'])\n      instance.hostInstance.addKeysRow(['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'])\n      instance.hostInstance.addKeysRow([\n        'a',\n        's',\n        'd',\n        'f',\n        'g',\n        'h',\n        'j',\n        'k',\n        'l',\n        ';',\n        \"'\",\n        '\\u21B5',\n      ])\n      instance.hostInstance.addKeysRow(['\\u21E7', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/'])\n      instance.hostInstance.addKeysRow([' '], [{ width: '200px' }])\n    }\n\n    if (instance.state && instance.state.added === true) {\n      return\n    }\n\n    let addedParent: CreatedInstance<any> | null = null\n\n    let tmp = instance.parent\n    while (tmp) {\n      if (tmp.metadata.isGUI2DControl) {\n        if (tmp.state && tmp.state.added === true) {\n          addedParent = tmp\n          break\n        }\n      }\n      tmp = tmp.parent\n    }\n\n    if (addedParent) {\n      this.addControls(addedParent)\n    }\n  }\n\n  /**\n   * BabylonJS won't re-add the same control twice, so it's a safe operation to add.\n   *\n   * @param instance contol to recursively add children to.\n   */\n  addControls(instance: CreatedInstance<any>) {\n    instance.children.forEach((child) => {\n      if (child.metadata.isGUI2DControl === true) {\n        if (instance.metadata.isGUI2DGrid === true) {\n          const { gridRow, gridColumn } = child.customProps\n          ;(instance.hostInstance as Grid).addControl(child.hostInstance, gridRow, gridColumn)\n        } else {\n          instance.hostInstance!.addControl(child.hostInstance)\n        }\n\n        child.state = { added: true }\n      }\n    })\n\n    instance.children.forEach((child) => {\n      this.addControls(child)\n    })\n  }\n}\n","import { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { Control3D } from '@babylonjs/gui/3D/controls/control3D.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { Control3DCustomProps } from '../CustomProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class GUI3DControlLifecycleListener extends BaseLifecycleListener<Control3D, any> {\n  onMount(instance: CreatedInstance<Control3D>): void {\n    if (instance.state && instance.state.added === true) {\n      return\n    }\n\n    let addedParent: CreatedInstance<any> | null = null\n\n    let tmp = instance.parent\n    while (tmp) {\n      if (tmp.metadata.isGUI3DControl === true) {\n        if (tmp.state && tmp.state.added === true) {\n          addedParent = tmp\n          break\n        }\n      }\n      tmp = tmp.parent\n    }\n\n    if (addedParent) {\n      this.addControls(addedParent, addedParent)\n    }\n  }\n\n  addControls(instance: CreatedInstance<any>, last3DGuiControl: CreatedInstance<any>) {\n    const last3d: CreatedInstance<any> =\n      instance.metadata.isGUI3DControl === true ? instance : last3DGuiControl\n\n    instance.children.forEach((child) => {\n      if ((last3d.customProps as Control3DCustomProps).childrenAsContent === true) {\n        last3d.hostInstance.content = child.hostInstance // child.hostInstance will be GUI.Control (ie: 2D)\n        child.state = { added: true, content: true }\n      } else if (child.metadata.isGUI3DControl === true) {\n        last3d.hostInstance.addControl(child.hostInstance)\n\n        // NOTE: this must be called after .addControl(child.hostInstance).\n        if ((child.customProps as Control3DCustomProps).linkToTransformNodeByName) {\n          const toLinkTo: Nullable<AbstractMesh> = this.scene!.getMeshByName(\n            (child.customProps as Control3DCustomProps).linkToTransformNodeByName!\n          )\n          if (toLinkTo !== null) {\n            child.hostInstance.linkToTransformNode(toLinkTo)\n            // toLinkTo.computeWorldMatrix()\n          } else {\n            console.error(\n              'linkToTransformNode cannot find Mesh:',\n              (instance.customProps as Control3DCustomProps).linkToTransformNodeByName,\n              ' and does not have a scene listener for added meshes. Declare Mesh earlier or add an issue on github (TransformNode does not work).'\n            )\n          }\n        }\n\n        child.state = { added: true }\n      }\n    })\n\n    if (instance.children.length > 0) {\n      instance.children.forEach((child) => {\n        if (!child.state || child.state.content !== true) {\n          if (\n            child.state &&\n            child.state.added === true &&\n            typeof (child.customProps as Control3DCustomProps).onControlAdded === 'function'\n          ) {\n            ;(child.customProps as Control3DCustomProps).onControlAdded!(child)\n          }\n\n          this.addControls(child, last3d)\n        }\n      })\n    }\n  }\n}\n","import { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { GUI3DManager } from '@babylonjs/gui/3D/gui3DManager.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { Control3DCustomProps } from '../CustomProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class GUI3DManagerLifecycleListener extends BaseLifecycleListener<\n  GUI3DManager,\n  any\n> {\n  onMount(instance?: CreatedInstance<GUI3DManager>): void {\n    if (instance === undefined) {\n      console.error('Missing instance')\n      return\n    }\n\n    this.addControls(instance, instance)\n  }\n\n  /**\n   * We may have BoundComponents inbetween gui3d controls.\n   */\n  addControls(instance: CreatedInstance<any>, last3DGuiControl: CreatedInstance<any>) {\n    // When there is a panel, it must be added before the children. Otherwise there is no UtilityLayer to attach to.\n    // This project before 'react-reconciler' was added from parent up the tree.  'react-reconciler' wants to do the opposite.\n    instance.children.forEach((child: CreatedInstance<any>) => {\n      if (child.metadata.isGUI3DControl === true) {\n        if (\n          'childrenAsContent' in last3DGuiControl.customProps &&\n          (last3DGuiControl.customProps as Control3DCustomProps).childrenAsContent === true\n        ) {\n          last3DGuiControl.hostInstance.content = child.hostInstance\n          child.state = { added: true, content: true }\n        } else {\n          last3DGuiControl.hostInstance.addControl(child.hostInstance)\n          child.state = { added: true }\n\n          // NOTE: this must be called after .addControl(child.hostInstance).\n          if (\n            'linkToTransformNodeByName' in child.customProps &&\n            (child.customProps as Control3DCustomProps).linkToTransformNodeByName\n          ) {\n            const toLinkTo: Nullable<AbstractMesh> = this.scene.getMeshByName(\n              (child.customProps as Control3DCustomProps).linkToTransformNodeByName!\n            )\n            if (toLinkTo !== null) {\n              child.hostInstance.linkToTransformNode(toLinkTo)\n            } else {\n              console.error(\n                'linkToTransformNode cannot find ',\n                (instance.customProps as Control3DCustomProps).linkToTransformNodeByName,\n                ' and does not have a scene listener for added meshes.  Declare earlier or add an issue on github.'\n              )\n            }\n          }\n        }\n      }\n\n      if (\n        child.state &&\n        child.state.added === true &&\n        (child.customProps as Control3DCustomProps).onControlAdded\n      ) {\n        ;(child.customProps as Control3DCustomProps).onControlAdded!(child)\n      }\n\n      if (!child.state || child.state.content !== true) {\n        const last3d: CreatedInstance<any> =\n          child.metadata.isGUI3DControl === true ? child : last3DGuiControl\n        this.addControls(child, last3d)\n      }\n    })\n\n    // Here we can now do a transform with an anchor point.\n    // console.error('transform gui3dmanager anchor missing')\n  }\n}\n","/**\n * Assign value to an object property\n *\n * @param value: What you are assigning\n * @param target: Target to assign value to\n * @param propertyPath Where to assign value to on target (path to assign.  ie: \"baseTexture\" or \"mesh.material\")\n *\n */\nexport function assignProperty(value: any, target: any, propertyPath: string | string[]) {\n  const propertyPaths: string[] = Array.isArray(propertyPath) ? propertyPath : [propertyPath]\n  propertyPaths.forEach((propPath) => {\n    const propsList: string[] = propPath.split('.')\n\n    propsList.forEach((prop: string, index: number) => {\n      // for assigning to arrays (ie: Texture to model -> meshes[1].material.albedoTexture)\n      const arrayRegex = /(?<arrayName>.*)\\[(?<arrayIndexString>\\d+)\\]$/\n      const match = prop.match(arrayRegex)\n\n      if (match && (match as any).groups) {\n        const { arrayName, arrayIndexString } = (match as any).groups\n        const arrayIndex = parseInt(arrayIndexString)\n        const arrayProp = target[arrayName]\n        if (\n          arrayProp === undefined ||\n          !Array.isArray(arrayProp) ||\n          arrayIndex >= arrayProp.length\n        ) {\n          console.error(\n            `Array not found or missing index (skipping) for property assignment: '${arrayName}[${arrayIndex}]'`,\n            target\n          )\n        } else {\n          if (index === propsList.length - 1) {\n            arrayProp[arrayIndex] = value\n          } else {\n            target = arrayProp[arrayIndex]\n          }\n        }\n      } else {\n        if (target[prop] === undefined) {\n          // create property if it doesn't exist.\n          console.warn(`Created property ${prop} on: (from ${propsList})`, target)\n          target[prop] = {}\n        }\n\n        if (index === propsList.length - 1) {\n          target[prop] = value\n        } else {\n          target = target[prop]\n        }\n      }\n    })\n  })\n}\n","import { Material } from '@babylonjs/core/Materials/material.js'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { MaterialCustomProps } from '../CustomProps'\nimport { FiberMaterialProps } from '../generatedProps'\nimport { assignProperty } from '../helper/property'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class MaterialsLifecycleListener extends BaseLifecycleListener<\n  Material,\n  FiberMaterialProps\n> {\n  onCreated(instance: CreatedInstance<Material>, scene: Scene) {\n    if ((instance.customProps as MaterialCustomProps).attachToMeshesByName) {\n      if (!Array.isArray((instance.customProps as MaterialCustomProps).attachToMeshesByName)) {\n        console.error(\n          'AttachToMeshesByName must be an array (of strings).',\n          (instance.customProps as MaterialCustomProps).attachToMeshesByName\n        )\n        return\n      }\n\n      if (instance.hostInstance === undefined) {\n        console.error('instance not assigned')\n        return\n      }\n\n      const meshNamesToAttachTo: string[] = (\n        instance.customProps as MaterialCustomProps\n      ).attachToMeshesByName!.slice(0)\n\n      // TODO: also need a listener for models or if we want to add a predicate:\n      scene.onNewMeshAddedObservable.add((mesh: AbstractMesh) => {\n        if (meshNamesToAttachTo.indexOf(mesh.name) >= 0) {\n          setTimeout(() => {\n            mesh.material = instance.hostInstance!\n          }, 0)\n        }\n      })\n\n      scene.meshes.forEach((mesh: AbstractMesh) => {\n        if (meshNamesToAttachTo.indexOf(mesh.name) >= 0) {\n          mesh.material = instance.hostInstance!\n        }\n      })\n    }\n  }\n\n  onMount(instance?: CreatedInstance<Material>) {\n    if (instance === undefined) {\n      console.error('Missing instance')\n      return\n    }\n\n    if (!(instance.customProps as MaterialCustomProps).attachToMeshesByName) {\n      const material = instance.hostInstance\n      let tmp: CreatedInstance<any> | null = instance.parent\n\n      while (tmp !== null) {\n        if (tmp.metadata && tmp.metadata.acceptsMaterials === true) {\n          if (instance.customProps.assignTo) {\n            assignProperty(material, tmp.hostInstance, instance.customProps.assignTo)\n          } else {\n            tmp.hostInstance.material = material\n          }\n          break\n        }\n        tmp = tmp.parent\n      }\n    }\n  }\n}\n","import { Node } from '@babylonjs/core/node'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { FiberNodeProps } from '../generatedProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class NodeLifecycleListener extends BaseLifecycleListener<Node, FiberNodeProps> {\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>) {\n    super.onParented(parent, child)\n    if (parent.metadata.isNode && child.metadata.isNode) {\n      // TODO: consider add option for setParent(), which parents and maintains mesh pos/rot in world space\n      // child.hostInstance.setParent(parent.hostInstance)\n      child.hostInstance.parent = parent.hostInstance\n    }\n  }\n}\n","import {\n  IPhysicsEnabledObject,\n  PhysicsImpostor,\n  PhysicsImpostorParameters,\n} from '@babylonjs/core/Physics/physicsImpostor.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport DeferredCreationLifecycleListener from './DeferredCreationLifecycleListener'\n\n/**\n * There is a lot going on in the PhysicsImpostor constructor, so we delay instantiation so that we have a target\n * 'object' before creation.\n */\nexport default class PhysicsImpostorLifecycleListener extends DeferredCreationLifecycleListener<\n  PhysicsImpostor,\n  any\n> {\n  private _parent: IPhysicsEnabledObject | undefined\n\n  createInstance = (\n    instance: CreatedInstance<PhysicsImpostor>,\n    scene: Scene,\n    props: any\n  ): Nullable<PhysicsImpostor> => {\n    if (!this._parent) {\n      return null\n    }\n    // these should be set from the props handler.  TODO: test.\n    const options: PhysicsImpostorParameters = props._options // constructor has a default { mass: 0 }\n\n    instance.hostInstance = new PhysicsImpostor(this._parent, props.type, options, this.scene!)\n    instance.hostInstance.object = this._parent\n    ;(this._parent as any).physicsImpostor = instance.hostInstance\n    // TODO: need to assign deferredCreationProps (@see ShadowGeneratorLifecycleListener).\n\n    return instance.hostInstance\n  }\n\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>): any {\n    super.onParented(parent, child)\n    // IPhysicsEnabledObject requires only position and rotationQuaternion\n    if (\n      parent.hostInstance.position === undefined ||\n      parent.hostInstance.rotationQuaternion === undefined\n    ) {\n      console.warn(\n        'PhysicsImpostor is parented to an element that does not appear to implement IPhysicsEnabledObject'\n      )\n    }\n    this._parent = parent.hostInstance\n  }\n}\n","import {\n  PhysicsAggregate,\n  PhysicsAggregateParameters,\n} from '@babylonjs/core/Physics/v2/physicsAggregate.js'\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport DeferredCreationLifecycleListener from './DeferredCreationLifecycleListener'\n\n/**\n * There is a lot going on in the PhysicsImpostor constructor, so we delay instantiation so that we have a target\n * 'object' before creation.\n */\nexport default class PhysicsImpostorLifecycleListener extends DeferredCreationLifecycleListener<\n  PhysicsAggregate,\n  any\n> {\n  private _parent: TransformNode | undefined\n\n  createInstance = (\n    instance: CreatedInstance<PhysicsAggregate>,\n    scene: Scene,\n    props: any\n  ): Nullable<PhysicsAggregate> => {\n    if (!this._parent) {\n      return null\n    }\n    // these should be set from the props handler.  TODO: test.\n    const options: PhysicsAggregateParameters = props._options // constructor has a default { mass: 0 }\n\n    instance.hostInstance = new PhysicsAggregate(this._parent, props.type, options, this.scene!)\n    instance.hostInstance.transformNode = this._parent\n    ;(this._parent as any).physicsImpostor = instance.hostInstance\n    // TODO: need to assign deferredCreationProps (@see ShadowGeneratorLifecycleListener).\n\n    return instance.hostInstance\n  }\n\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>): any {\n    super.onParented(parent, child)\n    // IPhysicsEnabledObject requires only position and rotationQuaternion\n    if (\n      parent.hostInstance.position === undefined ||\n      parent.hostInstance.rotationQuaternion === undefined\n    ) {\n      console.warn(\n        'PhysicsImpostor is parented to an element that does not appear to implement IPhysicsEnabledObject'\n      )\n    }\n    this._parent = parent.hostInstance\n  }\n}\n","import { DirectionalLight } from '@babylonjs/core/Lights/directionalLight.js'\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator.js'\nimport BaseShadowGeneratorLifecycleListener from './BaseShadowGeneratorLifecycleListener'\n\nexport default class ShadowGeneratorLifecycleListener extends BaseShadowGeneratorLifecycleListener<\n  ShadowGenerator,\n  any\n> {\n  createShadowGenerator = (\n    mapSize: number,\n    light: DirectionalLight,\n    useFullFloatFirst?: boolean\n  ) => {\n    return new ShadowGenerator(mapSize, light, useFullFloatFirst)\n  }\n\n  get generatorType(): string {\n    return 'ShadowGenerator'\n  }\n}\n","import { Scene } from '@babylonjs/core/scene.js'\nimport { PropChangeType, PropertyUpdate, PropsHandler, UpdatePayload } from '../PropsHandler'\n\n// This does not work when declared component with 'lockedTargetMeshName' is before the mesh with that name.\n// Need to wait for full commit mount of entire tree, so use in conjunction with LifecycleListner is best option.\nexport default class TargetPropsHandler implements PropsHandler<any> {\n  constructor(private scene: Scene) {}\n\n  getPropertyUpdates(oldProps: any, newProps: any): UpdatePayload {\n    const propertyUpdates: PropertyUpdate[] = []\n    if (\n      !oldProps.lockedTargetMeshName ||\n      oldProps.lockedTargetMeshName !== newProps.lockedTargetMeshName\n    ) {\n      if (typeof newProps.lockedTargetMeshName === 'string') {\n        propertyUpdates.push({\n          changeType: PropChangeType.Primitive,\n          propertyName: 'lockedTarget',\n          value: this.scene.getMeshByName(newProps.lockedTargetMeshName),\n          isSetAccessor: false,\n        })\n      }\n    }\n\n    return propertyUpdates\n  }\n}\n","import { Texture } from '@babylonjs/core/Materials/Textures/texture.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { assignProperty } from '../helper/property'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class TexturesLifecycleListener extends BaseLifecycleListener<Texture, any> {\n  onMount(instance: CreatedInstance<Texture>) {\n    const { assignTo } = instance.customProps\n    const texture = instance.hostInstance\n\n    let tmp: CreatedInstance<any> | null = instance.parent\n\n    // const parentHostInstance =\n    // parent.metadata.className === 'root' ? this.scene : parent.hostInstance\n\n    while (tmp !== null) {\n      if (\n        tmp.metadata &&\n        (tmp.metadata.isMaterial === true ||\n          tmp.metadata.className === 'Model' ||\n          tmp.metadata.className === 'root' ||\n          tmp.metadata.isLayer === true)\n      ) {\n        if (assignTo) {\n          if (tmp.metadata.className === 'root') {\n            // textures never have deferred instantiation:\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            assignProperty(texture, texture!.getScene(), assignTo)\n          } else {\n            assignProperty(texture, tmp.hostInstance, assignTo)\n          }\n        } else {\n          if (tmp.metadata.isLayer === true) {\n            continue\n          }\n          // maybe below case is more common, so let it default\n          tmp.hostInstance.diffuseTexture = texture\n        }\n        break\n      }\n      tmp = tmp.parent\n    }\n  }\n}\n","import { Camera } from '@babylonjs/core/Cameras/camera.js'\nimport { Viewport } from '@babylonjs/core/Maths/math.viewport.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { FiberViewportProps } from '../generatedProps'\nimport { assignProperty } from '../helper/property'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\nexport default class ViewportLifecycleListener extends BaseLifecycleListener<\n  Viewport,\n  FiberViewportProps\n> {\n  onMount(instance?: CreatedInstance<Viewport>) {\n    if (instance === undefined) {\n      console.error('Missing instance (for viewport)')\n      return\n    }\n\n    const viewport = instance.hostInstance as Viewport\n    let tmp: CreatedInstance<any> | null = instance.parent\n\n    while (tmp !== null) {\n      if (tmp.metadata && tmp.metadata.isCamera === true) {\n        if (instance.customProps.assignTo) {\n          assignProperty(viewport, tmp.hostInstance, instance.customProps.assignTo)\n        } else {\n          ;(tmp as CreatedInstance<Camera>).hostInstance!.viewport = viewport\n        }\n        break\n      }\n      tmp = tmp.parent\n    }\n  }\n}\n","import { VRExperienceHelper } from '@babylonjs/core/Cameras/VR/vrExperienceHelper.js'\nimport { CreatedInstance } from '../CreatedInstance'\nimport { VRExperienceHelperCustomProps } from '../CustomProps'\nimport { FiberVRExperienceHelperProps } from '../generatedProps'\nimport BaseLifecycleListener from './BaseLifecycleListener'\n\n/**\n * This should be replaced entirely with XR version.\n */\nexport default class VRExperienceHelperLifecycleListener extends BaseLifecycleListener<\n  VRExperienceHelper,\n  FiberVRExperienceHelperProps\n> {\n  onMount(instance: CreatedInstance<VRExperienceHelper>): void {\n    if ((this.props as VRExperienceHelperCustomProps).enableInteractions) {\n      instance.hostInstance!.enableInteractions()\n    }\n  }\n}\n","import { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { Grid } from '@babylonjs/gui/2D/controls/grid.js'\nimport { ValueAndUnit } from '@babylonjs/gui/2D/valueAndUnit.js'\nimport { RowOrColumnDefinitionProps, RowOrColumnDefinitionPropsHandler } from '.'\nimport { CreatedInstance } from '../../CreatedInstance'\nimport { DynamicHost } from '../../HostRegistrationStore'\nimport DeferredCreationLifecycleListener from '../DeferredCreationLifecycleListener'\n\n/**\n * We delay instantiation and when parented add a column definition to parent \"Grid\".\n */\nexport default class ColumnDefinitionLifecycleListener extends DeferredCreationLifecycleListener<\n  ValueAndUnit,\n  any\n> {\n  private _grid: Grid | undefined\n\n  createInstance = (\n    instance: CreatedInstance<ValueAndUnit>,\n    scene: Scene,\n    props: RowOrColumnDefinitionProps\n  ): Nullable<ValueAndUnit> => {\n    if (!this._grid) {\n      return null\n    }\n    this._grid.addColumnDefinition(props.value, props.unit === ValueAndUnit.UNITMODE_PIXEL)\n    instance.hostInstance = this._grid.getColumnDefinition(this._grid.columnCount - 1)!\n    return instance.hostInstance\n  }\n\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>): any {\n    super.onParented(parent, child)\n    // TODO: search hierarchy for a grid, but it should always be parent.\n    this._grid = parent.hostInstance\n  }\n}\n\nexport const ColumnDefinition: DynamicHost<ValueAndUnit, RowOrColumnDefinitionProps> = {\n  hostElementName: 'columnDefinition',\n\n  propHandlerInstance: new RowOrColumnDefinitionPropsHandler(),\n\n  hostFactory: (scene: Scene) => null,\n\n  lifecycleListenerFactory: (scene: Scene, props: any) =>\n    new ColumnDefinitionLifecycleListener(scene, props),\n\n  createInfo: {\n    creationType: 'Constructor',\n    libraryLocation: 'ValueAndUnit',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      /* value and unit! */\n    ],\n  },\n  // TODO: this should be \"M\"etadata\n  metadata: {\n    className: 'ColumnDefinition',\n    delayCreation: true,\n  },\n}\n","import { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { Grid } from '@babylonjs/gui/2D/controls/grid.js'\nimport { ValueAndUnit } from '@babylonjs/gui/2D/valueAndUnit.js'\nimport { RowOrColumnDefinitionProps, RowOrColumnDefinitionPropsHandler } from '.'\nimport { CreatedInstance } from '../../CreatedInstance'\nimport { DynamicHost } from '../../HostRegistrationStore'\nimport DeferredCreationLifecycleListener from '../DeferredCreationLifecycleListener'\n\n/**\n * We delay instantiation and when parented add a row definition to parent \"Grid\".\n */\nexport default class RowDefinitionLifecycleListener extends DeferredCreationLifecycleListener<\n  ValueAndUnit,\n  any\n> {\n  private _grid: Grid | undefined\n\n  createInstance = (\n    instance: CreatedInstance<ValueAndUnit>,\n    scene: Scene,\n    props: RowOrColumnDefinitionProps\n  ): Nullable<ValueAndUnit> => {\n    if (!this._grid) {\n      return null\n    }\n\n    this._grid.addRowDefinition(props.value, props.unit === ValueAndUnit.UNITMODE_PIXEL)\n    instance.hostInstance = this._grid.getRowDefinition(this._grid.rowCount - 1)!\n    return instance.hostInstance\n  }\n\n  onParented(parent: CreatedInstance<any>, child: CreatedInstance<any>): any {\n    super.onParented(parent, child)\n    // TODO: search hierarchy for a grid, but it should always be parent.\n    this._grid = parent.hostInstance\n  }\n}\n\nexport const RowDefinition: DynamicHost<ValueAndUnit, RowOrColumnDefinitionProps> = {\n  hostElementName: 'rowDefinition',\n\n  propHandlerInstance: new RowOrColumnDefinitionPropsHandler(),\n\n  hostFactory: (scene: Scene) => null,\n\n  lifecycleListenerFactory: (scene: Scene, props: any) =>\n    new RowDefinitionLifecycleListener(scene, props),\n\n  createInfo: {\n    creationType: 'Constructor',\n    libraryLocation: 'ValueAndUnit',\n    namespace: '@babylonjs/gui',\n    parameters: [\n      /* value and unit! */\n    ],\n  },\n  // TODO: this should be \"M\"etadata\n  metadata: {\n    className: 'RowDefinition',\n    delayCreation: true,\n  },\n}\n","import { IInspectable, InspectableType } from '@babylonjs/core/Misc/iInspectable.js'\nimport { Node } from '@babylonjs/core/node.js'\nimport { Scene } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport { ValueAndUnit } from '@babylonjs/gui/2D/valueAndUnit.js'\n\nimport ReactReconciler, { Fiber, HostConfig } from 'react-reconciler'\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n} from 'react-reconciler/constants.js'\n\nimport { CreationType, GeneratedParameter } from './codeGenerationDescriptors'\nimport { CreatedInstance, CreatedInstanceMetadata } from './CreatedInstance'\nimport * as CUSTOM_HOSTS from './customHosts'\nimport { ColumnDefinition } from './customHosts/grid/columnDefinition'\nimport { RowDefinition } from './customHosts/grid/rowDefinition'\nimport { AnyCustomProps, CustomProps } from './CustomProps'\nimport * as BABYLONEXT from './extensions'\nimport * as GENERATED from './generatedCode'\nimport { DynamicHost, HostRegistrationStore } from './HostRegistrationStore'\nimport { LifecycleListener } from './LifecycleListener'\nimport {\n  CustomPropsHandler,\n  HasPropsHandlers,\n  PropChangeType,\n  PropertyUpdate,\n  PropsHandler,\n  UpdatePayload,\n} from './PropsHandler'\nimport { applyInitialPropsToCreatedInstance, applyUpdateToInstance } from './UpdateInstance'\n\n// ** TODO: switch to node module 'scheduler', but compiler is not finding 'require()' exports currently...\ntype HostCreatedInstance<T> = CreatedInstance<T> | undefined\n\ntype Props = {\n  scene: Scene\n} & any\n\nexport type Container = {\n  scene: Nullable<Scene>\n  rootInstance: CreatedInstance<Scene>\n}\n\ntype HostContext = Container\ntype TimeoutHandle = number | undefined\ntype NoTimeout = number\n\n// TODO: get from react-reconciler directly via import - /constants in typings, but not in NPM.\n// const DiscreteEventPriority = 0b0000000000000000000000000000001;\n// const ContinuousEventPriority = 0b0000000000000000000000000000100;\n// const DefaultEventPriority = 0b0000000000000000000000000010000;\n\n// https://github.com/facebook/react/tree/main/packages/react-reconciler#getcurrenteventpriority\n// https://github.com/facebook/react/blob/main/packages/react-dom/src/events/ReactDOMEventListener.js#L410\nfunction getEventPriority(): number {\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window/event\n  const domEventName = window?.event?.type\n  switch (domEventName /* : DOMEventName */) {\n    case 'click':\n    case 'contextmenu':\n    case 'dblclick':\n    case 'dragend':\n    case 'dragstart':\n    case 'mousedown':\n    case 'mouseup':\n    case 'pointercancel':\n    case 'pointerdown':\n    case 'pointerup':\n      return DiscreteEventPriority\n    case 'drag':\n    case 'dragenter':\n    case 'dragexit':\n    case 'dragleave':\n    case 'dragover':\n    case 'mousemove':\n    case 'mouseout':\n    case 'mouseover':\n    // Not used by React but could be by user code:\n    // eslint-disable-next-line no-fallthrough\n    case 'mouseenter':\n    case 'mouseleave':\n    case 'pointermove':\n    case 'pointerout':\n    case 'pointerover':\n    case 'pointerenter':\n    case 'pointerleave':\n    case 'wheel':\n      return ContinuousEventPriority\n    default:\n      // Native fallback\n      return DefaultEventPriority\n  }\n}\n\nfunction createCreatedInstance<T, U extends HasPropsHandlers<any>>(\n  className: string,\n  hostInstance: T,\n  propsHandlers: U,\n  metadata: CreatedInstanceMetadata,\n  customProps?: CustomProps,\n  lifecycleListener?: LifecycleListener<T>\n): CreatedInstance<T> {\n  if ((propsHandlers as any).isTargetable === true) {\n    metadata.isTargetable = true\n  }\n\n  return {\n    children: [], // set later in lifecycle\n    customProps,\n    hostInstance,\n    lifecycleListener,\n    metadata,\n    observers: {},\n    parent: null, // set later in lifecycle\n    propsHandlers,\n  } as CreatedInstance<T>\n}\n\n/**\n * remove instance's children recursively\n *\n * @param parentInstance\n * @param child\n */\nfunction removeChild(parentInstance: CreatedInstance<any>, child: CreatedInstance<any>) {\n  if (child) {\n    const { hostInstance } = child\n\n    if (child.lifecycleListener) {\n      child.lifecycleListener.onUnmount()\n    }\n\n    if (child.metadata.isNode) {\n      ;(hostInstance as Node).parent = null\n    } else if (child.metadata.isGUI3DControl === true) {\n      console.error('3D remove control not implemented.')\n    }\n\n    if (\n      parentInstance.metadata &&\n      parentInstance.metadata.isGUI2DControl === true &&\n      child.metadata.isGUI2DControl === true\n    ) {\n      // NOTE: the if statement should be || and we may need to walk the tree to remove.\n      parentInstance.hostInstance.removeControl(child.hostInstance)\n    }\n\n    if (child.children) {\n      removeRecursive(child.children, child)\n    }\n\n    if (\n      child.hostInstance &&\n      child.customProps.disposeInstanceOnUnmount &&\n      typeof child.hostInstance.dispose === 'function'\n    ) {\n      hostInstance.dispose() // TODO: Consider adding metadata/descriptors as some dispose methods have optional args.\n    }\n\n    // fix: old version rootInstance.children was not cleaned, so the children array maybe huge over time\n    parentInstance.children = parentInstance.children.filter((ci) => ci !== child)\n    child.parent = null\n  }\n}\n\n/**\n * remove child recursive\n */\nfunction removeRecursive(array: any, parent: any, clone = false): void {\n  if (array) {\n    const target = clone ? [...array] : array\n    target.forEach((child: any) => removeChild(parent, child))\n  }\n}\n\nfunction addChild(\n  parent: CreatedInstance<any> | undefined,\n  child: CreatedInstance<any>,\n  childIndex?: number\n): void {\n  if (parent) {\n    if (!child) {\n      console.error('undefined child', parent)\n    } else {\n      // doubly linking child to parent\n      parent.children.push(child)\n      child.parent = parent\n    }\n  }\n\n  if (child && child.lifecycleListener && child.lifecycleListener.onParented) {\n    child.lifecycleListener.onParented(parent!, child)\n  }\n\n  if (parent && parent.lifecycleListener && parent.lifecycleListener.onChildAdded) {\n    parent.lifecycleListener.onChildAdded(child, parent)\n  }\n}\n\n/**\n * Allows constructor arguments to register for dynamically registered property transforms (should exclude undefined).\n * TODO: include other types or add \"PropsChangeType\" to GeneratedParameters (would increase bundle size)\n *\n * @param type generated name (not same as PropChangeType)\n * @param value parameter value\n */\nconst getConstructorValue = (type: string, value: any): any => {\n  switch (type) {\n    case 'BabylonjsCoreVector3': {\n      const v3result = CustomPropsHandler.HandlePropsChange(\n        PropChangeType.Vector3,\n        undefined,\n        value\n      )\n      return v3result.processed ? v3result.value : value\n    }\n    case 'BabylonjsCoreColor3': {\n      const c3result = CustomPropsHandler.HandlePropsChange(\n        PropChangeType.Vector3,\n        undefined,\n        value\n      )\n      return c3result.processed ? c3result.value : value\n    }\n    case 'BabylonjsCoreColor4': {\n      const c4result = CustomPropsHandler.HandlePropsChange(PropChangeType.Color4, undefined, value)\n      return c4result.processed ? c4result.value : value\n    }\n    default:\n      return value\n  }\n}\n\nconst ReactBabylonJSHostConfig: HostConfig<\n  string,\n  Props,\n  Container,\n  HostCreatedInstance<any>,\n  Record<string, never>, // text\n  Record<string, any>, // suspense\n  Record<string, any>, // hydratable\n  any /* this is a babylonjs object */,\n  HostContext,\n  UpdatePayload,\n  Record<string, never>, // TODO Placeholder for undocumented API in typings\n  TimeoutHandle,\n  NoTimeout\n> & {\n  // TODO: see if still needed (compare typings 28.0)\n  now: () => number\n} = {\n  // This has the reconciler include in call chain ie: appendChild, removeChild\n  get supportsMutation(): boolean {\n    return true\n  },\n\n  now: () => {\n    return Date.now() // TODO: use performance.now\n  },\n\n  // multiple renderers concurrently render using the same context objects. E.g. React DOM and React ART on the\n  // same page. DOM is the primary renderer; ART is the secondary renderer.\n  get isPrimaryRenderer(): boolean {\n    return false\n  },\n\n  get supportsPersistence(): boolean {\n    return false\n  },\n\n  // TODO: see if this will allow ie: improved HMR/fast refresh support.  Need to implement a lot of currently optional methods.\n  get supportsHydration(): boolean {\n    return false\n  },\n\n  // enables refs to the Babylon hosted instance\n  getPublicInstance: (instance: any) => {\n    return instance?.hostInstance\n  },\n\n  getRootHostContext: (rootContainerInstance: Container): HostContext => {\n    // this is the context you pass to your chilren, as parameter 'parentHostContext' from \"root\".\n    // So, opportunity to share context here via HostConfig further up tree.\n    return rootContainerInstance\n  },\n\n  // this is the context you pass down to children.  without this root will not be available to attach to in appendChildToContainer.\n  getChildHostContext: (\n    parentHostContext: HostContext,\n    type: string,\n    rootContainerInstance: Container\n  ): HostContext => {\n    return parentHostContext\n  },\n\n  getCurrentEventPriority(): number {\n    return getEventPriority()\n  },\n\n  prepareUpdate(\n    instance: HostCreatedInstance<any>,\n    type: string,\n    oldProps: Props,\n    newProps: Props,\n    rootContainerInstance: Container,\n    hostContext: HostContext\n  ): UpdatePayload {\n    if (!instance || (instance.metadata && instance.metadata.customType === true)) {\n      return null\n    }\n    const updatePayload: PropertyUpdate[] = []\n\n    // Only custom types will not have a fiber object to handle props changes\n    instance.propsHandlers!.getPropsHandlers().forEach((propHandler: PropsHandler<any>) => {\n      const handlerUpdates: PropertyUpdate[] | null = propHandler.getPropertyUpdates(\n        oldProps,\n        newProps\n      )\n      if (handlerUpdates !== null) {\n        updatePayload.push(...handlerUpdates)\n      }\n    })\n\n    return updatePayload.length === 0 ? null : updatePayload\n  },\n\n  clearContainer(container: Container): void {\n    container.rootInstance.children.splice(0)\n  },\n\n  insertBefore(\n    parentInstance: HostCreatedInstance<any>,\n    child: CreatedInstance<any>,\n    beforeChild: Record<string, never> | CreatedInstance<any> | undefined\n  ): void {\n    let index: number | undefined = undefined\n    if (parentInstance && beforeChild !== undefined) {\n      index = parentInstance.children.indexOf(beforeChild as CreatedInstance<any>)\n    }\n\n    addChild(parentInstance, child, index)\n  },\n\n  /**\n   * This is called when something is dynamically added to root (not on initial appendChildToContainer)\n   */\n  insertInContainerBefore(\n    container: Container,\n    child: CreatedInstance<any>,\n    beforeChild: CreatedInstance<any>\n  ) {\n    // Similar to appendChildToContainer, but indexed insertion\n    if (child) {\n      const index = container.rootInstance.children.indexOf(beforeChild)\n      if (index >= 0) {\n        container.rootInstance.children.splice(index, 0, child)\n      } else {\n        container.rootInstance.children.push(child)\n      }\n      // doubly link child to root.\n      child.parent = container.rootInstance\n    } else {\n      console.error('insertInContainerBefore. No child:', child)\n    }\n  },\n\n  createInstance: (\n    type: string,\n    props: Props,\n    rootContainerInstance: Container,\n    hostContext: HostContext,\n    internalInstanceHandle: Fiber\n  ): CreatedInstance<any> | undefined => {\n    // TODO: Make a registry like React Native host config or just build a map in /customHosts/index.ts.\n    const customTypes: string[] = []\n\n    // TODO: Check source for difference between hostContext and rootContainerInstance.\n    const { scene } = rootContainerInstance\n\n    if (customTypes.indexOf(type) !== -1) {\n      const metadata = {\n        className: type,\n        customType: true,\n        ...props.metadata,\n      }\n\n      const createdInstance: CreatedInstance<null> = {\n        children: [],\n        customProps: {},\n        hostInstance: null,\n        lifecycleListener: new (CUSTOM_HOSTS as any)[type + 'Fiber'](\n          scene,\n          scene!.getEngine(),\n          props\n        ),\n        metadata,\n        observers: {},\n        parent: null,\n        propsHandlers: undefined,\n      }\n\n      // onCreated and other lifecycle hooks are not called for built-in host\n      return createdInstance\n    }\n\n    // some types (ie: button) are called 'babylonjs-button'.\n    const underlyingClassName = (GENERATED.intrinsicClassMap as any)[type] || type\n\n    const classDefinition = (GENERATED as any)[`Fiber${underlyingClassName}`]\n\n    let dynamicRegisteredHost: DynamicHost<any, any> | undefined = undefined\n    if (classDefinition === undefined) {\n      const ownDynamicHosts: Record<string, DynamicHost<ValueAndUnit, any>> = {\n        rowDefinition: RowDefinition,\n        columnDefinition: ColumnDefinition,\n      }\n      if (underlyingClassName in ownDynamicHosts) {\n        dynamicRegisteredHost = ownDynamicHosts[underlyingClassName]\n      } else {\n        dynamicRegisteredHost = HostRegistrationStore.GetRegisteredHost(type)\n      }\n    }\n\n    if (classDefinition === undefined && dynamicRegisteredHost === undefined) {\n      throw new Error(\n        `Cannot generate type '${type}/${underlyingClassName}' inside 'react-babylonjs' (ie: no DOM rendering on HTMLCanvas)`\n      )\n    }\n\n    let metadata: CreatedInstanceMetadata\n    let babylonObject: any | undefined = undefined\n\n    // TODO: define this type as an export.\n    const customProps: AnyCustomProps = {\n      // Control3D\n      childrenAsContent: props.childrenAsContent === true, // ie: Button3D.container instead of .addControl()\n      // AdvancedDynamicTexture\n      createForParentMesh: props.createForParentMesh === true,\n      onControlAdded: typeof props.onControlAdded === 'function' ? props.onControlAdded : undefined,\n      connectControlNames: props.connectControlNames, // VirtualKeyboard to connect inputs by name.\n      defaultKeyboard: props.defaultKeyboard === true,\n      linkToTransformNodeByName: props.linkToTransformNodeByName,\n      shadowCasters: props.shadowCasters,\n      shadowCastersExcluding: props.shadowCastersExcluding,\n      attachToMeshesByName: props.attachToMeshesByName, // for materials - otherwise will attach to first parent that accepts materials\n      assignTo: props.assignTo, // here a lifecycle listener can dynamically attach to another property (ie: Mesh to DynamicTerrain -> 'mesh.material')\n      assignFrom: props.assignFrom,\n      disposeInstanceOnUnmount: props.assignFrom === undefined,\n      addIncludeOnlyChildren: props.addIncludeOnlyChildren === true,\n      childMeshesNotTracked: props.childMeshesNotTracked === true,\n      shadowCastChildren: props.shadowCastChildren,\n      skipAutoAttach: props.skipAutoAttach,\n      attachGizmoToMesh: props.attachGizmoToMesh,\n      attachGizmoToNode: props.attachGizmoToNode,\n      gridColumn: props.gridColumn,\n      gridRow: props.gridRow,\n    }\n\n    if (customProps.assignFrom !== undefined) {\n      // will be assigned once parented in lifecyclelistener\n      metadata =\n        dynamicRegisteredHost !== undefined\n          ? dynamicRegisteredHost.metadata\n          : classDefinition.Metadata\n    } else if (dynamicRegisteredHost !== undefined) {\n      metadata = dynamicRegisteredHost.metadata\n      if (metadata.delayCreation !== true) {\n        babylonObject = dynamicRegisteredHost.hostFactory(scene!, props)\n      }\n    } else {\n      const createInfoArgs = classDefinition.CreateInfo\n      metadata = classDefinition.Metadata\n      const generatedParameters: GeneratedParameter[] = createInfoArgs.parameters\n\n      if (props.fromInstance !== undefined) {\n        if (createInfoArgs.namespace.startsWith('@babylonjs/')) {\n          const clazz: any = GENERATED.babylonClassFactory(type)\n          // instanceof will check prototype and derived classes (ie: can assign Mesh instance to a Node)\n          if (props.fromInstance instanceof clazz) {\n            babylonObject = props.fromInstance\n            customProps.disposeInstanceOnUnmount = props.disposeInstanceOnUnmount === true\n          } else {\n            // prevent assigning incorrect type.\n            console.error('fromInstance wrong type.', props.fromInstance, clazz)\n          }\n        } else {\n          console.error('cannot generate non babylonjs using fromInstance')\n        }\n      } else {\n        // console.log(\"generated params:\", generatedParameters)\n        const args = generatedParameters.map((generatedParameter) => {\n          if (Array.isArray(generatedParameter.type)) {\n            // TODO: if all props are missing, warn if main prop (ie: options) is required.\n            const newParameter = {} as Record<string, any>\n            generatedParameter.type.forEach((subParameter) => {\n              const subPropValue = getConstructorValue(\n                subParameter.type as string,\n                props[subParameter.name]\n              )\n              if (\n                subPropValue === undefined &&\n                subParameter.optional === false &&\n                generatedParameter.optional === false\n              ) {\n                console.warn('Missing a required secondary property:', subParameter.name)\n              } else {\n                newParameter[subParameter.name] = subPropValue\n              }\n            })\n            return newParameter\n          } else {\n            let value = getConstructorValue(generatedParameter.type, props[generatedParameter.name])\n            if (value === undefined) {\n              // NOTE: we removed the hosted Scene component, which needs (generatedParameter.type == \"BabylonjsCoreEngine\")\n              // SceneOrEngine type is Scene\n              if (\n                generatedParameter.type.includes('BabylonjsCoreScene') ||\n                (generatedParameter.type === 'any' && generatedParameter.name === 'scene')\n              ) {\n                // MeshBuild.createSphere(name: string, options: {...}, scene: any)\n                // console.log('Assigning scene to:', type, generatedParameter)\n                value = scene\n              }\n            }\n\n            if (value === undefined && generatedParameter.optional === false) {\n              console.warn(\n                `On ${type} you are missing a non-optional parameter '${generatedParameter.name}' of type '${generatedParameter.type}'`\n              )\n            }\n\n            return value\n          }\n        })\n\n        if (createInfoArgs.creationType === CreationType.FactoryMethod) {\n          // console.warn(`creating from Factory: ${createInfoArgs.libraryLocation}.${createInfoArgs.factoryMethod}(...args).  args:`, args);\n          babylonObject = GENERATED.babylonClassFactory(createInfoArgs.libraryLocation)[\n            createInfoArgs.factoryMethod!\n          ](...args)\n        } else {\n          if (metadata.delayCreation !== true) {\n            if (createInfoArgs.namespace.startsWith('@babylonjs/')) {\n              const clazz: any = GENERATED.babylonClassFactory(type)\n              if (clazz === undefined) {\n                throw new Error(`Cannot generate '${type}' (react-babylonjs):`)\n              }\n              babylonObject = new clazz(...args)\n            } else if (createInfoArgs.namespace.startsWith('./extensions/')) {\n              const extClassName = (GENERATED.intrinsicClassMap as any)[type] || type\n              babylonObject = new (BABYLONEXT as any)[extClassName](...args)\n            } else {\n              console.error(\n                'metadata defines (or does not) a namespace that is known',\n                createInfoArgs.namespace\n              )\n            }\n          }\n        }\n      }\n    }\n\n    // Developer accessible lifecycle phase.  ie: access propery/method exposed in props.\n    if (typeof props.onCreated === 'function') {\n      props.onCreated(babylonObject)\n    }\n\n    const fiberObject: HasPropsHandlers<any> =\n      dynamicRegisteredHost !== undefined\n        ? dynamicRegisteredHost.propHandlerInstance\n        : new (GENERATED as any)[`Fiber${underlyingClassName}`]()\n\n    // Consider these being dynamically attached to a list, much like PropsHandlers<T>\n    let metadataLifecycleListenerName: string | undefined\n    if (metadata.isGizmo === true) {\n      metadataLifecycleListenerName = 'Gizmo'\n    } else if (metadata.isMaterial === true) {\n      metadataLifecycleListenerName = 'Materials'\n    } else if (metadata.isTexture === true) {\n      // must be before .isGUI2DControl, since ADT/FullScreenUI declare both.\n      metadataLifecycleListenerName = 'Textures'\n    } else if (metadata.isGUI3DControl === true) {\n      metadataLifecycleListenerName = 'GUI3DControl'\n    } else if (metadata.isGUI2DControl === true) {\n      metadataLifecycleListenerName = 'GUI2DControl'\n    } else if (metadata.isCamera === true) {\n      metadataLifecycleListenerName = 'Camera'\n    } else if (metadata.isMesh === true) {\n      metadataLifecycleListenerName = 'AbstractMesh'\n    } else if (metadata.isNode === true) {\n      metadataLifecycleListenerName = 'Node'\n    } else if (metadata.isBehavior === true) {\n      metadataLifecycleListenerName = 'Behavior'\n    }\n\n    let lifecycleListener: LifecycleListener<any>\n    // here we dynamically assign listeners for specific types.\n    // TODO: need to double-check because we are using 'camelCase'\n    if ((CUSTOM_HOSTS as any)[underlyingClassName + 'LifecycleListener'] !== undefined) {\n      lifecycleListener = new (CUSTOM_HOSTS as any)[underlyingClassName + 'LifecycleListener'](\n        scene,\n        props\n      )\n    } else if (metadataLifecycleListenerName !== undefined) {\n      lifecycleListener = new (CUSTOM_HOSTS as any)[\n        metadataLifecycleListenerName + 'LifecycleListener'\n      ](scene, props)\n    } else if (dynamicRegisteredHost?.lifecycleListenerFactory) {\n      lifecycleListener = dynamicRegisteredHost.lifecycleListenerFactory(scene!, props)\n    } else {\n      lifecycleListener = new CUSTOM_HOSTS.FallbackLifecycleListener(scene!, props)\n    }\n\n    const createdReference = createCreatedInstance(\n      underlyingClassName,\n      babylonObject,\n      fiberObject,\n      metadata,\n      customProps,\n      lifecycleListener\n    )\n\n    if (lifecycleListener.onCreated) {\n      lifecycleListener.onCreated(createdReference, scene!)\n    }\n\n    // Here we dynamically attach known props handlers.  This is a better way to have mixins and dynamic props handling via composition (and registration).\n    if (createdReference.metadata && createdReference.metadata.isTargetable === true) {\n      fiberObject.addPropsHandler(new CUSTOM_HOSTS.TargetPropsHandler(scene!))\n    }\n\n    if (metadata.delayCreation !== true && customProps.assignFrom === undefined) {\n      // console.log('applying inital props', createdReference, metadata);\n      applyInitialPropsToCreatedInstance(createdReference, props)\n    } else {\n      createdReference.deferredCreationProps = props\n    }\n\n    // TODO: make this an opt-in -- testing inspectable metadata (and our Custom Props, which we want to be more specific to Type):\n    // TODO: use {} instead of NULL and use the late-binding from 'v3' branch (also for deferred creation/assignFrom).\n    // fromInstance being called multiple times with same instance.\n    if (createdReference.hostInstance && !('metadata-className' in createdReference.hostInstance)) {\n      Object.defineProperty(createdReference.hostInstance, 'metadata-className', {\n        get() {\n          return createdReference.metadata.className\n        },\n        enumerable: true,\n      })\n    }\n    if (\n      createdReference.hostInstance &&\n      !('__rb_createdInstance' in createdReference.hostInstance)\n    ) {\n      Object.defineProperty(createdReference.hostInstance, '__rb_createdInstance', {\n        get() {\n          return createdReference\n        },\n        enumerable: true,\n      })\n    }\n    if (babylonObject) {\n      babylonObject.inspectableCustomProperties = [\n        {\n          label: 'React class',\n          propertyName: 'metadata-className',\n          type: InspectableType.String,\n        },\n      ] as IInspectable[]\n    }\n\n    return createdReference\n  },\n\n  // shouldDeprioritizeSubtree: (type: string, props: Props): boolean => {\n  //   return false;\n  // },\n\n  detachDeletedInstance(instance: HostCreatedInstance<any>): void {\n    /* empty */\n  },\n\n  hideInstance(instance: HostCreatedInstance<any>): void {\n    /* empty */\n  },\n\n  unhideInstance(instance: HostCreatedInstance<any>, props: Props): void {\n    /* empty */\n  },\n\n  createTextInstance(text: string): any {\n    /* empty */\n  },\n\n  // scheduleDeferredCallback(callback: (deadline: RequestIdleCallbackDeadline) => void, opts?: RequestIdleCallbackOptions | undefined): any {\n  //   return window.requestIdleCallback(callback, opts) // ReactDOMHostConfig has: unstable_scheduleCallback as scheduleDeferredCallback\n  // },\n\n  // cancelDeferredCallback(handle: any): void {\n  //   return window.cancelIdleCallback(handle);\n  // },\n\n  scheduleTimeout(fn: (...args: unknown[]) => unknown, delay?: number): TimeoutHandle {\n    return window.setTimeout(fn, delay)\n  },\n\n  cancelTimeout(id: TimeoutHandle): void {\n    window.clearTimeout(id)\n  },\n\n  // https://github.com/facebook/react/blob/master/packages/react-dom/src/client/ReactDOMHostConfig.js#L288\n  noTimeout: -1,\n\n  // Called based on return value of: finalizeInitialChildren.  in-memory render tree created, but not yet attached.\n  prepareForCommit: (containerInfo: Container) => {\n    return null\n  },\n\n  preparePortalMount(containerInfo): void {\n    console.log('prepare portal mount', containerInfo) // this is the public instance...\n  },\n\n  // Called after the in-memory tree has been committed (ie: after attaching again to root element)\n  resetAfterCommit: (containerInfo: Container): void => {\n    /* empty */\n  },\n\n  appendInitialChild: (parent: HostCreatedInstance<any>, child: CreatedInstance<any>) => {\n    // Here we are traversing downwards.  Beyond parent has not been initialized, but all children have been.\n    addChild(parent, child)\n  },\n\n  // TODO: refactor with appendInitialChild\n  appendChild: (parent: CreatedInstance<any>, child: CreatedInstance<any>): void => {\n    addChild(parent, child)\n  },\n\n  canHydrateInstance: (instance: any, type: string, props: Props): null | CreatedInstance<any> => {\n    // console.log(\"canHydrateInstance\", instance, type, props)\n    return null\n  },\n\n  // The parent of this node has not yet been instantiated.  The reconciler will continue by calling:\n  // createInstance → appendInitialChild → finalizeInitialChildren on the parent.\n  // When that has reached the top of the recursion tree (root), then prepareForCommit() will be called.\n  // NOTE: All children of this component, however, HAVE been initialized.\n  finalizeInitialChildren: (): boolean => {\n    return true /* callCommitMountForThisInstance */\n  },\n\n  commitMount: (\n    instance: HostCreatedInstance<any>,\n    type: string,\n    newProps: any,\n    internalInstanceHandle: ReactReconciler.Fiber\n  ): void => {\n    if (instance && instance.lifecycleListener && instance.lifecycleListener.onMount) {\n      instance.lifecycleListener.onMount(instance)\n    }\n  },\n\n  // NOTE: only called if supportsMutation = true;\n  // ReactDOM uses this for attaching child nodes to root DOM.  For us we want to link the all parts of tree together for tree crawling.\n  // same implementation as insertInContainerBefore\n  appendChildToContainer: (container: Container, child: HostCreatedInstance<any>): void => {\n    if (child) {\n      if (container.rootInstance) {\n        // doubly link child to root\n        container.rootInstance.children.push(child)\n        child.parent = container.rootInstance\n\n        // hostInstance is undefined when using \"assignFrom\".\n        if (child.hostInstance === undefined && child.lifecycleListener) {\n          // From perspective of declarative syntax the \"Scene\" is the parent.\n          child.lifecycleListener!.onParented(container.rootInstance, child)\n        }\n      } else {\n        console.log('addend child with no root (createPortal only?)')\n        addChild(container as unknown as CreatedInstance<any>, child)\n      }\n    }\n  },\n\n  commitUpdate(\n    instance: HostCreatedInstance<any>,\n    updatePayload: UpdatePayload,\n    type: string /* old, new props and instance handle are extra ignored params */\n  ) {\n    if (updatePayload !== null) {\n      updatePayload.forEach((update: PropertyUpdate) => {\n        if (instance) {\n          applyUpdateToInstance(instance, update)\n        } else {\n          // console.warn(\"skipped applying update to missing instance...\", update, type);\n        }\n      })\n    }\n  },\n\n  removeChildFromContainer: (container: Container, child: HostCreatedInstance<any>) => {\n    /**\n     * To fix two bugs when toggle meshes:\n     * 1.  model's mesh can't be destroyed.\n     * 2. `removeChildFromContainer()` only destroy babylon instance.\n     * The model is rootAbstractMesh's and Parent's child.\n     * `container.rootInstance.children` will be very large after few toggles.\n     */\n\n    if (child) {\n      removeChild(container.rootInstance, child)\n    }\n  },\n  removeChild,\n\n  // text-content nodes are not used.  treated as a leaf node.  children are not traversed.  calls methods like createTextInstance(...)\n  shouldSetTextContent: (type: string, props: any) => {\n    return false\n  },\n\n  beforeActiveInstanceBlur: () => {\n    /* empty */\n  },\n  afterActiveInstanceBlur: () => {\n    /* empty */\n  },\n  // below may be part of future reconciler, but found in typings\n  getInstanceFromNode: () => {\n    return null\n  },\n  getInstanceFromScope: (scopeInstance: any) => {\n    return null\n  },\n  prepareScopeUpdate: (scopeInstance: any, instance: any) => {\n    /* empty */\n  },\n}\n\nexport default ReactBabylonJSHostConfig\n","import { ReactElement, version } from 'react'\nimport Reconciler, { FiberRoot, Reconciler as ReconcilerType } from 'react-reconciler'\nimport ReactBabylonJSHostConfig, { Container } from './ReactBabylonJSHostConfig'\n\nexport const roots = new Map<Container, FiberRoot>()\n\nexport type RendererOptions = {\n  usePrimary?: boolean\n}\n\nexport interface ReconcilerInstance {\n  /**\n   * Replace previous root node with a new one or update props of the current root node.\n   */\n  render: (\n    element: ReactElement | null,\n    container: Container,\n    callback: () => void,\n    parentComponent: any\n  ) => any\n  /**\n   * Manually unmount the whole app.\n   */\n  unmount: (container: Container) => void\n}\n\nconst ReconcilerSecondary: ReconcilerType<Container, any, any, any, any> =\n  Reconciler(ReactBabylonJSHostConfig)\nconst ReconcilerPrimary: ReconcilerType<Container, any, any, any, any> = Reconciler({\n  ...ReactBabylonJSHostConfig,\n  isPrimaryRenderer: true,\n})\n\n/**\n * This is a work in progress in experimental state.\n */\nexport function createPortal(\n  children: React.ReactNode,\n  containerInfo: any,\n  key?: string | null,\n  usePrimary = false\n): Reconciler.ReactPortal {\n  const reconciler = usePrimary === true ? ReconcilerPrimary : ReconcilerSecondary\n  let target = containerInfo\n  if ('__rb_createdInstance' in containerInfo) {\n    // console.log('retargeting to ', containerInfo.__rb_createdInstance);\n    target = containerInfo.__rb_createdInstance\n  }\n\n  return reconciler.createPortal(children, target, null, key)\n}\n\n/*\n * Creates a reconciler instance using an internal pre-existing Reconciler instance.\n * So far the only option is if you want a primary renderer (non-default).\n */\nexport function createReconciler(rendererOptions: RendererOptions): ReconcilerInstance {\n  const reconciler: ReconcilerType<Container, any, any, any, any> =\n    rendererOptions.usePrimary === true ? ReconcilerPrimary : ReconcilerSecondary\n\n  function render(\n    element: ReactElement | null,\n    container: Container,\n    callback: () => void,\n    parentComponent: any\n  ): any {\n    let root = roots.get(container)\n    if (!root) {\n      // https://github.com/facebook/react/blob/master/packages/react-test-renderer/src/ReactTestRenderer.js#L449\n      root = (reconciler as any).createContainer(\n        container,\n        false /* isConcurrent */,\n        false /* hydrate */\n      ) as FiberRoot\n      roots.set(container, root)\n\n      reconciler.injectIntoDevTools({\n        findFiberByHostInstance: (reconciler as any).findFiberByHostInstance,\n        bundleType: process.env.NODE_ENV === 'prod' ? 1 : 0,\n        version,\n        rendererPackageName: 'react-babylonjs',\n      })\n    }\n\n    reconciler.updateContainer(element, root, parentComponent, callback)\n\n    return reconciler.getPublicRootInstance(root)\n  }\n\n  function unmount(container: Container): void {\n    const root = roots.get(container)!\n    reconciler.updateContainer(null, root, null, () => {\n      /* ignored */\n    })\n    roots.delete(container)\n  }\n\n  return {\n    render,\n    unmount,\n  }\n}\n","import { PointerEventTypes, PointerInfo } from '@babylonjs/core/Events/pointerEvents.js'\nimport { AbstractMesh } from '@babylonjs/core/Meshes/abstractMesh.js'\nimport { Observer } from '@babylonjs/core/Misc/observable.js'\nimport '@babylonjs/core/Physics/physicsEngineComponent.js'\nimport { Scene as BabylonScene, SceneOptions } from '@babylonjs/core/scene.js'\nimport { Nullable } from '@babylonjs/core/types.js'\nimport React, { MutableRefObject, useContext, useEffect, useRef, useState } from 'react'\nimport { CreatedInstance } from './CreatedInstance'\nimport { FiberScenePropsHandler } from './generatedCode'\nimport { FiberSceneProps } from './generatedProps'\nimport {\n  EngineCanvasContext,\n  EngineCanvasContextType,\n  withEngineCanvasContext,\n} from './hooks/engine'\nimport { SceneContext } from './hooks/scene'\nimport { UpdatePayload } from './PropsHandler'\nimport { Container } from './ReactBabylonJSHostConfig'\nimport { createReconciler, ReconcilerInstance } from './render'\nimport { applyUpdateToInstance } from './UpdateInstance'\n\nexport declare type SceneEventArgs = {\n  scene: BabylonScene\n  canvas: HTMLCanvasElement\n}\n\ntype SceneProps = {\n  engineCanvasContext: EngineCanvasContextType\n  onMeshPicked?: (mesh: AbstractMesh, scene: BabylonScene) => void\n  onScenePointerDown?: (evt: PointerInfo, scene: BabylonScene) => void\n  onScenePointerUp?: (evt: PointerInfo, scene: BabylonScene) => void\n  onScenePointerMove?: (evt: PointerInfo, scene: BabylonScene) => void\n  onSceneMount?: (sceneEventArgs: SceneEventArgs) => void\n  children: React.ReactNode\n  sceneOptions?: SceneOptions\n} & FiberSceneProps\n\nconst updateScene = (\n  props: SceneProps,\n  prevPropsRef: MutableRefObject<Partial<SceneProps>>,\n  scene: CreatedInstance<BabylonScene>,\n  propsHandler: FiberScenePropsHandler\n) => {\n  const prevProps = prevPropsRef.current\n  const updates: UpdatePayload = propsHandler.getPropertyUpdates(prevProps, props)\n\n  if (updates !== null) {\n    updates.forEach((propertyUpdate) => {\n      applyUpdateToInstance(scene, propertyUpdate)\n    })\n  }\n  prevPropsRef.current = props\n}\n\nconst Scene: React.FC<SceneProps> = (props: SceneProps, context?: any) => {\n  const { engine } = useContext(EngineCanvasContext)\n\n  const [propsHandler] = useState(() => new FiberScenePropsHandler())\n  const [sceneReady, setSceneReady] = useState(false)\n  const [scene, setScene] = useState<Nullable<BabylonScene>>(null)\n\n  // TODO: make this strongly typed\n  const reconcilerRef = useRef<Nullable<ReconcilerInstance>>(null)\n  const containerRef = useRef<Container | null>(null)\n\n  const prevPropsRef: MutableRefObject<Partial<SceneProps>> = useRef<Partial<SceneProps>>({})\n\n  // initialize babylon scene\n  useEffect(\n    () => {\n      const newScene = new BabylonScene(engine!, props.sceneOptions)\n\n      // TODO: try to move the scene to parentComponent in updateContainer\n      const container: Container = {\n        scene: newScene,\n        rootInstance: {\n          children: [],\n          customProps: {},\n          hostInstance: newScene,\n          metadata: {\n            className: 'root',\n          },\n          observers: {},\n          parent: null,\n        },\n      }\n\n      // NOTE: in StrictMode will contain props from first render\n      prevPropsRef.current = {}\n      updateScene(props, prevPropsRef, container.rootInstance, propsHandler)\n\n      const reconciler = createReconciler({})\n      reconcilerRef.current = reconciler\n\n      // const onReadyObservable: Nullable<Observer<BabylonJSScene>> = scene.onReadyObservable.add(onSceneReady);\n      const sceneIsReady = newScene.isReady()\n      if (sceneIsReady) {\n        // scene.onReadyObservable.remove(onReadyObservable);\n        setSceneReady(true)\n      } else {\n        console.error('Scene is not ready. Report issue in react-babylonjs repo')\n      }\n\n      setScene(newScene)\n\n      const pointerDownObservable: Nullable<Observer<PointerInfo>> =\n        newScene.onPointerObservable.add((evt: PointerInfo) => {\n          if (typeof props.onScenePointerDown === 'function') {\n            props.onScenePointerDown(evt, newScene)\n          }\n\n          if (evt && evt.pickInfo && evt.pickInfo.hit && evt.pickInfo.pickedMesh) {\n            const mesh = evt.pickInfo.pickedMesh\n            if (typeof props.onMeshPicked === 'function') {\n              props.onMeshPicked(mesh, newScene)\n            } else {\n              // console.log('onMeshPicked not being called')\n            }\n          }\n        }, PointerEventTypes.POINTERDOWN)\n\n      // can only be assigned on init\n      let pointerUpObservable: Nullable<Observer<PointerInfo>> = null\n      if (typeof props.onScenePointerUp === 'function') {\n        pointerUpObservable = newScene.onPointerObservable.add((evt: PointerInfo) => {\n          props.onScenePointerUp?.(evt, newScene)\n        }, PointerEventTypes.POINTERUP)\n      }\n\n      // can only be assigned on init\n      let pointerMoveObservable: Nullable<Observer<PointerInfo>> = null\n      if (typeof props.onScenePointerMove === 'function') {\n        pointerMoveObservable = newScene.onPointerObservable.add((evt: PointerInfo) => {\n          props.onScenePointerMove?.(evt, newScene)\n        }, PointerEventTypes.POINTERMOVE)\n      }\n\n      if (typeof props.onSceneMount === 'function') {\n        props.onSceneMount({\n          scene: newScene,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          canvas: newScene.getEngine().getRenderingCanvas()!,\n        })\n        // TODO: console.error if canvas is not attached. runRenderLoop() is expected to be part of onSceneMount().\n      }\n\n      // TODO: change enable physics to 'usePhysics' taking an object with a Vector3 and 'any'.\n      // NOTE: must be enabled for updating container (cannot add impostors w/o physics enabled)\n      if (Array.isArray(props.enablePhysics)) {\n        newScene.enablePhysics(props.enablePhysics[0], props.enablePhysics[1])\n      }\n\n      const sceneGraph = (\n        <SceneContext.Provider\n          value={{\n            scene: newScene,\n            sceneReady: sceneIsReady,\n          }}\n        >\n          {props.children}\n        </SceneContext.Provider>\n      )\n\n      reconciler.render(\n        sceneGraph,\n        container,\n        () => {\n          /* empty for now */\n        },\n        null\n      )\n      containerRef.current = container\n\n      return () => {\n        if (pointerDownObservable) {\n          newScene.onPointerObservable.remove(pointerDownObservable)\n        }\n\n        if (pointerUpObservable) {\n          newScene.onPointerObservable.remove(pointerUpObservable)\n        }\n\n        if (pointerMoveObservable) {\n          newScene.onPointerObservable.remove(pointerMoveObservable)\n        }\n\n        if (newScene.isDisposed === false) {\n          newScene.dispose()\n        }\n\n        // clear renderer element\n        reconciler.render(\n          null,\n          containerRef.current!,\n          () => {\n            /* empty */\n          },\n          null\n        )\n        reconcilerRef.current = null\n        containerRef.current = null\n      }\n    },\n    [\n      /* no deps, so called only on un/mount */\n    ]\n  )\n\n  // update babylon scene with props\n  useEffect(() => {\n    const container = containerRef.current\n    if (scene === null || container === null) {\n      return\n    }\n\n    updateScene(props, prevPropsRef, container.rootInstance, propsHandler)\n\n    const sceneGraph = (\n      <SceneContext.Provider\n        value={{\n          scene,\n          sceneReady,\n        }}\n      >\n        {props.children}\n      </SceneContext.Provider>\n    )\n    reconcilerRef.current!.render(\n      sceneGraph,\n      container,\n      () => {\n        /* ignored */\n      },\n      null\n    )\n  })\n\n  return null\n}\n\nexport default withEngineCanvasContext(Scene)\n"],"names":["SceneContext","createContext","scene","sceneReady","useScene","useContext","useBeforeRender","callback","mask","insertFirst","callOnce","deps","useEffect","unregisterOnFirstCall","sceneObserver","onBeforeRenderObservable","add","undefined","remove","__spreadArray","useAfterRender","onAfterRenderObservable","defaultCalculatePosition","el","camera","objectPos","getAbsolutePosition","engine","getEngine","viewport","toGlobal","getRenderWidth","getRenderHeight","screenPos","Vector3","Project","Matrix","Identity","getTransformationMatrix","x","getHardwareScalingLevel","y","epsilon","value","Math","abs","getCSSMatrix","matrix","multipliers","prepend","matrix3d","i","m","PropChangeType","getCameraCSSMatrix","getObjectCSSMatrix","factor","f","Html","forwardRef","_a","ref","children","babylonChildren","_e","eps","style","className","center","fullscreen","portal","distanceFactor","_f","sprite","_g","transform","occlude","onOcclude","_h","zIndexRange","_j","calculatePosition","_k","as","pointerEvents","props","__rest","canvas","getRenderingCanvas","clientRect","getRenderingCanvasClientRect","size","width","_b","height","_c","useState","document","createElement","group","useRef","oldZoom","oldPosition","transformOuterRef","transformInnerRef","target","_d","current","parentNode","node","activeCamera","cssText","vec","appendChild","removeChild","styles","useMemo","position","top","left","transformStyle","__assign","transformInnerStyles","useLayoutEffect","root","createRoot","render","React","id","unmount","visible","computeWorldMatrix","display","isEnabled","isNaN","fov","isBehindCamera","planes","Frustum","GetPlanes","absolutePosition","findIndex","dotCoordinate","isObjectBehindCamera","raytraceTarget","meshes","Array","isArray","map","item","previouslyVisible","isvisible","cameraPos","globalPosition","ray","Ray","subtract","hit","getScene","pickWithRay","length","indexOf","parent","name","pickedMesh","distance","DistanceSquared","isObjectVisible","isVisible","zIndex","concat","mode","Camera","PERSPECTIVE_CAMERA","ORTHOGRAPHIC_CAMERA","dist","Distance","A","maxZ","minZ","B","round","objectZIndex","widthHalf","heightHalf","getProjectionMatrix","orthoTop","orthoLeft","orthoBottom","orthoRight","cameraInvertMatrix","getWorldMatrix","invert","cameraMatrix","cameraTransform","getViewMatrix","getRotationMatrix","clone","perspective","scale","vFOV","PI","tan","objectScale","DynamicTerrain","options","_this","this","_particleDataStride","_particleColorStride","_particleUVStride","_subToleranceX","_subToleranceZ","_LODLimits","_initialLOD","_LODValue","_cameraLODCorrection","_LODPositiveX","_LODNegativeX","_LODPositiveZ","_LODNegativeZ","_inverted","shiftFromCamera","z","_deltaSubX","_deltaSubZ","_refreshEveryFrame","_useCustomVertexFunction","_computeNormals","_datamap","_uvmap","_colormap","_mapSPData","_colorSPData","_uvSPData","_averageSubSizeX","_averageSubSizeZ","_terrainSizeX","_terrainSizeZ","_terrainHalfSizeX","_terrainHalfSizeZ","_centerWorld","Zero","_centerLocal","_mapSizeX","_mapSizeZ","_isAlwaysVisible","_precomputeNormalsFromMap","_terrainSub","terrainSub","_mapData","mapData","_terrainIdx","_mapSubX","mapSubX","_mapSubZ","mapSubZ","_mapUVs","mapUVs","_mapColors","mapColors","_scene","_terrainCamera","invertSide","_SPmapData","SPmapData","_SPcolorData","SPcolorData","_SPuvData","SPuvData","_sps","sps","Float32Array","_mapNormals","mapNormals","color","uv","terrainPath","index","posIndex","colIndex","uvIndex","terIndex","u","v","lg","terrainData","terrainColor","terrainUV","j","_mod","push","Color4","Vector2","ribbonOptions","pathArray","sideOrientation","Mesh","FRONTSIDE","BACKSIDE","colors","uvs","updatable","_terrain","MeshBuilder","CreateRibbon","_indices","getIndices","_positions","getVerticesData","VertexBuffer","PositionKind","_normals","NormalKind","_uvs","UVKind","_colors","ColorKind","computeNormalsFromMap","update","deltaNbSubX","deltaNbSubZ","floor","ceil","refreshEveryFrame","beforeUpdate","afterUpdate","dataStride","mapSizeX","mapSizeZ","quads","_mapQuads","x0","z0","t","data","nb","pIdx","dIdx","col","quadIdx","computeBoundingBox","isAlwaysVisible","computeParticleColor","computeParticleTexture","spsTypeStartIndexes","_spsTypeStartIndexes","spsNbPerType","_spsNbPerType","nbAvailablePerType","_nbAvailablePerType","nbParticles","particles","type","count","p","shapeId","prototype","force","updateLOD","needsUpdate","updateForced","terrainPosition","cameraPosition","terrainHalfSizeX","terrainHalfSizeZ","deltaX","deltaZ","subToleranceX","subToleranceZ","mod","oldCorrection","updateCameraLOD","LODValue","mapShiftX","mapShiftZ","mapFlgtNb","deltaSubX","deltaSubZ","signX","signZ","updateSize","_updateTerrain","centerLocal","copyFromFloats","stepJ","stepI","LODLimitDown","LODLimitUp","axisLODValue","lodI","lodJ","bbMin","_bbMin","bbMax","_bbMax","terrain","positions","normals","mapSPData","nbPerType","colorStride","uvStride","LODLimits","terrainIdx","datamap","uvmap","colormap","useCustomVertexFunction","updateVertex","dontComputeNormals","LODpstvX","LODngtvX","LODpstvZ","LODngtvZ","averageSubSizeX","averageSubSizeZ","particleMap","particleColorMap","particleUVMap","l","posIndex1","posIndex2","posIndex3","ribbonInd","ribbonPosInd","ribbonUVInd","ribbonColInd","ribbonColInd1","ribbonColInd2","ribbonColInd3","ribbonColInd4","ribbonPosInd1","ribbonPosInd2","ribbonPosInd3","updateTerrainSize","FromFloatsToRef","Number","MAX_VALUE","terrainPos","vertex","_vertex","vertexPosition","vertexWorldPosition","worldPosition","vertexColor","vertexUvs","lodX","lodZ","mapIndex","r","g","b","a","quad","partIndexes","sp_colorData","sp_uvData","typeStartIndex","nbQuadParticles","nbInSPS","available","rem","used","min","px","idm","particle","pos","rot","rotation","scl","scaling","idc","iduv","uvs_1","w","setParticles","c","updateVerticesData","VertexData","ComputeNormals","_boundingInfo","reConstruct","_worldMatrix","remainder","next","lod","tsx","tsz","getHeightFromMap","_GetHeightFromMap","GetHeightFromMap","inverted","col1","row1","col2","row2","idx1","idx2","idx3","idx4","v1","_v1","v2","_v2","v3","_v3","v4","_v4","vB","vC","vAvB","_vAvB","vAvC","_vAvC","norm","_norm","vA","xv4v1","zv4v1","cd","subtractToRef","CrossToRef","normalize","scaleInPlace","normal","copyFrom","d","ComputeNormalsFromMapToRef","mapIndices","tmp1","tmp2","normal1","normal2","lastIdx","colStart","colEnd","addInPlace","contains","meshPosition","mesh","CreateMapFromHeightMap","heightmapURL","subX","subZ","CreateMapFromHeightMapToRef","minHeight","maxHeight","offsetX","offsetZ","filter","colorFilter","Color3","onReady","Tools","LoadImage","img","context","getContext","bufferWidth","bufferHeight","drawImage","buffer","getImageData","row","gradient","idx","offlineProvider","CreateUVMapToRef","h","CreateUVMap","createUVMap","Object","defineProperty","get","set","val","ar","sort","alwaysSelectAsActiveMesh","terrainCamera","CustomPropsHandler","RegisterPropsHandler","propsHandler","propsChangeType","propChangeType","_registeredPropsHandlers","registeredHandlers","match","find","UnregisterPropsHandler","propsHandlerToUnregister","console","warn","slice","HandlePropsChange","oldProp","newProp","NOT_ACCEPTED","accepted","registeredHandlers_1","_i","handler","accept","propertyUpdatedProcessResult","process","processed","ACCEPTED_NOT_PROCESSED","freeze","propertyCheck","propertyName","changedProps","isSetAccessor","templateMethod","processedResult","changeType","e","error","checkQuaternionDiff","Quaternion","equals","checkVector3Diff","checkColor3Diff","checkColor4Diff","checkFresnelParametersDiff","FresnelParameters","bias","power","leftColor","rightColor","checkLambdaDiff","LambdaExpression","checkControlDiff","Control","checkObjectDiff","Primitive","checkPrimitiveDiff","checkTextureDiff","Texture","checkNumericArrayDiff","NumericArray","checkObservableDiff","Observable","checkMethodDiff","Method","FiberNodePropsHandler","getPropertyUpdates","oldProps","newProps","doNotSerialize","onAccessibilityTagChangedObservable","onDispose","onDisposeObservable","state","uniqueId","addBehavior","setEnabled","FiberNode","propsHandlers","getPropsHandlers","addPropsHandler","propHandler","CreateInfo","creationType","libraryLocation","namespace","parameters","optional","Metadata","isNode","FiberTransformNodePropsHandler","billboardMode","ignoreNonUniformScaling","infiniteDistance","onAfterWorldMatrixUpdateObservable","preserveParentRotationForBillboard","reIntegrateRotationIntoRotationQuaternion","rotationQuaternion","scalingDeterminant","addRotation","setAbsolutePosition","setDirection","setParent","setPivotMatrix","setPivotPoint","setPositionWithLocalVector","setPreTransformMatrix","translate","FiberTransformNode","FiberAbstractMeshPropsHandler","alphaIndex","applyFog","checkCollisions","collisionGroup","collisionMask","collisionResponse","collisionRetryCount","computeBonesUsingShaders","cullingStrategy","definedFacingForward","doNotSyncBoundingInfo","edgesColor","edgesWidth","ellipsoid","ellipsoidOffset","enableDistantPicking","enablePointerMoveEvents","facetDepthSortFrom","hasVertexAlpha","instancedBuffers","isBlocker","isNearGrabbable","isNearPickable","isPickable","layerMask","mustDepthSortFacets","numBoneInfluencers","onCollide","onCollideObservable","onCollisionPositionChange","onCollisionPositionChangeObservable","onMaterialChangedObservable","onRebuildObservable","outlineColor","outlineWidth","overlayAlpha","overlayColor","partitioningBBoxRatio","partitioningSubdivisions","pointerOverDisableMeshTesting","receiveShadows","renderingGroupId","showSubMeshesBoundingBox","useOctreeForCollisions","useOctreeForPicking","useOctreeForRenderingSelection","useVertexColors","visibility","addChild","enableEdgesRendering","setBoundingInfo","setIndices","setMaterialForRenderPass","setVerticesData","FiberAbstractMesh","acceptsMaterials","isMesh","FiberInstancedMeshPropsHandler","FiberInstancedMesh","FiberInstancedLinesMeshPropsHandler","intersectionThreshold","FiberInstancedLinesMesh","FiberMeshPropsHandler","delayLoadingFile","delayLoadState","forcedInstanceCount","forceWorldMatrixInstancedBufferUpdate","ignoreCameraMaxZ","isUnIndexed","manualUpdateOfPreviousWorldMatrixInstancedBuffer","manualUpdateOfWorldMatrixInstancedBuffer","onBeforeDraw","onLODLevelSelection","onMeshReadyObservable","overrideMaterialSideOrientation","overridenInstanceCount","overrideRenderingFillMode","useLODScreenCoverage","addInstance","addLODLevel","setMaterialById","setMaterialByID","setVerticesBuffer","FiberMesh","FiberGoldbergMeshPropsHandler","setGoldbergFaceColors","setGoldbergFaceUVs","FiberGoldbergMesh","FiberLinesMeshPropsHandler","alpha","FiberLinesMesh","FiberGroundMeshPropsHandler","generateOctree","FiberGroundMesh","FiberTrailMeshPropsHandler","diameter","FiberTrailMesh","FiberGreasedLineBaseMeshPropsHandler","colorPointers","offsets","widths","addPoints","setPoints","FiberGreasedLineBaseMesh","FiberGreasedLineMeshPropsHandler","FiberGreasedLineMesh","FiberGreasedLineRibbonMeshPropsHandler","slopes","FiberGreasedLineRibbonMesh","FiberCameraPropsHandler","cameraRigMode","fovMode","inertia","interaxialDistance","isIntermediate","isRigCamera","isStereoscopicSideBySide","onAfterCheckInputsObservable","onProjectionMatrixChangedObservable","onRestoreStateObservable","onViewMatrixChangedObservable","projectionPlaneTilt","renderPassId","upVector","setCameraRigMode","setCameraRigParameter","FiberCamera","isTargetable","isCamera","FiberTargetCameraPropsHandler","cameraDirection","ignoreParentScaling","inverseRotationSpeed","invertRotation","noRotationConstraint","speed","updateUpVectorFromRotation","setTarget","FiberTargetCamera","FiberFreeCameraPropsHandler","angularSensibility","applyGravity","keysDown","keysDownward","keysLeft","keysRight","keysRotateDown","keysRotateLeft","keysRotateRight","keysRotateUp","keysUp","keysUpward","needMoveForGravity","FiberFreeCamera","FiberWebXRCameraPropsHandler","compensateOnFirstFrame","onAfterCameraTeleport","onBeforeCameraTeleport","onTrackingStateChanged","onXRCameraInitializedObservable","setTransformationFromNonVRCamera","FiberWebXRCamera","FiberTouchCameraPropsHandler","touchAngularSensibility","touchMoveSensibility","FiberTouchCamera","FiberUniversalCameraPropsHandler","gamepadAngularSensibility","gamepadMoveSensibility","FiberUniversalCamera","FiberGamepadCameraPropsHandler","FiberGamepadCamera","FiberAnaglyphGamepadCameraPropsHandler","FiberAnaglyphGamepadCamera","FiberStereoscopicGamepadCameraPropsHandler","FiberStereoscopicGamepadCamera","FiberAnaglyphUniversalCameraPropsHandler","FiberAnaglyphUniversalCamera","FiberStereoscopicUniversalCameraPropsHandler","FiberStereoscopicUniversalCamera","FiberStereoscopicScreenUniversalCameraPropsHandler","distanceBetweenEyes","distanceToProjectionPlane","FiberStereoscopicScreenUniversalCamera","FiberDeviceOrientationCameraPropsHandler","disablePointerInputWhenUsingDeviceOrientation","enableHorizontalDragging","FiberDeviceOrientationCamera","FiberVRDeviceOrientationFreeCameraPropsHandler","FiberVRDeviceOrientationFreeCamera","FiberVRDeviceOrientationGamepadCameraPropsHandler","FiberVRDeviceOrientationGamepadCamera","FiberAnaglyphFreeCameraPropsHandler","FiberAnaglyphFreeCamera","FiberStereoscopicFreeCameraPropsHandler","FiberStereoscopicFreeCamera","FiberVirtualJoysticksCameraPropsHandler","FiberVirtualJoysticksCamera","FiberArcRotateCameraPropsHandler","allowUpsideDown","angularSensibilityX","angularSensibilityY","beta","collisionRadius","inertialAlphaOffset","inertialBetaOffset","inertialPanningX","inertialPanningY","inertialRadiusOffset","lowerAlphaLimit","lowerBetaLimit","lowerRadiusLimit","mapPanning","onMeshTargetChangedObservable","overrideCloneAlphaBetaRadius","panningAxis","panningDistanceLimit","panningInertia","panningOriginTarget","panningSensibility","pinchDeltaPercentage","pinchPrecision","pinchToPanMaxDistance","radius","upperAlphaLimit","upperBetaLimit","upperRadiusLimit","useAutoRotationBehavior","useBouncingBehavior","useFramingBehavior","useInputToRestoreState","useNaturalPinchZoom","wheelDeltaPercentage","wheelPrecision","zoomOnFactor","zoomToMouseLocation","setPosition","FiberArcRotateCamera","FiberAnaglyphArcRotateCameraPropsHandler","FiberAnaglyphArcRotateCamera","FiberStereoscopicArcRotateCameraPropsHandler","FiberStereoscopicArcRotateCamera","FiberVRDeviceOrientationArcRotateCameraPropsHandler","FiberVRDeviceOrientationArcRotateCamera","FiberFlyCameraPropsHandler","bankedTurn","bankedTurnLimit","bankedTurnMultiplier","keysBackward","keysForward","rollCorrect","FiberFlyCamera","FiberFollowCameraPropsHandler","cameraAcceleration","heightOffset","lowerHeightOffsetLimit","lowerRotationOffsetLimit","maxCameraSpeed","rotationOffset","upperHeightOffsetLimit","upperRotationOffsetLimit","FiberFollowCamera","FiberArcFollowCameraPropsHandler","setMeshTarget","FiberArcFollowCamera","FiberBox","factoryMethod","FiberTiledBox","FiberSphere","FiberDisc","FiberIcoSphere","FiberRibbon","FiberCylinder","FiberTorus","FiberTorusKnot","FiberLineSystem","FiberLines","FiberDashedLines","FiberExtrudeShape","FiberExtrudeShapeCustom","FiberLathe","FiberTiledPlane","FiberPlane","FiberGround","FiberTiledGround","FiberGroundFromHeightMap","FiberPolygon","FiberExtrudePolygon","FiberTube","FiberPolyhedron","FiberGeodesic","FiberGoldberg","FiberDecal","FiberCapsule","FiberText","FiberMaterialPropsHandler","allowShaderHotSwapping","alphaMode","backFaceCulling","blockDirtyMechanism","checkReadyOnEveryCall","checkReadyOnlyOnce","cullBackFaces","customShaderNameResolve","depthFunction","disableColorWrite","disableDepthWrite","fillMode","fogEnabled","forceDepthWrite","getRenderTargetTextures","needDepthPrePass","onBind","onCompiled","onError","pointsCloud","pointSize","separateCullingPass","transparencyMode","wireframe","zOffset","zOffsetUnits","setPrePassRenderer","FiberMaterial","isMaterial","FiberPushMaterialPropsHandler","FiberPushMaterial","FiberNodeMaterialPropsHandler","buildId","comment","forceAlphaBlending","ignoreAlpha","maxSimultaneousLights","onBuildObservable","snippetId","addOutputNode","FiberNodeMaterial","FiberShaderMaterialPropsHandler","setArray2","setArray3","setArray4","setColor3","setColor3Array","setColor4","setColor4Array","setDefine","setExternalTexture","setFloat","setFloats","setInt","setMatrices","setMatrix","setMatrix2x2","setMatrix3x3","setQuaternion","setQuaternionArray","setStorageBuffer","setTexture","setTextureArray","setTextureSampler","setUInt","setUniformBuffer","setVector2","setVector3","setVector4","FiberShaderMaterial","FiberOcclusionMaterialPropsHandler","FiberOcclusionMaterial","FiberGreasedLineSimpleMaterialPropsHandler","colorMode","colorsDistributionType","colorsSampling","dashCount","dashOffset","dashRatio","sizeAttenuation","useColors","useDash","setColor","setColors","FiberGreasedLineSimpleMaterial","FiberHandleMaterialPropsHandler","animationLength","baseColor","baseScale","drag","dragScale","hover","hoverColor","hoverScale","FiberHandleMaterial","FiberPBRBaseMaterialPropsHandler","debugFactor","debugLimit","debugMode","realTimeFiltering","realTimeFilteringQuality","useLogarithmicDepth","FiberPBRBaseMaterial","FiberPBRBaseSimpleMaterialPropsHandler","alphaCutOff","disableLighting","doubleSided","emissiveColor","emissiveTexture","environmentTexture","invertNormalMapX","invertNormalMapY","lightmapTexture","normalTexture","occlusionStrength","occlusionTexture","useLightmapAsShadowmap","FiberPBRBaseSimpleMaterial","FiberPBRMetallicRoughnessMaterialPropsHandler","baseTexture","metallic","metallicRoughnessTexture","roughness","FiberPBRMetallicRoughnessMaterial","FiberPBRSpecularGlossinessMaterialPropsHandler","diffuseColor","diffuseTexture","glossiness","specularColor","specularGlossinessTexture","FiberPBRSpecularGlossinessMaterial","FiberPBRMaterialPropsHandler","albedoColor","albedoTexture","ambientColor","ambientTexture","ambientTextureImpactOnAnalyticalLights","ambientTextureStrength","applyDecalMapAfterDetailMap","bumpTexture","cameraColorCurvesEnabled","cameraColorGradingEnabled","cameraColorGradingTexture","cameraContrast","cameraExposure","cameraToneMappingEnabled","directIntensity","disableBumpMap","emissiveIntensity","enableSpecularAntiAliasing","environmentBRDFTexture","environmentIntensity","forceAlphaTest","forceIrradianceInFragment","forceNormalForward","indexOfRefraction","invertRefractionY","linkRefractionWithTransparency","metallicF0Factor","metallicReflectanceColor","metallicReflectanceTexture","metallicTexture","microSurface","microSurfaceTexture","opacityTexture","parallaxScaleBias","reflectanceTexture","reflectionColor","reflectionTexture","reflectivityColor","reflectivityTexture","refractionTexture","specularIntensity","twoSidedLighting","unlit","useAlphaFresnel","useAlphaFromAlbedoTexture","useAmbientInGrayScale","useAmbientOcclusionFromMetallicTextureRed","useAutoMicroSurfaceFromReflectivityMap","useGLTFLightFalloff","useHorizonOcclusion","useLinearAlphaFresnel","useMetallnessFromMetallicTextureBlue","useMicroSurfaceFromReflectivityMapAlpha","useObjectSpaceNormalMap","useOnlyMetallicFromMetallicReflectanceTexture","useParallax","useParallaxOcclusion","usePhysicalLightFalloff","useRadianceOcclusion","useRadianceOverAlpha","useRoughnessFromMetallicTextureAlpha","useRoughnessFromMetallicTextureGreen","useSpecularOverAlpha","FiberPBRMaterial","FiberStandardMaterialPropsHandler","AmbientTextureEnabled","BumpTextureEnabled","ColorGradingTextureEnabled","DetailTextureEnabled","diffuseFresnelParameters","DiffuseTextureEnabled","emissiveFresnelParameters","EmissiveTextureEnabled","FresnelEnabled","LightmapTextureEnabled","linkEmissiveWithDiffuse","opacityFresnelParameters","OpacityTextureEnabled","reflectionFresnelParameters","ReflectionTextureEnabled","refractionFresnelParameters","RefractionTextureEnabled","specularPower","specularTexture","SpecularTextureEnabled","useAlphaFromDiffuseTexture","useEmissiveAsIllumination","useGlossinessFromSpecularMapAlpha","useReflectionFresnelFromSpecular","useReflectionOverAlpha","FiberStandardMaterial","FiberBackgroundMaterialPropsHandler","_perceptualColor","enableNoise","fovMultiplier","opacityFresnel","primaryColor","primaryColorHighlightLevel","primaryColorShadowLevel","reflectionAmount","reflectionBlur","reflectionFalloffDistance","reflectionFresnel","reflectionReflectance0","reflectionReflectance90","reflectionStandardFresnelWeight","sceneCenter","shadowLevel","shadowOnly","switchToBGR","useEquirectangularFOV","useRGBColor","FiberBackgroundMaterial","FiberFluentMaterialPropsHandler","borderMinValue","borderWidth","edgeSmoothingValue","hoverPosition","hoverRadius","innerGlowColor","innerGlowColorIntensity","renderBorders","renderHoverLight","FiberFluentMaterial","FiberFluentButtonMaterialPropsHandler","activeFaceDir","activeFaceUp","blobFadeLength","blobFarDistance","blobFarSize","blobIntensity","blobNearDistance","edgeColor","edgeWidth","enableFade","fadeWidth","globalLeftIndexTipPosition","globalRightIndexTipPosition","leftBlobEnable","leftBlobFade","leftBlobInnerFade","leftBlobNearSize","leftBlobPulse","proximityAnisotropy","proximityFarDistance","proximityMaxIntensity","proximityNearRadius","rightBlobEnable","rightBlobFade","rightBlobInnerFade","rightBlobNearSize","rightBlobPulse","selected","selectedDistance","selectedFadeLength","selectionFade","selectionFadeSize","selectionFuzz","showFrame","smoothActiveFace","useBlobTexture","FiberFluentButtonMaterial","FiberFluentBackplateMaterialPropsHandler","absoluteSizes","blobFade","blobFade2","blobNearSize","blobNearSize2","blobPulse","blobPulse2","fadeOut","highlightColor","highlightWidth","iridescenceEdgeIntensity","iridescenceIntensity","lineColor","lineWidth","FiberFluentBackplateMaterial","FiberMRDLSliderBarMaterialPropsHandler","albedo","bevelBack","bevelBackStretch","bevelFront","bevelFrontStretch","blobPosition","blobPosition2","bulgeEnabled","bulgeHeight","bulgeRadius","clipFade","decalFrontOnly","edgeReflect","frontReflect","fuzz","globalLeftIndexTipProximity","globalRightIndexTipProximity","groundColor","horizonColor","horizonPower","hueShift","indirectDiffuse","leftGradientColor","leftIndexMiddlePosition","leftIndexPosition","minFuzz","radiusBottomLeft","radiusBottomRight","radiusTopLeft","radiusTopRight","reflection","rightGradientColor","rightIndexMiddlePosition","rightIndexPosition","rimHueShift","rimIntensity","rimSaturationShift","rimValueShift","saturationShift","sharpness","shininess","skyColor","specular","subsurface","sunIntensity","sunPhi","sunTheta","useGlobalLeftIndex","useGlobalRightIndex","valueShift","FiberMRDLSliderBarMaterial","FiberMRDLSliderThumbMaterialPropsHandler","FiberMRDLSliderThumbMaterial","FiberMRDLBackplateMaterialPropsHandler","bottomLeftGradientColor","bottomRightGradientColor","edgeLineGradientBlend","edgePower","gradientColor","iridescenceTint","topLeftGradientColor","topRightGradientColor","FiberMRDLBackplateMaterial","FiberMRDLBackglowMaterialPropsHandler","bevelRadius","blendExponent","falloff","innerColor","intensityFadeInExponent","maxIntensity","motion","outerFuzzEnd","outerFuzzStart","tuningMotion","FiberMRDLBackglowMaterial","FiberMRDLFrontplateMaterialPropsHandler","blobEnable","blobEnable2","blobInnerFade","blobInnerFade2","blobPulseMaxSize","gazeFocus","gazeIntensity","relativeToHeight","FiberMRDLFrontplateMaterial","FiberMRDLInnerquadMaterialPropsHandler","fixedRadius","glowFalloff","glowFraction","glowMax","FiberMRDLInnerquadMaterial","FiberMultiMaterialPropsHandler","FiberMultiMaterial","FiberLightPropsHandler","diffuse","excludeWithLayerMask","falloffType","includeOnlyWithLayerMask","intensity","intensityMode","lightmapMode","range","renderPriority","shadowEnabled","FiberLight","FiberShadowLightPropsHandler","customProjectionMatrixBuilder","direction","shadowMaxZ","shadowMinZ","transformedDirection","transformedPosition","setDirectionToTarget","setShadowProjectionMatrix","FiberShadowLight","isShadowLight","FiberDirectionalLightPropsHandler","autoCalcShadowZBounds","autoUpdateExtends","shadowFrustumSize","shadowOrthoScale","FiberDirectionalLight","FiberPointLightPropsHandler","shadowAngle","FiberPointLight","FiberSpotLightPropsHandler","angle","exponent","innerAngle","projectionTexture","projectionTextureLightFar","projectionTextureLightNear","projectionTextureUpDirection","shadowAngleScale","FiberSpotLight","FiberHemisphericLightPropsHandler","FiberHemisphericLight","FiberControlPropsHandler","clipChildren","clipContent","descendantsOnlyPadding","disabledColor","disabledColorItem","fixedRatio","fixedRatioMasterIsWidth","fontFamily","fontSize","fontSizeInPixels","fontStyle","fontWeight","heightInPixels","highlightLineWidth","horizontalAlignment","hoverCursor","isFocusInvisible","isHighlighted","isHitTestVisible","isPointerBlocker","isReadOnly","leftInPixels","linkOffsetX","linkOffsetXInPixels","linkOffsetY","linkOffsetYInPixels","notRenderable","onAfterDrawObservable","onBeforeDrawObservable","onDirtyObservable","onEnabledStateChangedObservable","onIsVisibleChangedObservable","onPointerClickObservable","onPointerDownObservable","onPointerEnterObservable","onPointerMoveObservable","onPointerOutObservable","onPointerUpObservable","onWheelObservable","overlapDeltaMultiplier","overlapGroup","paddingBottom","paddingBottomInPixels","paddingLeft","paddingLeftInPixels","paddingRight","paddingRightInPixels","paddingTop","paddingTopInPixels","scaleX","scaleY","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","topInPixels","transformCenterX","transformCenterY","useBitmapCache","verticalAlignment","widthInPixels","setPadding","setPaddingInPixels","FiberControl","isGUI2DControl","FiberContainerPropsHandler","adaptHeightToChildren","adaptWidthToChildren","background","logLayoutCycleErrors","maxLayoutCycle","onControlAddedObservable","onControlRemovedObservable","renderToIntermediateTexture","addControl","FiberContainer","FiberRectanglePropsHandler","cornerRadius","cornerRadiusW","cornerRadiusX","cornerRadiusY","cornerRadiusZ","thickness","FiberRectangle","FiberButtonPropsHandler","delegatePickingToChildren","pointerDownAnimation","pointerEnterAnimation","pointerOutAnimation","pointerUpAnimation","FiberButton","FiberFocusableButtonPropsHandler","focusedColor","onBlurObservable","onFocusObservable","onKeyboardEventProcessedObservable","FiberFocusableButton","FiberSelectionPanelPropsHandler","barColor","barHeight","buttonBackground","buttonColor","headerColor","labelColor","spacerHeight","addGroup","addToGroupCheckbox","addToGroupRadio","addToGroupSlider","setHeaderName","FiberSelectionPanel","FiberScrollViewerPropsHandler","barBackground","barImageHeight","barSize","forceHorizontalBar","forceVerticalBar","freezeControls","horizontalBarImageHeight","scrollBackground","thumbHeight","thumbLength","verticalBarImageHeight","setBucketSizes","FiberScrollViewer","FiberToggleButtonPropsHandler","isActive","onIsActiveChangedObservable","pointerDownActiveAnimation","pointerDownInactiveAnimation","pointerEnterActiveAnimation","pointerEnterInactiveAnimation","pointerOutActiveAnimation","pointerOutInactiveAnimation","pointerUpActiveAnimation","pointerUpInactiveAnimation","toActiveAnimation","toInactiveAnimation","FiberToggleButton","FiberStackPanelPropsHandler","ignoreLayoutWarnings","isVertical","spacing","FiberStackPanel","FiberVirtualKeyboardPropsHandler","defaultButtonBackground","defaultButtonColor","defaultButtonHeight","defaultButtonPaddingBottom","defaultButtonPaddingLeft","defaultButtonPaddingRight","defaultButtonPaddingTop","defaultButtonWidth","onKeyPressObservable","selectedShiftThickness","shiftButtonColor","shiftState","addKeysRow","FiberVirtualKeyboard","FiberEllipsePropsHandler","FiberEllipse","FiberGridPropsHandler","addColumnDefinition","addRowDefinition","setColumnDefinition","setRowDefinition","FiberGrid","isGUI2DGrid","Fiber_ScrollViewerWindowPropsHandler","parentClientHeight","parentClientWidth","Fiber_ScrollViewerWindow","FiberTextBlockPropsHandler","applyOutlineToUnderline","forceResizeWidth","lineSpacing","lineThrough","onLinesReadyObservable","onTextChangedObservable","resizeToFit","text","textHorizontalAlignment","textVerticalAlignment","textWrapping","underline","wordDivider","wordSplittingFunction","FiberTextBlock","FiberImagePropsHandler","alt","autoScale","cellHeight","cellId","cellWidth","detectPointerOnOpaqueOnly","onImageLoadedObservable","onSVGAttributesComputedObservable","populateNinePatchSlicesFromImage","sliceBottom","sliceLeft","sliceRight","sliceTop","source","sourceHeight","sourceLeft","sourceTop","sourceWidth","stretch","FiberImage","FiberCheckboxPropsHandler","checkSizeRatio","isChecked","onIsCheckedChangedObservable","FiberCheckbox","FiberColorPickerPropsHandler","onValueChangedObservable","FiberColorPicker","FiberInputTextPropsHandler","addKey","autoStretchWidth","currentKey","deadKey","disableMobilePrompt","focusedBackground","highligherOpacity","highlightedText","margin","maxWidth","onBeforeKeyAddObservable","onFocusSelectAll","onTextCopyObservable","onTextCutObservable","onTextHighlightObservable","onTextPasteObservable","placeholderColor","placeholderText","promptMessage","textHighlightColor","FiberInputText","FiberInputTextAreaPropsHandler","autoStretchHeight","FiberInputTextArea","FiberInputPasswordPropsHandler","FiberInputPassword","FiberLinePropsHandler","connectedControl","dash","x1","x2","y1","y2","FiberLine","FiberMultiLinePropsHandler","onPointUpdate","FiberMultiLine","FiberRadioButtonPropsHandler","FiberRadioButton","FiberBaseSliderPropsHandler","barOffset","displayThumb","isThumbClamped","maximum","minimum","step","thumbWidth","FiberBaseSlider","FiberScrollBarPropsHandler","borderColor","invertScrollDirection","FiberScrollBar","FiberImageScrollBarPropsHandler","num90RotationInVerticalMode","FiberImageScrollBar","FiberSliderPropsHandler","displayValueBar","isThumbCircle","thumbColor","FiberSlider","FiberImageBasedSliderPropsHandler","FiberImageBasedSlider","FiberDisplayGridPropsHandler","displayMajorLines","displayMinorLines","majorLineColor","majorLineFrequency","majorLineTickness","minorLineColor","minorLineTickness","FiberDisplayGrid","FiberControl3DPropsHandler","FiberControl3D","isGUI3DControl","FiberContainer3DPropsHandler","blockLayout","FiberContainer3D","FiberVolumeBasedPanelPropsHandler","columns","orientation","rows","FiberVolumeBasedPanel","FiberCylinderPanelPropsHandler","FiberCylinderPanel","FiberTouchHolographicMenuPropsHandler","backPlateMargin","addButton","FiberTouchHolographicMenu","FiberHandMenuPropsHandler","FiberHandMenu","FiberNearMenuPropsHandler","isPinned","FiberNearMenu","FiberPlanePanelPropsHandler","FiberPlanePanel","FiberScatterPanelPropsHandler","iteration","FiberScatterPanel","FiberSpherePanelPropsHandler","FiberSpherePanel","FiberStackPanel3DPropsHandler","FiberStackPanel3D","FiberContentDisplay3DPropsHandler","content","contentResolution","FiberContentDisplay3D","FiberAbstractButton3DPropsHandler","FiberAbstractButton3D","FiberButton3DPropsHandler","FiberButton3D","FiberTouchButton3DPropsHandler","collidableFrontDirection","isToggleButton","isToggled","onToggleObservable","FiberTouchButton3D","FiberTouchHolographicButtonPropsHandler","imageUrl","isBackplateVisible","tooltipText","FiberTouchHolographicButton","FiberTouchMeshButton3DPropsHandler","FiberTouchMeshButton3D","FiberHolographicButtonPropsHandler","FiberHolographicButton","FiberMeshButton3DPropsHandler","FiberMeshButton3D","FiberHolographicSlatePropsHandler","origin","title","titleBarHeight","titleBarMargin","FiberHolographicSlate","FiberHolographicBackplatePropsHandler","FiberHolographicBackplate","FiberSlider3DPropsHandler","FiberSlider3D","FiberEffectLayerPropsHandler","disableBoundingBoxesFromEffectLayer","neutralColor","onAfterComposeObservable","onAfterRenderMeshToEffect","onBeforeComposeObservable","onBeforeRenderMainTextureObservable","onBeforeRenderMeshToEffect","onSizeChangedObservable","setEffectIntensity","setMaterialForRendering","FiberEffectLayer","isEffectLayer","isGlowLayer","FiberGlowLayerPropsHandler","blurKernelSize","customEmissiveColorSelector","customEmissiveTextureSelector","addExcludedMesh","addIncludedOnlyMesh","FiberGlowLayer","FiberHighlightLayerPropsHandler","blurHorizontalSize","blurVerticalSize","innerGlow","onAfterBlurObservable","onBeforeBlurObservable","outerGlow","addMesh","FiberHighlightLayer","FiberThinTexturePropsHandler","anisotropicFilteringLevel","wrapR","wrapU","wrapV","FiberThinTexture","isTexture","FiberBaseTexturePropsHandler","coordinatesIndex","coordinatesMode","gammaSpace","getAlphaFromRGB","hasAlpha","invertZ","irradianceTexture","isRenderTarget","isRGBD","level","linearSpecularLOD","lodGenerationOffset","lodGenerationScale","lodLevelInAlpha","optimizeUVAllocation","FiberBaseTexture","FiberCubeTexturePropsHandler","boundingBoxPosition","boundingBoxSize","onLoadObservable","rotationY","url","setReflectionTextureMatrix","FiberCubeTexture","FiberRawCubeTexturePropsHandler","FiberRawCubeTexture","FiberTexturePropsHandler","homogeneousRotationInUVTransform","isBlocking","uAng","uOffset","uRotationCenter","uScale","vAng","vOffset","vRotationCenter","vScale","wAng","wRotationCenter","FiberTexture","FiberVideoTexturePropsHandler","FiberVideoTexture","FiberProceduralTexturePropsHandler","autoClear","onBeforeGenerationObservable","onGenerated","onGeneratedObservable","refreshRate","setFragment","FiberProceduralTexture","FiberCustomProceduralTexturePropsHandler","animate","FiberCustomProceduralTexture","FiberNoiseProceduralTexturePropsHandler","animationSpeedFactor","brightness","octaves","persistence","time","FiberNoiseProceduralTexture","FiberRawTexturePropsHandler","format","FiberRawTexture","FiberRawTexture2DArrayPropsHandler","FiberRawTexture2DArray","FiberRenderTargetTexturePropsHandler","clearColor","customIsReadyFunction","customRenderFunction","forceLayerMaskCheck","getCustomRenderList","ignoreCameraViewport","onAfterRender","onAfterUnbind","onAfterUnbindObservable","onBeforeBindObservable","onBeforeRender","onClear","onClearObservable","onResizeObservable","renderListPredicate","renderParticles","renderSprites","samples","skipInitialClear","useCameraPostProcesses","addPostProcess","setRenderingAutoClearDepthStencil","setRenderingOrder","FiberRenderTargetTexture","FiberMirrorTexturePropsHandler","adaptiveBlurKernel","blurKernel","blurKernelX","blurKernelY","blurRatio","FiberMirrorTexture","FiberMultiRenderTargetPropsHandler","setInternalTexture","setLayerAndFaceIndex","setLayerAndFaceIndices","FiberMultiRenderTarget","FiberPrePassRenderTargetPropsHandler","enabled","FiberPrePassRenderTarget","FiberRefractionTexturePropsHandler","depth","FiberRefractionTexture","FiberXRSpaceWarpRenderTargetPropsHandler","FiberXRSpaceWarpRenderTarget","FiberMultiviewRenderTargetPropsHandler","FiberMultiviewRenderTarget","FiberDynamicTexturePropsHandler","FiberDynamicTexture","FiberAdvancedDynamicTexturePropsHandler","applyYInversionOnUpdate","checkPointerEveryFrame","clipboardData","idealHeight","idealWidth","isForeground","onBeginLayoutObservable","onBeginRenderObservable","onClipboardObservable","onControlPickedObservable","onEndLayoutObservable","onEndRenderObservable","onGuiReadyObservable","parseContent","premulAlpha","renderAtIdealSize","renderScale","skipBlockEvents","useInvalidateRectOptimization","useSmallestIdeal","FiberAdvancedDynamicTexture","FiberADTForMesh","FiberADTForMeshTexture","FiberADTFullscreenUI","FiberRawTexture3DPropsHandler","FiberRawTexture3D","FiberColorGradingTexturePropsHandler","FiberColorGradingTexture","FiberEquiRectangularCubeTexturePropsHandler","FiberEquiRectangularCubeTexture","FiberHDRCubeTexturePropsHandler","FiberHDRCubeTexture","FiberHtmlElementTexturePropsHandler","FiberHtmlElementTexture","FiberThinRenderTargetTexturePropsHandler","FiberThinRenderTargetTexture","FiberPostProcessRenderPipelinePropsHandler","addEffect","FiberPostProcessRenderPipeline","FiberDefaultRenderingPipelinePropsHandler","automaticBuild","bloomEnabled","bloomKernel","bloomScale","bloomThreshold","bloomWeight","chromaticAberrationEnabled","depthOfFieldBlurLevel","depthOfFieldEnabled","fxaaEnabled","glowLayerEnabled","grainEnabled","imageProcessingEnabled","sharpenEnabled","addCamera","FiberDefaultRenderingPipeline","FiberLensRenderingPipelinePropsHandler","blurNoise","chromaticAberration","darkenOutOfFocus","dofAperture","dofDistortion","edgeBlur","edgeDistortion","grainAmount","HighlightsEnhancingEffect","highlightsGain","highlightsThreshold","LensChromaticAberrationEffect","LensDepthOfFieldEffect","pentagonBokeh","setAperture","setChromaticAberration","setDarkenOutOfFocus","setEdgeBlur","setEdgeDistortion","setFocusDistance","setGrainAmount","setHighlightsGain","setHighlightsThreshold","FiberLensRenderingPipeline","FiberSSAO2RenderingPipelinePropsHandler","base","bilateralSamples","bilateralSoften","bilateralTolerance","bypassBlur","expensiveBlur","minZAspect","SSAOBlurHRenderEffect","SSAOBlurVRenderEffect","SSAOCombineRenderEffect","SSAOOriginalSceneColorEffect","SSAORenderEffect","textureSamples","totalStrength","FiberSSAO2RenderingPipeline","FiberSSAORenderingPipelinePropsHandler","area","fallOff","FiberSSAORenderingPipeline","FiberStandardRenderingPipelinePropsHandler","BloomEnabled","blurWidth","brightThreshold","depthOfFieldBlurWidth","depthOfFieldDistance","DepthOfFieldEnabled","exposure","hdrAutoExposure","hdrDecreaseRate","HDREnabled","hdrIncreaseRate","hdrMinimumLuminance","horizontalBlur","lensFlareBlurWidth","lensFlareDistortionStrength","LensFlareEnabled","lensFlareGhostDispersal","lensFlareHaloWidth","lensFlareStrength","MotionBlurEnabled","motionBlurSamples","motionStrength","objectBasedMotionBlur","screenSpaceReflectionsEnabled","VLSEnabled","volumetricLightBlurScale","volumetricLightCoefficient","volumetricLightPower","volumetricLightStepsCount","FiberStandardRenderingPipeline","FiberSSRRenderingPipelinePropsHandler","attenuateBackfaceReflection","attenuateFacingCamera","attenuateIntersectionDistance","attenuateIntersectionIterations","attenuateScreenBorders","backfaceDepthTextureDownsample","backfaceForceDepthWriteTransparentMeshes","blurDispersionStrength","blurDownsample","clipToFrustum","debug","enableAutomaticThicknessComputation","enableSmoothReflections","environmentTextureIsProbe","generateOutputInGammaSpace","inputTextureColorIsInGammaSpace","maxDistance","maxSteps","reflectionSpecularFalloffExponent","reflectivityThreshold","roughnessFactor","selfCollisionNumSkip","SSRBlurRenderEffect","SSRCombineRenderEffect","ssrDownsample","SSRRenderEffect","strength","useFresnel","FiberSSRRenderingPipeline","FiberPostProcessPropsHandler","adaptScaleToCurrentViewport","alphaConstants","alwaysForcePOT","enablePixelPerfectMode","externalTextureSamplerBinding","forceAutoClearInAlphaMode","forceFullscreenViewport","onActivate","onActivateObservable","onApply","onApplyObservable","onSizeChanged","renderTargetSamplingMode","scaleMode","FiberPostProcess","FiberImageProcessingPostProcessPropsHandler","colorCurvesEnabled","colorGradingEnabled","colorGradingTexture","contrast","ditheringEnabled","ditheringIntensity","fromLinearSpace","toneMappingEnabled","toneMappingType","vignetteBlendMode","vignetteCameraFov","vignetteCenterX","vignetteCenterY","vignetteCentreX","vignetteCentreY","vignetteColor","vignetteEnabled","vignetteStretch","vignetteWeight","FiberImageProcessingPostProcess","FiberAnaglyphPostProcessPropsHandler","FiberAnaglyphPostProcess","FiberBlackAndWhitePostProcessPropsHandler","degree","FiberBlackAndWhitePostProcess","FiberExtractHighlightsPostProcessPropsHandler","threshold","FiberExtractHighlightsPostProcess","FiberBloomMergePostProcessPropsHandler","weight","FiberBloomMergePostProcess","FiberBlurPostProcessPropsHandler","kernel","packedFloat","FiberBlurPostProcess","FiberDepthOfFieldBlurPostProcessPropsHandler","FiberDepthOfFieldBlurPostProcess","FiberChromaticAberrationPostProcessPropsHandler","aberrationAmount","radialIntensity","screenHeight","screenWidth","FiberChromaticAberrationPostProcess","FiberCircleOfConfusionPostProcessPropsHandler","focalLength","focusDistance","fStop","lensSize","FiberCircleOfConfusionPostProcess","FiberColorCorrectionPostProcessPropsHandler","colorTableUrl","FiberColorCorrectionPostProcess","FiberConvolutionPostProcessPropsHandler","FiberConvolutionPostProcess","FiberDepthOfFieldMergePostProcessPropsHandler","FiberDepthOfFieldMergePostProcess","FiberDisplayPassPostProcessPropsHandler","FiberDisplayPassPostProcess","FiberFilterPostProcessPropsHandler","FiberFilterPostProcess","FiberFxaaPostProcessPropsHandler","FiberFxaaPostProcess","FiberGrainPostProcessPropsHandler","animated","FiberGrainPostProcess","FiberHighlightsPostProcessPropsHandler","FiberHighlightsPostProcess","FiberMotionBlurPostProcessPropsHandler","isObjectBased","FiberMotionBlurPostProcess","FiberPassPostProcessPropsHandler","FiberPassPostProcess","FiberPassCubePostProcessPropsHandler","face","FiberPassCubePostProcess","FiberRefractionPostProcessPropsHandler","colorLevel","refractionTextureUrl","FiberRefractionPostProcess","FiberSharpenPostProcessPropsHandler","colorAmount","edgeAmount","FiberSharpenPostProcess","FiberScreenSpaceReflectionPostProcessPropsHandler","reflectionSamples","smoothSteps","FiberScreenSpaceReflectionPostProcess","FiberStereoscopicInterlacePostProcessIPropsHandler","FiberStereoscopicInterlacePostProcessI","FiberStereoscopicInterlacePostProcessPropsHandler","FiberStereoscopicInterlacePostProcess","FiberTonemapPostProcessPropsHandler","exposureAdjustment","FiberTonemapPostProcess","FiberVolumetricLightScatteringPostProcessPropsHandler","customMeshPosition","decay","density","useCustomMeshPosition","useDiffuseColor","setCustomMeshPosition","FiberVolumetricLightScatteringPostProcess","FiberVRDistortionCorrectionPostProcessPropsHandler","FiberVRDistortionCorrectionPostProcess","FiberVRMultiviewToSingleviewPostProcessPropsHandler","FiberVRMultiviewToSingleviewPostProcess","FiberScreenSpaceCurvaturePostProcessPropsHandler","ridge","valley","FiberScreenSpaceCurvaturePostProcess","FiberSubSurfaceScatteringPostProcessPropsHandler","FiberSubSurfaceScatteringPostProcess","FiberGizmoPropsHandler","anchorPoint","customRotationQuaternion","scaleRatio","updateGizmoPositionToMatchAttachedMesh","updateGizmoRotationToMatchAttachedMesh","updateScale","setCustomMesh","FiberGizmo","isGizmo","FiberPlaneDragGizmoPropsHandler","onSnapObservable","snapDistance","FiberPlaneDragGizmo","FiberPlaneRotationGizmoPropsHandler","sensitivity","FiberPlaneRotationGizmo","FiberRotationGizmoPropsHandler","onDragEndObservable","onDragObservable","onDragStartObservable","addToAxisCache","FiberRotationGizmo","FiberAxisScaleGizmoPropsHandler","uniformScaling","FiberAxisScaleGizmo","FiberScaleGizmoPropsHandler","FiberScaleGizmo","FiberBoundingBoxGizmoPropsHandler","axisFactor","fixedDragMeshBoundsSize","fixedDragMeshScreenSize","fixedDragMeshScreenSizeDistanceFactor","ignoreChildren","includeChildPredicate","onRotationSphereDragEndObservable","onRotationSphereDragObservable","onScaleBoxDragEndObservable","onScaleBoxDragObservable","rotationSnapDistance","rotationSphereSize","scaleBoxSize","scaleDragSpeed","scalePivot","scalingSnapDistance","setEnabledRotationAxis","setEnabledScaling","FiberBoundingBoxGizmo","FiberPositionGizmoPropsHandler","planarGizmoEnabled","FiberPositionGizmo","FiberAxisDragGizmoPropsHandler","FiberAxisDragGizmo","FiberLightGizmoPropsHandler","light","onClickedObservable","FiberLightGizmo","FiberCameraGizmoPropsHandler","displayFrustum","FiberCameraGizmo","FiberSlateGizmoPropsHandler","fixedScreenSize","fixedScreenSizeDistanceFactor","FiberSlateGizmo","FiberGUI3DManagerPropsHandler","controlScaling","onPickedPointChangedObservable","onPickingObservable","useRealisticScaling","FiberGUI3DManager","FiberEnvironmentHelperPropsHandler","onErrorObservable","setMainColor","FiberEnvironmentHelper","isEnvironment","FiberPhysicsImpostorPropsHandler","afterStep","beforeStep","friction","mass","onCollideEvent","positionIterations","pressure","restitution","segments","soft","stiffness","velocityIterations","addAnchor","addHook","addJoint","setAngularVelocity","setDeltaPosition","setDeltaRotation","setLinearVelocity","setMass","setParam","FiberPhysicsImpostor","delayCreation","FiberPhysicsAggregatePropsHandler","FiberPhysicsAggregate","FiberVRExperienceHelperPropsHandler","displayGaze","displayLaserPointer","enableGazeEvenWhenNoPointerLock","exitVROnDoubleTap","meshSelectionPredicate","onAfterEnteringVRObservable","onEnteringVRObservable","onExitingVRObservable","onNewMeshPicked","onNewMeshSelected","onSelectedMeshUnselected","raySelectionPredicate","requestPointerLockOnFullScreen","teleportationEnabled","updateControllerLaserColor","updateGazeTrackerColor","updateGazeTrackerScale","xrTestDone","addFloorMesh","enableTeleportation","setGazeColor","setLaserColor","setLaserLightingState","FiberVRExperienceHelper","FiberDynamicTerrainPropsHandler","cameraLODCorrection","computeNormals","initialLOD","LODNegativeX","LODNegativeZ","LODPositiveX","LODPositiveZ","precomputeNormalsFromMap","FiberDynamicTerrain","FiberPointsCloudSystemPropsHandler","computeParticleRotation","counter","addSurfacePoints","addVolumePoints","setVisibilityBox","FiberPointsCloudSystem","FiberViewportPropsHandler","FiberViewport","FiberUtilityLayerRendererPropsHandler","mainSceneTrackerPredicate","onlyCheckPointerDownEvents","pickingEnabled","pickUtilitySceneFirst","processAllEvents","shouldRender","setRenderCamera","FiberUtilityLayerRenderer","isUtilityLayerRenderer","FiberMaterialPluginBasePropsHandler","priority","registerForExtraEvents","resolveIncludes","addFallbacks","FiberMaterialPluginBase","FiberShadowGeneratorPropsHandler","blurBoxOffset","blurScale","contactHardeningLightSizeUVRatio","customAllowRendering","darkness","depthScale","enableSoftTransparentShadow","filteringQuality","forceBackFacesOnly","frustumEdgeFalloff","mapSize","normalBias","onAfterShadowMapRenderMeshObservable","onAfterShadowMapRenderObservable","onBeforeShadowMapRenderMeshObservable","onBeforeShadowMapRenderObservable","transparencyShadow","useBlurCloseExponentialShadowMap","useBlurExponentialShadowMap","useCloseExponentialShadowMap","useContactHardeningShadow","useExponentialShadowMap","useKernelBlur","useOpacityTextureForTransparentShadow","usePercentageCloserFiltering","usePoissonSampling","addShadowCaster","setDarkness","setTransparencyShadow","FiberShadowGenerator","isShadowGenerator","FiberCascadedShadowGeneratorPropsHandler","autoCalcDepthBounds","autoCalcDepthBoundsRefreshRate","cascadeBlendPercentage","depthClamp","freezeShadowCastersBoundingInfo","lambda","numCascades","penumbraDarkness","stabilizeCascades","setDepthRenderer","setMinMaxDistance","FiberCascadedShadowGenerator","FiberEngineViewPropsHandler","clearBeforeCopy","customResize","FiberEngineView","FiberGizmoManagerPropsHandler","boundingBoxGizmoEnabled","clearGizmoOnEmptyPointerEvent","enableAutoPicking","onAttachedToMeshObservable","onAttachedToNodeObservable","positionGizmoEnabled","rotationGizmoEnabled","scaleGizmoEnabled","usePointerToAttachGizmos","FiberGizmoManager","FiberLayerPropsHandler","alphaBlendingMode","alphaTest","applyPostProcess","isBackground","renderOnlyInRenderTargetTextures","texture","FiberLayer","isLayer","FiberImageProcessingConfigurationPropsHandler","applyByPostProcess","colorGradingBGR","colorGradingWithGreenDepth","onUpdateParameters","skipFinalColorClamp","FiberImageProcessingConfiguration","FiberPBRClearCoatConfigurationPropsHandler","isTintEnabled","remapF0OnInterfaceChange","textureRoughness","tintColor","tintColorAtDistance","tintTexture","tintThickness","useRoughnessFromMainTexture","FiberPBRClearCoatConfiguration","FiberPBRIridescenceConfigurationPropsHandler","maximumThickness","minimumThickness","thicknessTexture","FiberPBRIridescenceConfiguration","FiberPBRAnisotropicConfigurationPropsHandler","legacy","FiberPBRAnisotropicConfiguration","FiberPBRBRDFConfigurationPropsHandler","useEnergyConservation","useSmithVisibilityHeightCorrelated","useSpecularGlossinessInputEnergyConservation","useSphericalHarmonics","FiberPBRBRDFConfiguration","FiberPBRSheenConfigurationPropsHandler","albedoScaling","linkSheenWithAlbedo","FiberPBRSheenConfiguration","FiberPBRSubSurfaceConfigurationPropsHandler","diffusionDistance","isRefractionEnabled","isScatteringEnabled","isTranslucencyEnabled","refractionIntensity","refractionIntensityTexture","scatteringDiffusionProfile","translucencyIntensity","translucencyIntensityTexture","useAlbedoToTintRefraction","useAlbedoToTintTranslucency","useGltfStyleTextures","useMaskFromThicknessTexture","useThicknessAsDepth","volumeIndexOfRefraction","FiberPBRSubSurfaceConfiguration","FiberPrePassConfigurationPropsHandler","FiberPrePassConfiguration","FiberDetailMapConfigurationPropsHandler","bumpLevel","diffuseBlendLevel","normalBlendMethod","roughnessBlendLevel","FiberDetailMapConfiguration","FiberAutoRotationBehaviorPropsHandler","idleRotationSpeed","idleRotationSpinupTime","idleRotationWaitTime","targetAlpha","zoomStopsAnimation","FiberAutoRotationBehavior","isBehavior","FiberBouncingBehaviorPropsHandler","autoTransitionRange","lowerRadiusTransitionRange","transitionDuration","upperRadiusTransitionRange","FiberBouncingBehavior","FiberFramingBehaviorPropsHandler","autoCorrectCameraLimitsAndSensibility","defaultElevation","elevationReturnTime","elevationReturnWaitTime","framingTime","onTargetFramingAnimationEndObservable","positionScale","radiusScale","FiberFramingBehavior","FiberAttachToBoxBehaviorPropsHandler","distanceAwayFromBottomOfFace","distanceAwayFromFace","FiberAttachToBoxBehavior","FiberBaseSixDofDragBehaviorPropsHandler","allowMultiPointer","currentDraggingPointerId","currentDraggingPointerID","currentDraggingPointerIds","detachCameraControls","zDragFactor","FiberBaseSixDofDragBehavior","FiberFadeInOutBehaviorPropsHandler","delay","fadeInDelay","fadeInTime","fadeOutDelay","fadeOutTime","FiberFadeInOutBehavior","FiberFollowBehaviorPropsHandler","defaultDistance","fixedVerticalOffset","ignoreAngleClamp","ignoreCameraPitchAndRoll","ignoreDistanceClamp","interpolatePose","lerpTime","maximumDistance","maxViewHorizontalDegrees","maxViewVerticalDegrees","minimumDistance","orientToCameraDeadzoneDegrees","pitchOffset","useFixedVerticalOffset","verticalMaxDistance","FiberFollowBehavior","FiberHandConstraintBehaviorPropsHandler","gazeProximityRadius","handConstraintVisibility","nodeOrientationMode","palmUpStrictness","targetOffset","targetZone","zoneOrientationMode","FiberHandConstraintBehavior","FiberMultiPointerScaleBehaviorPropsHandler","FiberMultiPointerScaleBehavior","FiberPointerDragBehaviorPropsHandler","dragButtons","dragDeltaRatio","dragging","lastDragPosition","maxDragAngle","moveAttached","onEnabledObservable","startAndReleaseDragOnPointerEvents","updateDragPlane","useObjectOrientationForDragging","validateDrag","FiberPointerDragBehavior","FiberSixDofDragBehaviorPropsHandler","disableMovement","faceCameraOnDragStart","onPositionChangedObservable","rotateAroundYOnly","rotateDraggedObject","rotateWithMotionController","FiberSixDofDragBehavior","FiberSurfaceMagnetismBehaviorPropsHandler","hitNormalOffset","keepOrientationVertical","maxStickingDistance","FiberSurfaceMagnetismBehavior","FiberDefaultBehaviorPropsHandler","followBehaviorEnabled","sixDofDragBehaviorEnabled","surfaceMagnetismBehaviorEnabled","FiberDefaultBehavior","FiberScenePropsHandler","afterCameraRender","afterRender","animationsEnabled","animationTimeScale","autoClearDepthAndStencil","beforeCameraRender","beforeRender","blockfreeActiveMeshesAndRenderingGroups","blockMaterialDirtyMechanism","collisionsEnabled","constantlyUpdateMeshUnderPointer","customLODSelector","defaultCursor","dispatchAllSubMeshesOfActiveMeshes","doNotHandleCursors","DoubleClickDelay","DragMovementThreshold","dumpNextRenderTargets","ExclusiveDoubleClickMode","fogColor","fogDensity","fogEnd","fogMode","fogStart","forcePointsCloud","forceWireframe","getActiveMeshCandidates","getActiveSubMeshCandidates","getCollidingSubMeshCandidates","getDeterministicFrameTime","getIntersectingSubMeshCandidates","gravity","lensFlaresEnabled","lightsEnabled","loadingPluginName","LongPressDelay","needsPreviousWorldMatrices","onActiveCameraChanged","onActiveCamerasChanged","onAfterActiveMeshesEvaluationObservable","onAfterAnimationsObservable","onAfterCameraRenderObservable","onAfterDrawPhaseObservable","onAfterParticlesRenderingObservable","onAfterPhysicsObservable","onAfterRenderCameraObservable","onAfterRenderingGroupObservable","onAfterRenderTargetsRenderObservable","onAfterStepObservable","onAnimationFileImportedObservable","onBeforeActiveMeshesEvaluationObservable","onBeforeAnimationsObservable","onBeforeCameraRenderObservable","onBeforeDrawPhaseObservable","onBeforeParticlesRenderingObservable","onBeforePhysicsObservable","onBeforeRenderingGroupObservable","onBeforeRenderTargetsRenderObservable","onBeforeStepObservable","onCameraRemovedObservable","onDataLoadedObservable","onGeometryRemovedObservable","onKeyboardObservable","onLightRemovedObservable","onMaterialRemovedObservable","onMeshImportedObservable","onMeshRemovedObservable","onMultiMaterialRemovedObservable","onNewCameraAddedObservable","onNewGeometryAddedObservable","onNewLightAddedObservable","onNewMaterialAddedObservable","onNewMeshAddedObservable","onNewMultiMaterialAddedObservable","onNewSkeletonAddedObservable","onNewTextureAddedObservable","onNewTransformNodeAddedObservable","onPointerDown","onPointerMove","onPointerObservable","onPointerPick","onPointerUp","onPreKeyboardObservable","onPrePointerObservable","onReadyObservable","onScenePerformancePriorityChangedObservable","onSkeletonRemovedObservable","onTextureRemovedObservable","onTransformNodeRemovedObservable","particlesEnabled","performancePriority","physicsEnabled","pointerDownFastCheck","pointerDownPredicate","pointerMoveFastCheck","pointerMovePredicate","pointerMoveTrianglePredicate","pointerUpFastCheck","pointerUpPredicate","pointerX","pointerY","postProcessesEnabled","preventDefaultOnPointerDown","preventDefaultOnPointerUp","probesEnabled","proceduralTexturesEnabled","renderTargetsEnabled","requireLightSorting","shadowsEnabled","skeletonsEnabled","skipFrustumClipping","skipPointerDownPicking","skipPointerMovePicking","skipPointerUpPicking","spritesEnabled","texturesEnabled","useConstantAnimationDeltaTime","useDelayedTextureLoading","useRightHandedSystem","addActionManager","addAnimation","addAnimationGroup","addExternalData","addGeometry","addLight","addMaterial","addMorphTargetManager","addMultiMaterial","addParticleSystem","addPendingData","addSkeleton","addTexture","addTransformNode","deleteCompoundImpostor","enablePhysics","setActiveCameraById","setActiveCameraByID","setActiveCameraByName","setPointerOverMesh","setSceneUniformBuffer","setStepId","setTransformMatrix","ADTForMesh","ADTForMeshTexture","ADTFullscreenUI","AbstractButton3D","AbstractMesh","AdvancedDynamicTexture","AnaglyphArcRotateCamera","AnaglyphFreeCamera","AnaglyphGamepadCamera","AnaglyphPostProcess","AnaglyphUniversalCamera","ArcFollowCamera","ArcRotateCamera","AttachToBoxBehavior","AutoRotationBehavior","AxisDragGizmo","AxisScaleGizmo","BackgroundMaterial","BaseSixDofDragBehavior","BaseSlider","BaseTexture","BlackAndWhitePostProcess","BloomMergePostProcess","BlurPostProcess","BouncingBehavior","BoundingBoxGizmo","Box","Button","Button3D","CameraGizmo","Capsule","CascadedShadowGenerator","Checkbox","ChromaticAberrationPostProcess","CircleOfConfusionPostProcess","ColorCorrectionPostProcess","ColorGradingTexture","ColorPicker","Container","Container3D","ContentDisplay3D","Control3D","ConvolutionPostProcess","CubeTexture","CustomProceduralTexture","Cylinder","CylinderPanel","DashedLines","Decal","DefaultBehavior","DefaultRenderingPipeline","DepthOfFieldBlurPostProcess","DepthOfFieldMergePostProcess","DetailMapConfiguration","DeviceOrientationCamera","DirectionalLight","Disc","DisplayGrid","DisplayPassPostProcess","DynamicTexture","EffectLayer","Ellipse","EngineView","EnvironmentHelper","EquiRectangularCubeTexture","ExtractHighlightsPostProcess","ExtrudePolygon","ExtrudeShape","ExtrudeShapeCustom","FadeInOutBehavior","FilterPostProcess","FluentBackplateMaterial","FluentButtonMaterial","FluentMaterial","FlyCamera","FocusableButton","FollowBehavior","FollowCamera","FramingBehavior","FreeCamera","FxaaPostProcess","GUI3DManager","GamepadCamera","Geodesic","Gizmo","GizmoManager","GlowLayer","Goldberg","GoldbergMesh","GrainPostProcess","GreasedLineBaseMesh","GreasedLineMesh","GreasedLineRibbonMesh","GreasedLineSimpleMaterial","Grid","Ground","GroundFromHeightMap","GroundMesh","HDRCubeTexture","HandConstraintBehavior","HandMenu","HandleMaterial","HemisphericLight","HighlightLayer","HighlightsPostProcess","HolographicBackplate","HolographicButton","HolographicSlate","HtmlElementTexture","IcoSphere","Image","ImageBasedSlider","ImageProcessingConfiguration","ImageProcessingPostProcess","ImageScrollBar","InputPassword","InputText","InputTextArea","InstancedLinesMesh","InstancedMesh","Lathe","Layer","LensRenderingPipeline","Light","LightGizmo","Line","LineSystem","Lines","LinesMesh","MRDLBackglowMaterial","MRDLBackplateMaterial","MRDLFrontplateMaterial","MRDLInnerquadMaterial","MRDLSliderBarMaterial","MRDLSliderThumbMaterial","Material","MaterialPluginBase","MeshButton3D","MirrorTexture","MotionBlurPostProcess","MultiLine","MultiMaterial","MultiPointerScaleBehavior","MultiRenderTarget","MultiviewRenderTarget","NearMenu","Node","NodeMaterial","NoiseProceduralTexture","OcclusionMaterial","PBRAnisotropicConfiguration","PBRBRDFConfiguration","PBRBaseMaterial","PBRBaseSimpleMaterial","PBRClearCoatConfiguration","PBRIridescenceConfiguration","PBRMaterial","PBRMetallicRoughnessMaterial","PBRSheenConfiguration","PBRSpecularGlossinessMaterial","PBRSubSurfaceConfiguration","PassCubePostProcess","PassPostProcess","PhysicsAggregate","PhysicsImpostor","Plane","PlaneDragGizmo","PlanePanel","PlaneRotationGizmo","PointLight","PointerDragBehavior","PointsCloudSystem","Polygon","Polyhedron","PositionGizmo","PostProcess","PostProcessRenderPipeline","PrePassConfiguration","PrePassRenderTarget","ProceduralTexture","PushMaterial","RadioButton","RawCubeTexture","RawTexture","RawTexture2DArray","RawTexture3D","Rectangle","RefractionPostProcess","RefractionTexture","RenderTargetTexture","Ribbon","RotationGizmo","SSAO2RenderingPipeline","SSAORenderingPipeline","SSRRenderingPipeline","ScaleGizmo","ScatterPanel","ScreenSpaceCurvaturePostProcess","ScreenSpaceReflectionPostProcess","ScrollBar","ScrollViewer","SelectionPanel","ShaderMaterial","ShadowGenerator","ShadowLight","SharpenPostProcess","SixDofDragBehavior","SlateGizmo","Slider","Slider3D","Sphere","SpherePanel","SpotLight","StackPanel","StackPanel3D","StandardMaterial","StandardRenderingPipeline","StereoscopicArcRotateCamera","StereoscopicFreeCamera","StereoscopicGamepadCamera","StereoscopicInterlacePostProcess","StereoscopicInterlacePostProcessI","StereoscopicScreenUniversalCamera","StereoscopicUniversalCamera","SubSurfaceScatteringPostProcess","SurfaceMagnetismBehavior","TargetCamera","Text","TextBlock","ThinRenderTargetTexture","ThinTexture","TiledBox","TiledGround","TiledPlane","ToggleButton","TonemapPostProcess","Torus","TorusKnot","TouchButton3D","TouchCamera","TouchHolographicButton","TouchHolographicMenu","TouchMeshButton3D","TrailMesh","TransformNode","Tube","UniversalCamera","UtilityLayerRenderer","VRDeviceOrientationArcRotateCamera","VRDeviceOrientationFreeCamera","VRDeviceOrientationGamepadCamera","VRDistortionCorrectionPostProcess","VRExperienceHelper","VRMultiviewToSingleviewPostProcess","VideoTexture","Viewport","VirtualJoysticksCamera","VirtualKeyboard","VolumeBasedPanel","VolumetricLightScatteringPostProcess","WebXRCamera","XRSpaceWarpRenderTarget","_ScrollViewerWindow","classesMap","abstractScene","BabylonjsCoreAbstractScene","AbstractScene","BabylonjsCoreScene","Scene","dynamicTerrain","ExtensionsDynamicTerrain","BabylonjsCoreCamera","gizmo","BabylonjsCoreGizmo","gizmoManager","BabylonjsCoreGizmoManager","environmentHelper","BabylonjsCoreEnvironmentHelper","effectLayer","BabylonjsCoreEffectLayer","layer","BabylonjsCoreLayer","BabylonjsCoreLight","material","BabylonjsCoreMaterial","materialPluginBase","BabylonjsCoreMaterialPluginBase","BabylonjsCoreViewport","abstractMesh","BabylonjsCoreAbstractMesh","BabylonjsCoreMesh","transformNode","BabylonjsCoreTransformNode","pointsCloudSystem","BabylonjsCorePointsCloudSystem","postProcess","BabylonjsCorePostProcess","tonemapPostProcess","BabylonjsCoreTonemapPostProcess","utilityLayerRenderer","BabylonjsCoreUtilityLayerRenderer","advancedDynamicTexture","BabylonjsGuiAdvancedDynamicTexture","gui3DManager","BabylonjsGuiGUI3DManager","autoRotationBehavior","BabylonjsCoreAutoRotationBehavior","bouncingBehavior","BabylonjsCoreBouncingBehavior","framingBehavior","BabylonjsCoreFramingBehavior","attachToBoxBehavior","BabylonjsCoreAttachToBoxBehavior","baseSixDofDragBehavior","BabylonjsCoreBaseSixDofDragBehavior","fadeInOutBehavior","BabylonjsCoreFadeInOutBehavior","followBehavior","BabylonjsCoreFollowBehavior","handConstraintBehavior","BabylonjsCoreHandConstraintBehavior","multiPointerScaleBehavior","BabylonjsCoreMultiPointerScaleBehavior","pointerDragBehavior","BabylonjsCorePointerDragBehavior","sixDofDragBehavior","BabylonjsCoreSixDofDragBehavior","surfaceMagnetismBehavior","BabylonjsCoreSurfaceMagnetismBehavior","vrExperienceHelper","BabylonjsCoreVRExperienceHelper","engineView","BabylonjsCoreEngineView","cascadedShadowGenerator","BabylonjsCoreCascadedShadowGenerator","shadowGenerator","BabylonjsCoreShadowGenerator","thinTexture","BabylonjsCoreThinTexture","greasedLineBaseMesh","BabylonjsCoreGreasedLineBaseMesh","physicsImpostor","BabylonjsCorePhysicsImpostor","physicsAggregate","BabylonjsCorePhysicsAggregate","postProcessRenderPipeline","BabylonjsCorePostProcessRenderPipeline","control","BabylonjsGuiControl","textBlock","BabylonjsGuiTextBlock","defaultBehavior","BabylonjsGuiDefaultBehavior","control3D","BabylonjsGuiControl3D","BabylonjsCoreNode","instancedMesh","BabylonjsCoreInstancedMesh","instancedLinesMesh","BabylonjsCoreInstancedLinesMesh","linesMesh","BabylonjsCoreLinesMesh","goldbergMesh","BabylonjsCoreGoldbergMesh","groundMesh","BabylonjsCoreGroundMesh","trailMesh","BabylonjsCoreTrailMesh","greasedLineMesh","BabylonjsCoreGreasedLineMesh","greasedLineRibbonMesh","BabylonjsCoreGreasedLineRibbonMesh","renderTargetTexture","BabylonjsCoreRenderTargetTexture","targetCamera","BabylonjsCoreTargetCamera","freeCamera","BabylonjsCoreFreeCamera","webXrCamera","BabylonjsCoreWebXRCamera","touchCamera","BabylonjsCoreTouchCamera","universalCamera","BabylonjsCoreUniversalCamera","gamepadCamera","BabylonjsCoreGamepadCamera","anaglyphGamepadCamera","BabylonjsCoreAnaglyphGamepadCamera","stereoscopicGamepadCamera","BabylonjsCoreStereoscopicGamepadCamera","anaglyphUniversalCamera","BabylonjsCoreAnaglyphUniversalCamera","stereoscopicUniversalCamera","BabylonjsCoreStereoscopicUniversalCamera","stereoscopicScreenUniversalCamera","BabylonjsCoreStereoscopicScreenUniversalCamera","deviceOrientationCamera","BabylonjsCoreDeviceOrientationCamera","vrDeviceOrientationFreeCamera","BabylonjsCoreVRDeviceOrientationFreeCamera","vrDeviceOrientationGamepadCamera","BabylonjsCoreVRDeviceOrientationGamepadCamera","anaglyphFreeCamera","BabylonjsCoreAnaglyphFreeCamera","stereoscopicFreeCamera","BabylonjsCoreStereoscopicFreeCamera","virtualJoysticksCamera","BabylonjsCoreVirtualJoysticksCamera","arcRotateCamera","BabylonjsCoreArcRotateCamera","anaglyphArcRotateCamera","BabylonjsCoreAnaglyphArcRotateCamera","stereoscopicArcRotateCamera","BabylonjsCoreStereoscopicArcRotateCamera","vrDeviceOrientationArcRotateCamera","BabylonjsCoreVRDeviceOrientationArcRotateCamera","flyCamera","BabylonjsCoreFlyCamera","followCamera","BabylonjsCoreFollowCamera","arcFollowCamera","BabylonjsCoreArcFollowCamera","meshBuilder","BabylonjsCoreMeshBuilder","pushMaterial","BabylonjsCorePushMaterial","nodeMaterial","BabylonjsCoreNodeMaterial","imageProcessingConfiguration","BabylonjsCoreImageProcessingConfiguration","shaderMaterial","BabylonjsCoreShaderMaterial","BabylonjsCoreBaseTexture","occlusionMaterial","BabylonjsCoreOcclusionMaterial","greasedLineSimpleMaterial","BabylonjsCoreGreasedLineSimpleMaterial","rawTexture","BabylonjsCoreRawTexture","handleMaterial","BabylonjsGuiHandleMaterial","pbrBaseMaterial","BabylonjsCorePBRBaseMaterial","pbrBaseSimpleMaterial","BabylonjsCorePBRBaseSimpleMaterial","pbrMetallicRoughnessMaterial","BabylonjsCorePBRMetallicRoughnessMaterial","pbrSpecularGlossinessMaterial","BabylonjsCorePBRSpecularGlossinessMaterial","pbrMaterial","BabylonjsCorePBRMaterial","standardMaterial","BabylonjsCoreStandardMaterial","backgroundMaterial","BabylonjsCoreBackgroundMaterial","shadowLight","BabylonjsCoreShadowLight","fluentMaterial","BabylonjsGuiFluentMaterial","fluentButtonMaterial","BabylonjsGuiFluentButtonMaterial","fluentBackplateMaterial","BabylonjsGuiFluentBackplateMaterial","mrdlSliderBarMaterial","BabylonjsGuiMRDLSliderBarMaterial","BabylonjsCoreTexture","mrdlSliderThumbMaterial","BabylonjsGuiMRDLSliderThumbMaterial","mrdlBackplateMaterial","BabylonjsGuiMRDLBackplateMaterial","mrdlBackglowMaterial","BabylonjsGuiMRDLBackglowMaterial","mrdlFrontplateMaterial","BabylonjsGuiMRDLFrontplateMaterial","mrdlInnerquadMaterial","BabylonjsGuiMRDLInnerquadMaterial","multiMaterial","BabylonjsCoreMultiMaterial","directionalLight","BabylonjsCoreDirectionalLight","pointLight","BabylonjsCorePointLight","spotLight","BabylonjsCoreSpotLight","hemisphericLight","BabylonjsCoreHemisphericLight","container","BabylonjsGuiContainer","rectangle","BabylonjsGuiRectangle","BabylonjsGuiButton","focusableButton","BabylonjsGuiFocusableButton","selectionPanel","BabylonjsGuiSelectionPanel","scrollViewer","BabylonjsGuiScrollViewer","BabylonjsGuiImage","toggleButton","BabylonjsGuiToggleButton","stackPanel","BabylonjsGuiStackPanel","virtualKeyboard","BabylonjsGuiVirtualKeyboard","BabylonjsGuiEllipse","grid","BabylonjsGuiGrid","scrollViewerWindow","BabylonjsGui_ScrollViewerWindow","checkbox","BabylonjsGuiCheckbox","colorPicker","BabylonjsGuiColorPicker","inputText","BabylonjsGuiInputText","inputTextArea","BabylonjsGuiInputTextArea","inputPassword","BabylonjsGuiInputPassword","BabylonjsGuiLine","multiLine","BabylonjsGuiMultiLine","radioButton","BabylonjsGuiRadioButton","baseSlider","BabylonjsGuiBaseSlider","scrollBar","BabylonjsGuiScrollBar","imageScrollBar","BabylonjsGuiImageScrollBar","slider","BabylonjsGuiSlider","imageBasedSlider","BabylonjsGuiImageBasedSlider","displayGrid","BabylonjsGuiDisplayGrid","container3D","BabylonjsGuiContainer3D","volumeBasedPanel","BabylonjsGuiVolumeBasedPanel","cylinderPanel","BabylonjsGuiCylinderPanel","touchHolographicMenu","BabylonjsGuiTouchHolographicMenu","touchHolographicButton","BabylonjsGuiTouchHolographicButton","handMenu","BabylonjsGuiHandMenu","nearMenu","BabylonjsGuiNearMenu","planePanel","BabylonjsGuiPlanePanel","scatterPanel","BabylonjsGuiScatterPanel","spherePanel","BabylonjsGuiSpherePanel","stackPanel3D","BabylonjsGuiStackPanel3D","contentDisplay3D","BabylonjsGuiContentDisplay3D","abstractButton3D","BabylonjsGuiAbstractButton3D","button3D","BabylonjsGuiButton3D","touchButton3D","BabylonjsGuiTouchButton3D","touchMeshButton3D","BabylonjsGuiTouchMeshButton3D","holographicButton","BabylonjsGuiHolographicButton","meshButton3D","BabylonjsGuiMeshButton3D","holographicSlate","BabylonjsGuiHolographicSlate","holographicBackplate","BabylonjsGuiHolographicBackplate","slider3D","BabylonjsGuiSlider3D","glowLayer","BabylonjsCoreGlowLayer","highlightLayer","BabylonjsCoreHighlightLayer","cubeTexture","BabylonjsCoreCubeTexture","rawCubeTexture","BabylonjsCoreRawCubeTexture","videoTexture","BabylonjsCoreVideoTexture","proceduralTexture","BabylonjsCoreProceduralTexture","customProceduralTexture","BabylonjsCoreCustomProceduralTexture","noiseProceduralTexture","BabylonjsCoreNoiseProceduralTexture","rawTexture2DArray","BabylonjsCoreRawTexture2DArray","mirrorTexture","BabylonjsCoreMirrorTexture","multiRenderTarget","BabylonjsCoreMultiRenderTarget","prePassRenderTarget","BabylonjsCorePrePassRenderTarget","imageProcessingPostProcess","BabylonjsCoreImageProcessingPostProcess","BabylonjsCoreRefractionTexture","xrSpaceWarpRenderTarget","BabylonjsCoreXRSpaceWarpRenderTarget","multiviewRenderTarget","BabylonjsCoreMultiviewRenderTarget","dynamicTexture","BabylonjsCoreDynamicTexture","rawTexture3D","BabylonjsCoreRawTexture3D","BabylonjsCoreColorGradingTexture","equiRectangularCubeTexture","BabylonjsCoreEquiRectangularCubeTexture","hdrCubeTexture","BabylonjsCoreHDRCubeTexture","htmlElementTexture","BabylonjsCoreHtmlElementTexture","thinRenderTargetTexture","BabylonjsCoreThinRenderTargetTexture","defaultRenderingPipeline","BabylonjsCoreDefaultRenderingPipeline","chromaticAberrationPostProcess","BabylonjsCoreChromaticAberrationPostProcess","fxaaPostProcess","BabylonjsCoreFxaaPostProcess","grainPostProcess","BabylonjsCoreGrainPostProcess","sharpenPostProcess","BabylonjsCoreSharpenPostProcess","lensRenderingPipeline","BabylonjsCoreLensRenderingPipeline","ssao2RenderingPipeline","BabylonjsCoreSSAO2RenderingPipeline","ssaoRenderingPipeline","BabylonjsCoreSSAORenderingPipeline","standardRenderingPipeline","BabylonjsCoreStandardRenderingPipeline","screenSpaceReflectionPostProcess","BabylonjsCoreScreenSpaceReflectionPostProcess","blurPostProcess","BabylonjsCoreBlurPostProcess","ssrRenderingPipeline","BabylonjsCoreSSRRenderingPipeline","anaglyphPostProcess","BabylonjsCoreAnaglyphPostProcess","blackAndWhitePostProcess","BabylonjsCoreBlackAndWhitePostProcess","extractHighlightsPostProcess","BabylonjsCoreExtractHighlightsPostProcess","bloomMergePostProcess","BabylonjsCoreBloomMergePostProcess","depthOfFieldBlurPostProcess","BabylonjsCoreDepthOfFieldBlurPostProcess","circleOfConfusionPostProcess","BabylonjsCoreCircleOfConfusionPostProcess","colorCorrectionPostProcess","BabylonjsCoreColorCorrectionPostProcess","convolutionPostProcess","BabylonjsCoreConvolutionPostProcess","depthOfFieldMergePostProcess","BabylonjsCoreDepthOfFieldMergePostProcess","displayPassPostProcess","BabylonjsCoreDisplayPassPostProcess","filterPostProcess","BabylonjsCoreFilterPostProcess","highlightsPostProcess","BabylonjsCoreHighlightsPostProcess","motionBlurPostProcess","BabylonjsCoreMotionBlurPostProcess","passPostProcess","BabylonjsCorePassPostProcess","passCubePostProcess","BabylonjsCorePassCubePostProcess","refractionPostProcess","BabylonjsCoreRefractionPostProcess","stereoscopicInterlacePostProcessI","BabylonjsCoreStereoscopicInterlacePostProcessI","stereoscopicInterlacePostProcess","BabylonjsCoreStereoscopicInterlacePostProcess","volumetricLightScatteringPostProcess","BabylonjsCoreVolumetricLightScatteringPostProcess","vrDistortionCorrectionPostProcess","BabylonjsCoreVRDistortionCorrectionPostProcess","vrMultiviewToSingleviewPostProcess","BabylonjsCoreVRMultiviewToSingleviewPostProcess","screenSpaceCurvaturePostProcess","BabylonjsCoreScreenSpaceCurvaturePostProcess","subSurfaceScatteringPostProcess","BabylonjsCoreSubSurfaceScatteringPostProcess","planeDragGizmo","BabylonjsCorePlaneDragGizmo","positionGizmo","BabylonjsCorePositionGizmo","planeRotationGizmo","BabylonjsCorePlaneRotationGizmo","rotationGizmo","BabylonjsCoreRotationGizmo","axisScaleGizmo","BabylonjsCoreAxisScaleGizmo","scaleGizmo","BabylonjsCoreScaleGizmo","boundingBoxGizmo","BabylonjsCoreBoundingBoxGizmo","axisDragGizmo","BabylonjsCoreAxisDragGizmo","lightGizmo","BabylonjsCoreLightGizmo","cameraGizmo","BabylonjsCoreCameraGizmo","slateGizmo","BabylonjsGuiSlateGizmo","pbrClearCoatConfiguration","BabylonjsCorePBRClearCoatConfiguration","pbrIridescenceConfiguration","BabylonjsCorePBRIridescenceConfiguration","pbrAnisotropicConfiguration","BabylonjsCorePBRAnisotropicConfiguration","pbrbrdfConfiguration","BabylonjsCorePBRBRDFConfiguration","pbrSheenConfiguration","BabylonjsCorePBRSheenConfiguration","pbrSubSurfaceConfiguration","BabylonjsCorePBRSubSurfaceConfiguration","prePassConfiguration","BabylonjsCorePrePassConfiguration","detailMapConfiguration","BabylonjsCoreDetailMapConfiguration","intrinsicClassMap","adtForMesh","adtForMeshTexture","adtFullscreenUi","box","capsule","cylinder","dashedLines","decal","disc","extrudePolygon","extrudeShape","extrudeShapeCustom","geodesic","goldberg","ground","groundFromHeightMap","icoSphere","lathe","lines","lineSystem","plane","polyhedron","ribbon","sphere","tiledBox","tiledGround","tiledPlane","torus","torusKnot","tube","babylonClassFactory","importAlias","LoaderStatus","applyUpdateToInstance","createdInstance","hostInstance","dotProps","split","lastProp","pop","reduce","prop","observers","observer","apply","values","applyInitialPropsToCreatedInstance","initPayload","forEach","handlerUpdates","suspenseCache","suspenseScene","LoadedModel","status","Loading","_scaledToDimension","rootMesh","max","getChildMeshes","childMesh","getBoundingInfo","boundingBox","minimumWorld","maximumWorld","Minimize","Maximize","BoundingInfo","scaleTo","maxDimension","boundingInfo","dimension","dispose","particleSystems","ps","skeletons","skeleton","animationGroups","animationGroup","SceneLoaderContext","SceneLoaderContextProvider","progress","setProgress","Provider","lastProgress","updateProgress","useSceneLoader","rootUrl","sceneFilename","pluginExtension","initialProps","opts","hookScene","Error","result","taskPromise","suspender","suspenseKey","sceneLoaderContext","Promise","resolve","reject","loadedModel","loader","SceneLoader","ImportMesh","meshNames","Loaded","scaleToDimension","initPayload_1","onModelLoaded","originalDispose","call","event","reportProgress","onLoadProgress","_","message","exception","onModelError","loaderName","__awaiter","e_1","Model","rest","sceneLoaderResults","fromInstance","childMeshesNotTracked","Skybox","key","SKYBOX_MODE","assignTo","EngineCanvasContext","withEngineCanvasContext","Component","Consumer","ctx","engineCanvasContext","TaskType","useEngine","sceneContext","useCanvas","ReactBabylonjsEngine","setEngineReady","onBeforeRenderLoopObservable","onEndRenderLoopObservable","canvasRef","canvasReady","setCanvasReady","shouldRenderRef","isPaused","touchActionNone","canvasId","engineOptions","antialias","adaptToDeviceRatio","renderOptions","observeCanvasResize","canvasProps","observerEnabled","whenVisibleOnly","enabledOption","IntersectionObserver","entries","entry","isIntersecting","log","observe","unobserve","useCanvasObserver","Engine","runRenderLoop","hasObservers","notifyObservers","scenes","cameras","onContextLostObservable","eventData","onResizeWindow","resize","window","addEventListener","removeEventListener","view","useCamera","createCameraFn","autoAttach","noPreventDefault","cameraRef","attachControl","detachControl","AssetManagerContext","AssetManagerContextProvider","getTaskKey","task","taskType","Binary","JSON","stringify","useAssetManager","tasksCompletedCache","tasks","assetManagerContext","useDefaultLoadingScreen","newRequests","Map","assetManager","AssetsManager","cachedTasks","binaryTask","addBinaryFileTask","onSuccess","meshTask","addMeshTask","meshesNames","textureTask","addTextureTask","noMipmap","invertY","samplingMode","createResultFromTasks","taskNameMap","prev","cur","failed","onFinish","has","originalTask","key_1","result_1","onProgressObservable","eventState","onTaskError","errorObject","load","createGetAssets","useAssetManagerWithCache","useCustomPropsHandler","firstRun","useHover","over","out","ownRef","setValue","createdRef","registeredMeshActions_1","observer2dGuiEnter_1","observer2dGuiOut_1","actionManager","ActionManager","onPointerOverAction","registerAction","ExecuteCodeAction","OnPointerOverTrigger","ev","onPointerOutAction","OnPointerOutTrigger","action","unregisterAction","splice","useClick","onClick","mesh_1","action_1","OnPickTrigger","HostRegistrationStore","Register","host","_store","hostElementName","GetRegisteredHost","applyInitialPropsToInstance","__rb_createdInstance","CreationType","FactoryMethod","Constructor","BaseLifecycleListener","onParented","child","customProps","assignFrom","parentHostInstance","metadata","deferredCreationProps","onChildAdded","onMount","instance","onUnmount","AbstractMeshLifecycleListener","_super","__extends","tmp","addIncludeOnlyChildren","shadowCastChildren","AdvancedDynamicTextureLifecycleListener","arguments","materialRef","added","addControls","createForParentMesh","Black","supportPointerMove","attachToMesh","gridRow","gridColumn","connectControlNames","controlNames","connect","keyboard","searchInstance","ADTFullscreenUILifecycleListener","BehaviorLifecycleListener","behaviorAware","behavior","removeBehavior","CameraLifecycleListener","DeferredCreationLifecycleListener","createInstance","BaseShadowGeneratorLifecycleListener","onMeshAddedObservable","createShadowGenerator","useFullFloatFirst","generatorType","addShadowCasters_1","generator","children_1","shadowCasters","shadowCasters_1","removeShadowCaster","shadowCastersExcluding","shadowCastersExcluding_1","CascadedShadowGeneratorLifecycleListener","EngineViewLifecycleListener","registerView","unRegisterView","EnvironmentHelperLifecycleListener","mainColor","teleportEnvironmentGround","FallbackLifecycleListener","GizmoLifecycleListener","gizmoProps","skipUtilityLayerAttach","foundUtilityLayerRender","gizmoLayer","skipAutoAttach","attachGizmoToMesh","attachGizmoToNode","searchType","attachedMesh","attachedNode","GizmoManagerLifecycleListener","attachToNode","RowOrColumnDefinitionPropsHandlers","unit","RowOrColumnDefinitionPropsHandler","GUI2DControlLifecycleListener","defaultKeyboard","addedParent","GUI3DControlLifecycleListener","last3DGuiControl","last3d","childrenAsContent","linkToTransformNodeByName","toLinkTo","getMeshByName","linkToTransformNode","onControlAdded","GUI3DManagerLifecycleListener","assignProperty","propertyPath","propPath","propsList","groups","arrayName","arrayIndexString","arrayIndex","parseInt","arrayProp","MaterialsLifecycleListener","onCreated","attachToMeshesByName","meshNamesToAttachTo_1","setTimeout","NodeLifecycleListener","PhysicsImpostorLifecycleListener","_parent","_options","object","ShadowGeneratorLifecycleListener","TargetPropsHandler","propertyUpdates","lockedTargetMeshName","TexturesLifecycleListener","ViewportLifecycleListener","VRExperienceHelperLifecycleListener","enableInteractions","ColumnDefinitionLifecycleListener","_grid","ValueAndUnit","UNITMODE_PIXEL","getColumnDefinition","columnCount","ColumnDefinition","propHandlerInstance","hostFactory","lifecycleListenerFactory","createInfo","RowDefinitionLifecycleListener","getRowDefinition","rowCount","RowDefinition","parentInstance","lifecycleListener","removeControl","array","removeRecursive","disposeInstanceOnUnmount","ci","childIndex","getConstructorValue","v3result","c3result","c4result","ReactBabylonJSHostConfig","supportsMutation","now","Date","isPrimaryRenderer","supportsPersistence","supportsHydration","getPublicInstance","getRootHostContext","rootContainerInstance","getChildHostContext","parentHostContext","getCurrentEventPriority","DiscreteEventPriority","ContinuousEventPriority","DefaultEventPriority","getEventPriority","prepareUpdate","hostContext","customType","updatePayload","clearContainer","rootInstance","insertBefore","beforeChild","insertInContainerBefore","internalInstanceHandle","metadata_1","CUSTOM_HOSTS","underlyingClassName","GENERATED.intrinsicClassMap","classDefinition","GENERATED","dynamicRegisteredHost","ownDynamicHosts","rowDefinition","columnDefinition","babylonObject","createInfoArgs","generatedParameters","startsWith","clazz","GENERATED.babylonClassFactory","args","generatedParameter","newParameter_1","subParameter","subPropValue","includes","bind","BABYLONEXT","metadataLifecycleListenerName","fiberObject","createdReference","createCreatedInstance","CUSTOM_HOSTS.FallbackLifecycleListener","CUSTOM_HOSTS.TargetPropsHandler","enumerable","inspectableCustomProperties","label","InspectableType","String","detachDeletedInstance","hideInstance","unhideInstance","createTextInstance","scheduleTimeout","fn","cancelTimeout","clearTimeout","noTimeout","prepareForCommit","containerInfo","preparePortalMount","resetAfterCommit","appendInitialChild","canHydrateInstance","finalizeInitialChildren","commitMount","appendChildToContainer","commitUpdate","removeChildFromContainer","shouldSetTextContent","beforeActiveInstanceBlur","afterActiveInstanceBlur","getInstanceFromNode","getInstanceFromScope","scopeInstance","prepareScopeUpdate","roots","ReconcilerSecondary","Reconciler","ReconcilerPrimary","createPortal","usePrimary","reconciler","createReconciler","rendererOptions","element","parentComponent","createContainer","injectIntoDevTools","findFiberByHostInstance","bundleType","version","rendererPackageName","updateContainer","getPublicRootInstance","delete","updateScene","prevPropsRef","prevProps","updates","propertyUpdate","Scene$1","setSceneReady","setScene","reconcilerRef","containerRef","newScene","BabylonScene","sceneOptions","sceneIsReady","isReady","pointerDownObservable","evt","onScenePointerDown","pickInfo","onMeshPicked","PointerEventTypes","POINTERDOWN","pointerUpObservable","onScenePointerUp","POINTERUP","pointerMoveObservable","onScenePointerMove","POINTERMOVE","onSceneMount","sceneGraph","isDisposed"],"mappings":"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IAEDC,GAAA,WAAA,SAAAA,IA+YC,CAAD,OA9YEA,EAAAzvB,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAwYvC,OAvYAW,GAAgByB,EAASud,YAAatd,EAASsd,YAAa,cAAe3f,GAC3E0B,GAAiBU,EAASwd,cAAevd,EAASud,cAAe,gBAAiB5f,GAClFyB,GAAmBW,EAAS2b,YAAa1b,EAAS0b,YAAa,cAAe/d,GAC9EW,GAAgByB,EAASyd,aAAcxd,EAASwd,aAAc,eAAgB7f,GAC9E0B,GACEU,EAAS0d,eACTzd,EAASyd,eACT,iBACA9f,GAEFyB,GACEW,EAAS2d,uCACT1d,EAAS0d,uCACT,yCACA/f,GAEFyB,GACEW,EAAS4d,uBACT3d,EAAS2d,uBACT,yBACAhgB,GAEFyB,GACEW,EAAS6d,4BACT5d,EAAS4d,4BACT,8BACAjgB,GAEF0B,GAAiBU,EAAS8d,YAAa7d,EAAS6d,YAAa,cAAelgB,GAE5EyB,GACEW,EAAS+d,yBACT9d,EAAS8d,yBACT,2BACAngB,GAEFyB,GACEW,EAASge,0BACT/d,EAAS+d,0BACT,4BACApgB,GAEF0B,GACEU,EAASie,0BACThe,EAASge,0BACT,4BACArgB,GAEFyB,GACEW,EAASke,eACTje,EAASie,eACT,iBACAtgB,GAEFyB,GACEW,EAASme,eACTle,EAASke,eACT,iBACAvgB,GAEFyB,GACEW,EAASoe,yBACTne,EAASme,yBACT,2BACAxgB,GAEFyB,GACEW,EAASqe,gBACTpe,EAASoe,gBACT,kBACAzgB,GAEFyB,GACEW,EAASse,eACTre,EAASqe,eACT,iBACA1gB,GAEFyB,GACEW,EAAS4b,gBACT3b,EAAS2b,gBACT,kBACAhe,GAEFW,GAAgByB,EAAS8b,cAAe7b,EAAS6b,cAAe,gBAAiBle,GACjFyB,GACEW,EAASue,kBACTte,EAASse,kBACT,oBACA3gB,GAEF0B,GACEU,EAAS+b,gBACT9b,EAAS8b,gBACT,kBACAne,GAEFyB,GACEW,EAASwe,2BACTve,EAASue,2BACT,6BACA5gB,GAEF0B,GACEU,EAASye,uBACTxe,EAASwe,uBACT,yBACA7gB,GAEFyB,GACEW,EAAS0e,qBACTze,EAASye,qBACT,uBACA9gB,GAEFyB,GACEW,EAAS2e,eACT1e,EAAS0e,eACT,iBACA/gB,GAEFyB,GACEW,EAAS4e,0BACT3e,EAAS2e,0BACT,4BACAhhB,GAEFyB,GACEW,EAAS6e,mBACT5e,EAAS4e,mBACT,qBACAjhB,GAGFyB,GACEW,EAAS8e,kBACT7e,EAAS6e,kBACT,oBACAlhB,GAEFyB,GACEW,EAASic,iBACThc,EAASgc,iBACT,mBACAre,GAEFyB,GACEW,EAASkc,iBACTjc,EAASic,iBACT,mBACAte,GAEFyB,GACEW,EAAS+e,kBACT9e,EAAS8e,kBACT,oBACAnhB,GAEF0B,GACEU,EAASmc,gBACTlc,EAASkc,gBACT,kBACAve,GAEFyB,GACEW,EAASgf,+BACT/e,EAAS+e,+BACT,iCACAphB,GAEFyB,GACEW,EAASuX,sBACTtX,EAASsX,sBACT,wBACA3Z,GAEFyB,GAAmBW,EAAS2c,SAAU1c,EAAS0c,SAAU,WAAY/e,GACrEyB,GACEW,EAASif,iBACThf,EAASgf,iBACT,mBACArhB,GAEFW,GACEyB,EAASkf,yBACTjf,EAASif,yBACT,2BACAthB,GAEF0B,GACEU,EAASmf,2BACTlf,EAASkf,2BACT,6BACAvhB,GAEF0B,GACEU,EAASof,gBACTnf,EAASmf,gBACT,kBACAxhB,GAEFyB,GAAmBW,EAASqf,aAAcpf,EAASof,aAAc,eAAgBzhB,GACjF0B,GACEU,EAASsf,oBACTrf,EAASqf,oBACT,sBACA1hB,GAEF0B,GACEU,EAASuf,eACTtf,EAASsf,eACT,iBACA3hB,GAEFyB,GACEW,EAASwf,kBACTvf,EAASuf,kBACT,oBACA5hB,GAEF0B,GACEU,EAASyf,mBACTxf,EAASwf,mBACT,qBACA7hB,GAEFW,GACEyB,EAAS0f,gBACTzf,EAASyf,gBACT,kBACA9hB,GAEF0B,GACEU,EAAS2f,kBACT1f,EAAS0f,kBACT,oBACA/hB,GAEFW,GACEyB,EAAS4f,kBACT3f,EAAS2f,kBACT,oBACAhiB,GAEF0B,GACEU,EAAS6f,oBACT5f,EAAS4f,oBACT,sBACAjiB,GAEF0B,GACEU,EAAS8f,kBACT7f,EAAS6f,kBACT,oBACAliB,GAEFyB,GAAmBW,EAAS6c,UAAW5c,EAAS4c,UAAW,YAAajf,GACxEyB,GACEW,EAAS+f,kBACT9f,EAAS8f,kBACT,oBACAniB,GAEFyB,GACEW,EAASggB,iBACT/f,EAAS+f,iBACT,mBACApiB,GAEFyB,GAAmBW,EAASigB,MAAOhgB,EAASggB,MAAO,QAASriB,GAC5DyB,GACEW,EAASkgB,gBACTjgB,EAASigB,gBACT,kBACAtiB,GAEFyB,GACEW,EAASmgB,0BACTlgB,EAASkgB,0BACT,4BACAviB,GAEFyB,GACEW,EAASogB,sBACTngB,EAASmgB,sBACT,wBACAxiB,GAEFyB,GACEW,EAASqgB,0CACTpgB,EAASogB,0CACT,4CACAziB,GAEFyB,GACEW,EAASsgB,uCACTrgB,EAASqgB,uCACT,yCACA1iB,GAEFyB,GACEW,EAASugB,oBACTtgB,EAASsgB,oBACT,sBACA3iB,GAEFyB,GACEW,EAASwgB,oBACTvgB,EAASugB,oBACT,sBACA5iB,GAEFyB,GACEW,EAASuc,uBACTtc,EAASsc,uBACT,yBACA3e,GAEFyB,GACEW,EAASygB,sBACTxgB,EAASwgB,sBACT,wBACA7iB,GAEFyB,GACEW,EAAS0gB,qCACTzgB,EAASygB,qCACT,uCACA9iB,GAEFyB,GACEW,EAAS2gB,wCACT1gB,EAAS0gB,wCACT,0CACA/iB,GAEFyB,GACEW,EAAS4gB,wBACT3gB,EAAS2gB,wBACT,0BACAhjB,GAEFyB,GACEW,EAAS6gB,8CACT5gB,EAAS4gB,8CACT,gDACAjjB,GAEFyB,GAAmBW,EAAS8gB,YAAa7gB,EAAS6gB,YAAa,cAAeljB,GAC9EyB,GACEW,EAAS+gB,qBACT9gB,EAAS8gB,qBACT,uBACAnjB,GAEFyB,GACEW,EAASghB,wBACT/gB,EAAS+gB,wBACT,0BACApjB,GAEFyB,GACEW,EAASihB,qBACThhB,EAASghB,qBACT,uBACArjB,GAEFyB,GACEW,EAASkhB,qBACTjhB,EAASihB,qBACT,uBACAtjB,GAEFyB,GACEW,EAASmhB,qCACTlhB,EAASkhB,qCACT,uCACAvjB,GAEFyB,GACEW,EAASohB,qCACTnhB,EAASmhB,qCACT,uCACAxjB,GAEFyB,GACEW,EAASqhB,qBACTphB,EAASohB,qBACT,uBACAzjB,GAE6B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7C0f,CAAD,IAWAgE,GAAA,WAGE,SAAAA,IACE/8B,KAAKoc,cAAgB,CACnB,IAAI2c,GACJ,IAAIpC,GACJ,IAAIlE,GACJ,IAAI9B,GAEP,CA+BH,OA7BEoM,EAAAzzB,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGd2gB,EAAezzB,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHwgB,EAAAvgB,WAAa,CAClCC,aAAc,cACdC,gBAAiB,cACjBC,UAAW,kBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,QACN8L,KAAM,qBACN2T,UAAU,KAIOkgB,EAAAjgB,SAAoC,CACzD0V,YAAY,EACZp7B,UAAW,oBAEd2lC,CAAA,IAEDC,GAAA,WAAA,SAAAA,IA0UC,CAAD,OAzUEA,EAAA1zB,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAmUvC,OAlUAyB,GAAmBW,EAAS2b,YAAa1b,EAAS0b,YAAa,cAAe/d,GAC9EW,GAAgByB,EAASyd,aAAcxd,EAASwd,aAAc,eAAgB7f,GAC9E0B,GACEU,EAAS0d,eACTzd,EAASyd,eACT,iBACA9f,GAEFyB,GACEW,EAASwhB,sBACTvhB,EAASuhB,sBACT,wBACA5jB,GAEFyB,GACEW,EAAS6d,4BACT5d,EAAS4d,4BACT,8BACAjgB,GAEF0B,GAAiBU,EAAS8d,YAAa7d,EAAS6d,YAAa,cAAelgB,GAC5EyB,GACEW,EAASyhB,mBACTxhB,EAASwhB,mBACT,qBACA7jB,GAGFyB,GACEW,EAAS+d,yBACT9d,EAAS8d,yBACT,2BACAngB,GAEFyB,GACEW,EAASge,0BACT/d,EAAS+d,0BACT,4BACApgB,GAEF0B,GACEU,EAASie,0BACThe,EAASge,0BACT,4BACArgB,GAEFyB,GACEW,EAASke,eACTje,EAASie,eACT,iBACAtgB,GAEFyB,GACEW,EAASme,eACTle,EAASke,eACT,iBACAvgB,GAEFyB,GACEW,EAASoe,yBACTne,EAASme,yBACT,2BACAxgB,GAEFyB,GACEW,EAAS0hB,2BACTzhB,EAASyhB,2BACT,6BACA9jB,GAEFyB,GACEW,EAAS2hB,qBACT1hB,EAAS0hB,qBACT,uBACA/jB,GAEFW,GAAgByB,EAASgd,aAAc/c,EAAS+c,aAAc,eAAgBpf,GAC9Ea,GACEuB,EAAS4hB,yBACT3hB,EAAS2hB,yBACT,2BACAhkB,GAEF0B,GACEU,EAASid,eACThd,EAASgd,eACT,iBACArf,GAEFyB,GACEW,EAAS6hB,sBACT5hB,EAAS4hB,sBACT,wBACAjkB,GAEFyB,GACEW,EAAS4b,gBACT3b,EAAS2b,gBACT,kBACAhe,GAEFW,GAAgByB,EAAS8b,cAAe7b,EAAS6b,cAAe,gBAAiBle,GACjFa,GACEuB,EAAS8hB,0BACT7hB,EAAS6hB,0BACT,4BACAlkB,GAEF0B,GACEU,EAAS+b,gBACT9b,EAAS8b,gBACT,kBACAne,GAEFyB,GACEW,EAAS+hB,uBACT9hB,EAAS8hB,uBACT,yBACAnkB,GAEFyB,GACEW,EAASgiB,eACT/hB,EAAS+hB,eACT,iBACApkB,GAGFyB,GACEW,EAAS8e,kBACT7e,EAAS6e,kBACT,oBACAlhB,GAEFyB,GACEW,EAASic,iBACThc,EAASgc,iBACT,mBACAre,GAEFyB,GACEW,EAASkc,iBACTjc,EAASic,iBACT,mBACAte,GAEFyB,GACEW,EAAS+e,kBACT9e,EAAS8e,kBACT,oBACAnhB,GAEF0B,GACEU,EAASmc,gBACTlc,EAASkc,gBACT,kBACAve,GAEFyB,GACEW,EAASiiB,uBACThiB,EAASgiB,uBACT,yBACArkB,GAEFyB,GACEW,EAASkiB,wBACTjiB,EAASiiB,wBACT,0BACAtkB,GAEFyB,GACEW,EAASuX,sBACTtX,EAASsX,sBACT,wBACA3Z,GAEFa,GACEuB,EAASmiB,yBACTliB,EAASkiB,yBACT,2BACAvkB,GAEF0B,GACEU,EAASuf,eACTtf,EAASsf,eACT,iBACA3hB,GAEFyB,GACEW,EAASoiB,sBACTniB,EAASmiB,sBACT,wBACAxkB,GAEFyB,GACEW,EAASwf,kBACTvf,EAASuf,kBACT,oBACA5hB,GAEFa,GACEuB,EAASqiB,4BACTpiB,EAASoiB,4BACT,8BACAzkB,GAEF0B,GACEU,EAAS2f,kBACT1f,EAAS0f,kBACT,oBACA/hB,GAEFyB,GACEW,EAASsiB,yBACTriB,EAASqiB,yBACT,2BACA1kB,GAEFa,GACEuB,EAASuiB,4BACTtiB,EAASsiB,4BACT,8BACA3kB,GAEF0B,GACEU,EAAS8f,kBACT7f,EAAS6f,kBACT,oBACAliB,GAEFyB,GACEW,EAASwiB,yBACTviB,EAASuiB,yBACT,2BACA5kB,GAEFyB,GAAmBW,EAAS6c,UAAW5c,EAAS4c,UAAW,YAAajf,GACxEW,GAAgByB,EAASmd,cAAeld,EAASkd,cAAe,gBAAiBvf,GACjFyB,GACEW,EAASyiB,cACTxiB,EAASwiB,cACT,gBACA7kB,GAEF0B,GACEU,EAAS0iB,gBACTziB,EAASyiB,gBACT,kBACA9kB,GAEFyB,GACEW,EAAS2iB,uBACT1iB,EAAS0iB,uBACT,yBACA/kB,GAEFyB,GACEW,EAASggB,iBACT/f,EAAS+f,iBACT,mBACApiB,GAEFyB,GACEW,EAAS4iB,2BACT3iB,EAAS2iB,2BACT,6BACAhlB,GAEFyB,GACEW,EAAS6iB,0BACT5iB,EAAS4iB,0BACT,4BACAjlB,GAEFyB,GACEW,EAAS8iB,kCACT7iB,EAAS6iB,kCACT,oCACAllB,GAEFyB,GACEW,EAASuc,uBACTtc,EAASsc,uBACT,yBACA3e,GAEFyB,GACEW,EAASwb,oBACTvb,EAASub,oBACT,sBACA5d,GAEFyB,GACEW,EAAS4gB,wBACT3gB,EAAS2gB,wBACT,0BACAhjB,GAEFyB,GAAmBW,EAAS8gB,YAAa7gB,EAAS6gB,YAAa,cAAeljB,GAC9EyB,GACEW,EAAS+gB,qBACT9gB,EAAS8gB,qBACT,uBACAnjB,GAEFyB,GACEW,EAAS+iB,iCACT9iB,EAAS8iB,iCACT,mCACAnlB,GAEFyB,GACEW,EAASgjB,uBACT/iB,EAAS+iB,uBACT,yBACAplB,GAEFyB,GACEW,EAASqhB,qBACTphB,EAASohB,qBACT,uBACAzjB,GAE6B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7C2jB,CAAD,IAQA0B,GAAA,WAGE,SAAAA,IACE1+B,KAAKoc,cAAgB,CACnB,IAAI4gB,GACJ,IAAIvK,GACJ,IAAI9B,GAEP,CA+BH,OA7BE+N,EAAAp1B,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdsiB,EAAep1B,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHmiB,EAAAliB,WAAa,CAClCC,aAAc,cACdC,gBAAiB,mBACjBC,UAAW,kBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,QACN8L,KAAM,qBACN2T,UAAU,KAIO6hB,EAAA5hB,SAAoC,CACzD0V,YAAY,EACZp7B,UAAW,yBAEdsnC,CAAA,IAEDC,GAAA,WAAA,SAAAA,IA0KC,CAAD,OAvKEA,EAAAr1B,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAiKvC,OAhKAW,GACEyB,EAASmjB,iBACTljB,EAASkjB,iBACT,mBACAvlB,GAGFyB,GACEW,EAAS+d,yBACT9d,EAAS8d,yBACT,2BACAngB,GAEFyB,GACEW,EAASge,0BACT/d,EAAS+d,0BACT,4BACApgB,GAEF0B,GACEU,EAASie,0BACThe,EAASge,0BACT,4BACArgB,GAEFyB,GACEW,EAASke,eACTje,EAASie,eACT,iBACAtgB,GAEFyB,GACEW,EAASme,eACTle,EAASke,eACT,iBACAvgB,GAEFyB,GACEW,EAASoe,yBACTne,EAASme,yBACT,2BACAxgB,GAEF0B,GACEU,EAASid,eACThd,EAASgd,eACT,iBACArf,GAEFyB,GAAmBW,EAASojB,YAAanjB,EAASmjB,YAAa,cAAexlB,GAC9EyB,GACEW,EAASqjB,cACTpjB,EAASojB,cACT,gBACAzlB,GAGFyB,GACEW,EAASuX,sBACTtX,EAASsX,sBACT,wBACA3Z,GAEFyB,GACEW,EAASsjB,eACTrjB,EAASqjB,eACT,iBACA1lB,GAEFW,GAAgByB,EAASujB,aAActjB,EAASsjB,aAAc,eAAgB3lB,GAC9EyB,GACEW,EAASwjB,2BACTvjB,EAASujB,2BACT,6BACA5lB,GAEFyB,GACEW,EAASyjB,wBACTxjB,EAASwjB,wBACT,0BACA7lB,GAEFyB,GACEW,EAAS0jB,iBACTzjB,EAASyjB,iBACT,mBACA9lB,GAEFyB,GACEW,EAAS2jB,eACT1jB,EAAS0jB,eACT,iBACA/lB,GAEFyB,GACEW,EAAS4jB,0BACT3jB,EAAS2jB,0BACT,4BACAhmB,GAEFyB,GACEW,EAAS6jB,kBACT5jB,EAAS4jB,kBACT,oBACAjmB,GAEFyB,GACEW,EAAS8jB,uBACT7jB,EAAS6jB,uBACT,yBACAlmB,GAEFyB,GACEW,EAAS+jB,wBACT9jB,EAAS8jB,wBACT,0BACAnmB,GAEFyB,GACEW,EAASgkB,gCACT/jB,EAAS+jB,gCACT,kCACApmB,GAEF0B,GACEU,EAAS2f,kBACT1f,EAAS0f,kBACT,oBACA/hB,GAEFU,GAAiB0B,EAASikB,YAAahkB,EAASgkB,YAAa,eAAe,EAAOrmB,GACnFyB,GACEW,EAAS,iBACTC,EAAS,iBACT,gBACArC,GAEFyB,GACEW,EAAS,iBACTC,EAAS,iBACT,gBACArC,GAEFyB,GACEW,EAAS,iBACTC,EAAS,iBACT,gBACArC,GAEFyB,GAAmBW,EAASkkB,YAAajkB,EAASikB,YAAa,cAAetmB,GAE9EyB,GAAmBW,EAASmkB,WAAYlkB,EAASkkB,WAAY,aAAcvmB,GAC3EyB,GAAmBW,EAASokB,YAAankB,EAASmkB,YAAa,cAAexmB,GAC9EyB,GACEW,EAASqkB,sBACTpkB,EAASokB,sBACT,wBACAzm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BACT,kBACA3nB,GAEFyB,GAAmBW,EAASwlB,YAAavlB,EAASulB,YAAa,cAAe5nB,GAC9EyB,GACEW,EAASylB,cACTxlB,EAASwlB,cACT,gBACA7nB,GAEFyB,GACEW,EAAS0lB,iBACTzlB,EAASylB,iBACT,mBACA9nB,GAEFY,GAAgBwB,EAAS2lB,UAAW1lB,EAAS0lB,UAAW,YAAa/nB,GACrEyB,GAAmBW,EAAS4lB,UAAW3lB,EAAS2lB,UAAW,YAAahoB,GACxEyB,GAAmBW,EAAS6lB,WAAY5lB,EAAS4lB,WAAY,aAAcjoB,GAC3EyB,GAAmBW,EAAS8lB,UAAW7lB,EAAS6lB,UAAW,YAAaloB,GACxEU,GACE0B,EAAS+lB,2BACT9lB,EAAS8lB,2BACT,8BACA,EACAnoB,GAEFyB,GACEW,EAAS,gCACTC,EAAS,gCACT,+BACArC,GAEFyB,GACEW,EAAS,gCACTC,EAAS,gCACT,+BACArC,GAEFyB,GACEW,EAAS,gCACTC,EAAS,gCACT,+BACArC,GAEFU,GACE0B,EAASgmB,4BACT/lB,EAAS+lB,4BACT,+BACA,EACApoB,GAEFyB,GACEW,EAAS,iCACTC,EAAS,iCACT,gCACArC,GAEFyB,GACEW,EAAS,iCACTC,EAAS,iCACT,gCACArC,GAEFyB,GACEW,EAAS,iCACTC,EAAS,iCACT,gCACArC,GAEFyB,GACEW,EAASimB,eACThmB,EAASgmB,eACT,iBACAroB,GAEFyB,GAAmBW,EAASkmB,aAAcjmB,EAASimB,aAAc,eAAgBtoB,GACjFyB,GACEW,EAASmmB,kBACTlmB,EAASkmB,kBACT,oBACAvoB,GAEFyB,GACEW,EAASomB,iBACTnmB,EAASmmB,iBACT,mBACAxoB,GAEFyB,GACEW,EAASqmB,cACTpmB,EAASomB,cACT,gBACAzoB,GAEFyB,GACEW,EAASsmB,oBACTrmB,EAASqmB,oBACT,sBACA1oB,GAEFyB,GACEW,EAASumB,qBACTtmB,EAASsmB,qBACT,uBACA3oB,GAEFyB,GACEW,EAASwmB,sBACTvmB,EAASumB,sBACT,wBACA5oB,GAEFyB,GACEW,EAASymB,o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SoqB,iBACTnqB,EAASmqB,iBACT,mBACAxsB,GAEFyB,GACEW,EAASqqB,kBACTpqB,EAASoqB,kBACT,oBACAzsB,GAEFyB,GACEW,EAASsqB,cACTrqB,EAASqqB,cACT,gBACA1sB,GAEFyB,GACEW,EAASuqB,eACTtqB,EAASsqB,eACT,iBACA3sB,GAEFyB,GAAmBW,EAASwqB,WAAYvqB,EAASuqB,WAAY,aAAc5sB,GAC3EY,GACEwB,EAASyqB,mBACTxqB,EAASwqB,mBACT,qBACA7sB,GAEFU,GACE0B,EAAS0qB,yBACTzqB,EAASyqB,yBACT,4BACA,EACA9sB,GAEFyB,GACEW,EAAS,8BACTC,EAAS,8BACT,6BACArC,GAEFyB,GACEW,EAAS,8BACTC,EAAS,8BACT,6BACArC,GAEFyB,GACEW,EAAS,8BACTC,EAAS,8BACT,6BACArC,GAEFU,GACE0B,EAAS2qB,mBACT1qB,EAAS0qB,mBACT,sBACA,EACA/sB,GAEFyB,GACEW,EAAS,wBACTC,EAAS,wBACT,uBACArC,GAEFyB,GACEW,EAAS,wBACTC,EAAS,wBACT,uBACArC,GAEFyB,GACEW,EAAS,wBACTC,EAAS,wBACT,uBACArC,GAEFyB,GAAmBW,EAAS4qB,YAAa3qB,EAAS2qB,YAAa,cAAehtB,GAC9EyB,GAAmBW,EAAS6qB,aAAc5qB,EAAS4qB,aAAc,eAAgBjtB,GACjFyB,GACEW,EAAS8qB,mBACT7qB,EAAS6qB,mBACT,qBACAltB,GAEFyB,GACEW,EAAS+qB,cACT9qB,EAAS8qB,cACT,gBACAntB,GAEFyB,GACEW,EAASgrB,gBACT/qB,EAAS+qB,gBACT,kBACAptB,GAEFyB,GAAmBW,EAASirB,UAAWhrB,EAASgrB,UAAW,YAAartB,GACxEyB,GAAmBW,EAASkrB,UAAWjrB,EAASirB,UAAW,YAAattB,GACxEY,GAAgBwB,EAASmrB,SAAUlrB,EAASkrB,SAAU,WAAYvtB,GAClEyB,GAAmBW,EAASorB,SAAUnrB,EAASmrB,SAAU,WAAYxtB,GACrEyB,GAAmBW,EAASqrB,WAAYprB,EAASorB,WAAY,aAAcztB,GAC3EyB,GAAmBW,EAASsrB,aAAcrrB,EAASqrB,aAAc,eAAgB1tB,GACjFyB,GAAmBW,EAASurB,OAAQtrB,EAASsrB,OAAQ,SAAU3tB,GAC/DyB,GAAmBW,EAASwrB,SAAUvrB,EAASurB,SAAU,WAAY5tB,GACrEyB,GACEW,EAASyrB,mBACTxrB,EAASwrB,mBACT,qBACA7tB,GAEFyB,GACEW,EAAS0rB,oBACTzrB,EAASyrB,oBACT,sBACA9tB,GAEFyB,GAAmBW,EAAS2rB,WAAY1rB,EAAS0rB,WAAY,aAAc/tB,GAC3EyB,GAAmBW,EAAS5iB,MAAO6iB,EAAS7iB,MAAO,QAASwgB,GAC7B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7C6qB,CAAD,IAOAmD,GAAA,WAGE,SAAAA,IACErnC,KAAKoc,cAAgB,CACnB,IAAI8nB,GACJ,IAAIzR,GACJ,IAAI9B,GAEP,CA+BH,OA7BE0W,EAAA/9B,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdirB,EAAe/9B,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGH8qB,EAAA7qB,WAAa,CAClCC,aAAc,cACdC,gBAAiB,wBACjBC,UAAW,kBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,QACN8L,KAAM,qBACN2T,UAAU,KAIOwqB,EAAAvqB,SAAoC,CACzD0V,YAAY,EACZp7B,UAAW,8BAEdiwC,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAsVC,CAAD,OAnVEA,EAAAh+B,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GA6UvC,OA5UAY,GAAgBwB,EAAS0oB,OAAQzoB,EAASyoB,OAAQ,SAAU9qB,GAC5DyB,GAAmBW,EAAS2oB,UAAW1oB,EAAS0oB,UAAW,YAAa/qB,GACxEyB,GACEW,EAAS4oB,iBACT3oB,EAAS2oB,iBACT,mBACAhrB,GAEFyB,GAAmBW,EAAS6oB,WAAY5oB,EAAS4oB,WAAY,aAAcjrB,GAC3EyB,GACEW,EAAS8oB,kBACT7oB,EAAS6oB,kBACT,oBACAlrB,GAEFyB,GAAmBW,EAAS2nB,SAAU1nB,EAAS0nB,SAAU,WAAY/pB,GACrEyB,GAAmBW,EAAS4nB,UAAW3nB,EAAS2nB,UAAW,YAAahqB,GACxEyB,GACEW,EAASslB,eACTrlB,EAASqlB,eACT,iBACA1nB,GAEFyB,GACEW,EAASulB,gBACTtlB,EAASslB,gBACT,kBACA3nB,GAEFyB,GAAmBW,EAASwlB,YAAavlB,EAASulB,YAAa,cAAe5nB,GAC9EyB,GACEW,EAASylB,cACTxlB,EAASwlB,cACT,gBACA7nB,GAEFyB,GACEW,EAAS0lB,iBACTzlB,EAASylB,iBACT,mBACA9nB,GAEFyB,GAAmBW,EAAS6nB,aAAc5nB,EAAS4nB,aAAc,eAAgBjqB,GACjFyB,GACEW,EAAS8nB,cACT7nB,EAAS6nB,cACT,gBACAlqB,GAEFU,GACE0B,EAAS+oB,aACT9oB,EAAS8oB,aACT,gBACA,EACAnrB,GAEFyB,GACEW,EAAS,kBACTC,EAAS,kBACT,iBACArC,GAEFyB,GACEW,EAAS,kBACTC,EAAS,kBACT,iBACArC,GAEFyB,GACEW,EAAS,kBACTC,EAAS,kBACT,iBACArC,GAEFU,GACE0B,EAASgpB,cACT/oB,EAAS+oB,cACT,iBACA,EACAprB,GAEFyB,GACEW,EAAS,mBACTC,EAAS,mBACT,kBACArC,GAEFyB,GACEW,EAAS,mBACTC,EAAS,mBACT,kBACArC,GAEFyB,GACEW,EAAS,mBACTC,EAAS,mBACT,kBACArC,GAEFyB,GAAmBW,EAAS+nB,UAAW9nB,EAAS8nB,UAAW,YAAanqB,GACxEyB,GAAmBW,EAASgoB,WAAY/nB,EAAS+nB,WAAY,aAAcpqB,GAE3EyB,GAAmBW,EAASipB,aAAchpB,EAASgpB,aAAc,eAAgBrrB,GACjFyB,GAAmBW,EAASkpB,YAAajpB,EAASipB,YAAa,cAAetrB,GAC9EyB,GAAmBW,EAASmpB,YAAalpB,EAASkpB,YAAa,cAAevrB,GAC9EyB,GAAmBW,EAASopB,SAAUnpB,EAASmpB,SAAU,WAAYxrB,GACrEyB,GACEW,EAASqpB,eACTppB,EAASopB,eACT,iBACAzrB,GAGFyB,GAAmBW,EAASspB,YAAarpB,EAASqpB,YAAa,cAAe1rB,GAC9EyB,GAAmBW,EAASupB,aAActpB,EAASspB,aAAc,eAAgB3rB,GACjFyB,GAAmBW,EAASwpB,KAAMvpB,EAASupB,KAAM,OAAQ5rB,GAGzDyB,GACEW,EAASypB,4BACTxpB,EAASwpB,4BACT,8BACA7rB,GAIFyB,GACEW,EAAS0pB,6BACTzpB,EAASypB,6BACT,+BACA9rB,GAIFY,GAAgBwB,EAAS2pB,YAAa1pB,EAAS0pB,YAAa,cAAe/rB,GAC3EY,GAAgBwB,EAAS4pB,aAAc3pB,EAAS2pB,aAAc,eAAgBhsB,GAC9EyB,GAAmBW,EAAS6pB,aAAc5pB,EAAS4pB,aAAc,eAAgBjsB,GACjFyB,GAAmBW,EAAS8pB,SAAU7pB,EAAS6pB,SAAU,WAAYlsB,GACrEyB,GACEW,EAAS+pB,gBACT9pB,EAAS8pB,gBACT,kBACAnsB,GAEFyB,GACEW,EAASqoB,qBACTpoB,EAASooB,qBACT,uBACAzqB,GAEFY,GACEwB,EAASgqB,kBACT/pB,EAAS+pB,kBACT,oBACApsB,GAEFU,GACE0B,EAASiqB,wBACThqB,EAASgqB,wBACT,2BACA,EACArsB,GAEFyB,GACEW,EAAS,6BACTC,EAAS,6BACT,4BACArC,GAEFyB,GACEW,EAAS,6BACTC,EAAS,6BACT,4BACArC,GAEFyB,GACEW,EAAS,6BACTC,EAAS,6BACT,4BACArC,GAEFU,GACE0B,EAASkqB,kBACTjqB,EAASiqB,kBACT,qBACA,EACAtsB,GAEFyB,GACEW,EAAS,uBACTC,EAAS,uBACT,sBACArC,GAEFyB,GACEW,EAAS,uBACTC,EAAS,uBACT,sBACArC,GAEFyB,GACEW,EAAS,uBACTC,EAAS,uBACT,sBACArC,GAEFyB,GAAmBW,EAASmqB,QAASlqB,EAASkqB,QAAS,UAAWvsB,GAClEyB,GAAmBW,EAASpB,MAAOqB,EAASrB,MAAO,QAAShB,GAC5DyB,GAAmBW,EAAS0Q,OAAQzQ,EAASyQ,OAAQ,SAAU9S,GAC/DyB,GACEW,EAASoqB,iBACTnqB,EAASmqB,iBACT,mBACAxsB,GAEFyB,GACEW,EAASqqB,kBACTpqB,EAASoqB,kBACT,oBACAzsB,GAEFyB,GACEW,EAASsqB,cACTrqB,EAASqqB,cACT,gBACA1sB,GAEFyB,GACEW,EAASuqB,eACTtqB,EAASsqB,eACT,iBACA3sB,GAEFyB,GAAmBW,EAASwqB,WAAYvqB,EAASuqB,WAAY,aAAc5sB,GAC3EY,GACEwB,EAASyqB,mBACTxqB,EAASwqB,mBACT,qBACA7sB,GAEFU,GACE0B,EAAS0qB,yBACTzqB,EAASyqB,yBACT,4BACA,EACA9sB,GAEFyB,GACEW,EAAS,8BACTC,EAAS,8BACT,6BACArC,GAEFyB,GACEW,EAAS,8BACTC,EAAS,8BACT,6BACArC,GAEFyB,GACEW,EAAS,8BACTC,EAAS,8BACT,6BACArC,GAEFU,GACE0B,EAAS2qB,mBACT1qB,EAAS0qB,mBACT,sBACA,EACA/sB,GAEFyB,GACEW,EAAS,wBACTC,EAAS,wBACT,uBACArC,GAEFyB,GACEW,EAAS,wBACTC,EAAS,wBACT,uBACArC,GAEFyB,GACEW,EAAS,wBACTC,EAAS,wBACT,uBACArC,GAEFyB,GAAmBW,EAAS4qB,YAAa3qB,EAAS2qB,YAAa,cAAehtB,GAC9EyB,GAAmBW,EAAS6qB,aAAc5qB,EAAS4qB,aAAc,eAAgBjtB,GACjFyB,GACEW,EAAS8qB,mBACT7qB,EAAS6qB,mBACT,qBACAltB,GAEFyB,GACEW,EAAS+qB,cACT9qB,EAAS8qB,cACT,gBACAntB,GAEFyB,GACEW,EAASgrB,gBACT/qB,EAAS+qB,gBACT,kBACAptB,GAEFyB,GAAmBW,EAASirB,UAAWhrB,EAASgrB,UAAW,YAAartB,GACxEyB,GAAmBW,EAASkrB,UAAWjrB,EAASirB,UAAW,YAAattB,GACxEY,GAAgBwB,EAASmrB,SAAUlrB,EAASkrB,SAAU,WAAYvtB,GAClEyB,GAAmBW,EAASorB,SAAUnrB,EAASmrB,SAAU,WAAYxtB,GACrEyB,GAAmBW,EAASqrB,WAAYprB,EAASorB,WAAY,aAAcztB,GAC3EyB,GAAmBW,EAASsrB,aA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AASsyB,iBACTryB,EAASqyB,iBACT,mBACA10B,GAEFyB,GACEW,EAASuyB,iBACTtyB,EAASsyB,iBACT,mBACA30B,GAEFyB,GAAmBW,EAASwyB,WAAYvyB,EAASuyB,WAAY,aAAc50B,GAC3EyB,GAAmBW,EAAShe,UAAWie,EAASje,UAAW,YAAa4b,GACxEyB,GAAmBW,EAASjhB,KAAMkhB,EAASlhB,KAAM,OAAQ6e,GACzDyB,GAAmBW,EAASyyB,aAAcxyB,EAASwyB,aAAc,eAAgB70B,GACjFyB,GAAmBW,EAAS0yB,YAAazyB,EAASyyB,YAAa,cAAe90B,GAC9EyB,GACEW,EAAS2yB,oBACT1yB,EAAS0yB,oBACT,sBACA/0B,GAEFyB,GAAmBW,EAAS4yB,YAAa3yB,EAAS2yB,YAAa,cAAeh1B,GAC9EyB,GACEW,EAAS6yB,oBACT5yB,EAAS4yB,oBACT,sBACAj1B,GAGFyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzDyB,GACEW,EAAS8yB,cACT7yB,EAAS6yB,cACT,gBACAl1B,GAEF8B,GACEM,EAASG,oCACTF,EAASE,oCACT,sCACAvC,GAEF8B,GACEM,EAAS+yB,sBACT9yB,EAAS8yB,sBACT,wBACAn1B,GAEF8B,GACEM,EAASgzB,uBACT/yB,EAAS+yB,uBACT,yBACAp1B,GAEF8B,GACEM,EAASizB,kBACThzB,EAASgzB,kBACT,oBACAr1B,GAEF8B,GACEM,EAASK,oBACTJ,EAASI,oBACT,sBACAzC,GAEF8B,GACEM,EAASkzB,gCACTjzB,EAASizB,gCACT,kCACAt1B,GAEF8B,GACEM,EAASmzB,6BACTlzB,EAASkzB,6BACT,+BACAv1B,GAEF8B,GACEM,EAASozB,yBACTnzB,EAASmzB,yBACT,2BACAx1B,GAEF8B,GACEM,EAASqzB,wBACTpzB,EAASozB,wBACT,0BACAz1B,GAEF8B,GACEM,EAASszB,yBACTrzB,EAASqzB,yBACT,2BACA11B,GAEF8B,GACEM,EAASuzB,wBACTtzB,EAASszB,wBACT,0BACA31B,GAEF8B,GACEM,EAASwzB,uBACT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x2B,EAASw2B,0BACT,4BACA74B,GAEFyB,GAAmBW,EAASriB,MAAOsiB,EAAStiB,MAAO,QAASigB,GAC5DyB,GAAmBW,EAASk5B,SAAUj5B,EAASi5B,SAAU,WAAYt7B,GACrEyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzD8B,GACEM,EAASm5B,4BACTl5B,EAASk5B,4BACT,8BACAv7B,GAEFmB,GACEiB,EAASo5B,2BACTn5B,EAASm5B,2BACT,6BACAx7B,GAEFmB,GACEiB,EAASq5B,6BACTp5B,EAASo5B,6BACT,+BACAz7B,GAEFmB,GACEiB,EAASs5B,4BACTr5B,EAASq5B,4BACT,8BACA17B,GAEFmB,GACEiB,EAASu5B,8BACTt5B,EAASs5B,8BACT,gCACA37B,GAEFmB,GACEiB,EAASw5B,0BACTv5B,EAASu5B,0BACT,4BACA57B,GAEFmB,GACEiB,EAASy5B,4BACTx5B,EAASw5B,4BACT,8BACA77B,GAEFmB,GACEiB,EAAS05B,yBACTz5B,EAASy5B,yBACT,2BACA97B,GAEFmB,GACEiB,EAAS25B,2BACT15B,EAAS05B,2BACT,6BACA/7B,GAEFmB,GACEiB,EAAS45B,kBACT35B,EAAS25B,kBACT,oBACAh8B,GAEFmB,GACEiB,EAAS65B,oBACT55B,EAAS45B,oBACT,sBACAj8B,GAE6B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7Cq7B,CAAD,IAOAa,GAAA,WAGE,SAAAA,IACEv1C,KAAKoc,cAAgB,CACnB,IAAIs4B,GACJ,IAAIjD,GACJ,IAAIX,GACJ,IAAIlE,GAEP,CA+BH,OA7BE2I,EAAAjsC,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdm5B,EAAejsC,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHg5B,EAAA/4B,WAAa,CAClCC,aAAc,cACdC,gBAAiB,eACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,QACN8L,KAAM,SACN2T,UAAU,KAIO04B,EAAAz4B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CTn/B,EAASm/B,kBACT,oBACAxhC,GAEFyB,GACEW,EAASq/B,gBACTp/B,EAASo/B,gBACT,kBACAzhC,GAGFyB,GAAmBW,EAASs/B,OAAQr/B,EAASq/B,OAAQ,SAAU1hC,GAC/DyB,GAAmBW,EAASu/B,SAAUt/B,EAASs/B,SAAU,WAAY3hC,GACrEyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzD8B,GACEM,EAASw/B,yBACTv/B,EAASu/B,yBACT,2BACA5hC,GAEF8B,GACEM,EAASi3B,iBACTh3B,EAASg3B,iBACT,mBACAr5B,GAEF8B,GACEM,EAASk3B,kBACTj3B,EAASi3B,kBACT,oBACAt5B,GAEFyB,GACEW,EAASy/B,iBACTx/B,EAASw/B,iBACT,mBACA7hC,GAEF8B,GACEM,EAASm3B,mCACTl3B,EAASk3B,mCACT,qCACAv5B,GAEF8B,GACEM,EAASs8B,wBACTr8B,EAASq8B,wBACT,0BACA1+B,GAEF8B,GACEM,EAAS0/B,qBACTz/B,EAASy/B,qBACT,uBACA9hC,GAEF8B,GACEM,EAAS2/B,oBACT1/B,EAAS0/B,oBACT,sBACA/hC,GAEF8B,GACEM,EAAS4/B,0BACT3/B,EAAS2/B,0BACT,4BACAhiC,GAEF8B,GACEM,EAAS6/B,sBACT5/B,EAAS4/B,sBACT,wBACAjiC,GAEFyB,GACEW,EAAS8/B,iBACT7/B,EAAS6/B,iBACT,mBACAliC,GAEFyB,GACEW,EAAS+/B,gBACT9/B,EAAS8/B,gBACT,kBACAniC,GAEFyB,GACEW,EAASggC,cACT//B,EAAS+/B,cACT,gBACApiC,GAEFyB,GAAmBW,EAASw8B,KAAMv8B,EAASu8B,KAAM,OAAQ5+B,GACzDyB,GACEW,EAASigC,mBACThgC,EAASggC,mBACT,qBACAriC,GAEFyB,GAAmBW,EAASs2B,UAAWr2B,EAASq2B,UAAW,YAAa14B,GACxEyB,GAAmBW,EAAS5iB,MAAO6iB,EAAS7iB,MAAO,QAASwgB,GAC7B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CihC,CAAD,IAOAqB,GAAA,WAGE,SAAAA,IACE37C,KAAKoc,cAAgB,CAAC,IAAIk+B,GAA8B,IAAI1N,GAC7D,CA+BH,OA7BE+O,EAAAryC,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdu/B,EAAeryC,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHo/B,EAAAn/B,WAAa,CAClCC,aAAc,cACdC,gBAAiB,YACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIO8+B,EAAA7+B,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,kBAEdukD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAyBC,CAAD,OAxBEA,EAAAtyC,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAkBvC,OAjBAyB,GACEW,EAASogC,kBACTngC,EAASmgC,kBACT,oBACAxiC,GAEFyB,GAAmBW,EAAS1iB,OAAQ2iB,EAAS3iB,OAAQ,SAAUsgB,GAC/DyB,GAAmBW,EAASpG,UAAWqG,EAASrG,UAAW,YAAagE,GACxEyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzD8B,GACEM,EAASq8B,uBACTp8B,EAASo8B,uBACT,yBACAz+B,GAEFyB,GAAmBW,EAAS4E,aAAc3E,EAAS2E,aAAc,eAAgBhH,GACjFyB,GAAmBW,EAAS6E,aAAc5E,EAAS4E,aAAc,eAAgBjH,GAClD,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CuiC,CAAD,IAOAE,GAAA,WAGE,SAAAA,IACE97C,KAAKoc,cAAgB,CACnB,IAAIw/B,GACJ,IAAItB,GACJ,IAAI1N,GAEP,CA+BH,OA7BEkP,EAAAxyC,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGd0/B,EAAexyC,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHu/B,EAAAt/B,WAAa,CAClCC,aAAc,cACdC,gBAAiB,gBACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIOi/B,EAAAh/B,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,sBAEd0kD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAOC,CAAD,OANEA,EAAAzyC,UAAAkS,mBAAA,SACEC,EACAC,GAEA,OAAO,MAEVqgC,CAAD,IAOAC,GAAA,WAGE,SAAAA,IACEh8C,KAAKoc,cAAgB,CACnB,IAAI2/B,GACJ,IAAIzB,GACJ,IAAI1N,GAEP,CAoBH,OAlBEoP,EAAA1yC,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGd4/B,EAAe1yC,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHy/B,EAAAx/B,WAAa,CAClCC,aAAc,cACdC,gBAAiB,gBACjBC,UAAW,iBACXC,WAAY,IAESo/B,EAAAl/B,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,sBAEd4kD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IA8BC,CAAD,OA7BEA,EAAA3yC,UAAAkS,mBAAA,SAAmBC,EAA0BC,GAC3C,IAAMrC,EAAiC,GA0BvC,OAzBAqB,GACEe,EAASygC,iBACTxgC,EAASwgC,iBACT,mBACA7iC,GAEF4B,GAAsBQ,EAAS0gC,KAAMzgC,EAASygC,KAAM,OAAQ9iC,GAC5DyB,GACEW,EAASkyB,oBACTjyB,EAASiyB,oBACT,sBACAt0B,GAEFyB,GAAmBW,EAASuoB,UAAWtoB,EAASsoB,UAAW,YAAa3qB,GACxEyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzDyB,GACEW,EAAS+0B,kBACT90B,EAAS80B,kBACT,oBACAn3B,GAEFyB,GAAmBW,EAAS2gC,GAAI1gC,EAAS0gC,GAAI,KAAM/iC,GACnDyB,GAAmBW,EAAS4gC,GAAI3gC,EAAS2gC,GAAI,KAAMhjC,GACnDyB,GAAmBW,EAAS6gC,GAAI5gC,EAAS4gC,GAAI,KAAMjjC,GACnDyB,GAAmBW,EAAS8gC,GAAI7gC,EAAS6gC,GAAI,KAAMljC,GACpB,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7C4iC,CAAD,IAOAO,GAAA,WAGE,SAAAA,IACEx8C,KAAKoc,cAAgB,CAAC,IAAI6/B,GAAyB,IAAIrP,GACxD,CA0BH,OAxBE4P,EAAAlzC,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdogC,EAAelzC,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHigC,EAAAhgC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,OACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIO2/B,EAAA1/B,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,aAEdolD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAyBC,CAAD,OAxBEA,EAAAnzC,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAkBvC,OAjBA4B,GAAsBQ,EAAS0gC,KAAMzgC,EAASygC,KAAM,OAAQ9iC,GAC5DyB,GACEW,EAASkyB,oBACTjyB,EAASiyB,oBACT,sBACAt0B,GAEFyB,GAAmBW,EAASuoB,UAAWtoB,EAASsoB,UAAW,YAAa3qB,GACxEyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzDmB,GAAgBiB,EAASihC,cAAehhC,EAASghC,cAAe,gBAAiBrjC,GACjFyB,GACEW,EAAS+0B,kBACT90B,EAAS80B,kBACT,oBACAn3B,GAEFgC,GAAgBI,EAASxnB,IAAKynB,EAASznB,IAAK,MAAOolB,GACpB,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CojC,CAAD,IAOAE,GAAA,WAGE,SAAAA,IACE38C,KAAKoc,cAAgB,CAAC,IAAIqgC,GAA8B,IAAI7P,GAC7D,CA0BH,OAxBE+P,EAAArzC,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdugC,EAAerzC,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHogC,EAAAngC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,YACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIO8/B,EAAA7/B,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,kBAEdulD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAyBC,CAAD,OAxBEA,EAAAtzC,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAkBvC,OAjBAyB,GAAmBW,EAASw1B,WAAYv1B,EAASu1B,WAAY,aAAc53B,GAC3EyB,GACEW,EAASs+B,eACTr+B,EAASq+B,eACT,iBACA1gC,GAEFyB,GAAmBW,EAASriB,MAAOsiB,EAAStiB,MAAO,QAASigB,GAC5DyB,GAAmBW,EAASu+B,UAAWt+B,EAASs+B,UAAW,YAAa3gC,GACxEyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzD8B,GACEM,EAASw+B,6BACTv+B,EAASu+B,6BACT,+BACA5gC,GAEFyB,GAAmBW,EAASs2B,UAAWr2B,EAASq2B,UAAW,YAAa14B,GACzC,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CujC,CAAD,IAOAC,GAAA,WAGE,SAAAA,IACE78C,KAAKoc,cAAgB,CAAC,IAAIwgC,GAAgC,IAAIhQ,GAC/D,CA0BH,OAxBEiQ,EAAAvzC,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdygC,EAAevzC,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHsgC,EAAArgC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,cACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIOggC,EAAA//B,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,oBAEdylD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IA6BC,CAAD,OA5BEA,EAAAxzC,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAsBvC,OArBAyB,GAAmBW,EAASshC,UAAWrhC,EAASqhC,UAAW,YAAa1jC,GACxEyB,GAAmBW,EAASuhC,aAActhC,EAASshC,aAAc,eAAgB3jC,GACjFyB,GACEW,EAASwhC,eACTvhC,EAASuhC,eACT,iBACA5jC,GAEFyB,GAAmBW,EAASi6B,WAAYh6B,EAASg6B,WAAY,aAAcr8B,GAC3EyB,GAAmBW,EAASyhC,QAASxhC,EAASwhC,QAAS,UAAW7jC,GAClEyB,GAAmBW,EAAS0hC,QAASzhC,EAASyhC,QAAS,UAAW9jC,GAClEyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzD8B,GACEM,EAAS2+B,yBACT1+B,EAAS0+B,yBACT,2BACA/gC,GAEFyB,GAAmBW,EAAS2hC,KAAM1hC,EAAS0hC,KAAM,OAAQ/jC,GACzDyB,GAAmBW,EAAS4hC,WAAY3hC,EAAS2hC,WAAY,aAAchkC,GAC3EyB,GAAmBW,EAAS7lB,MAAO8lB,EAAS9lB,MAAO,QAASyjB,GAC7B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CyjC,CAAD,IAOAQ,GAAA,WAGE,SAAAA,IACEt9C,KAAKoc,cAAgB,CAAC,IAAI0gC,GAA+B,IAAIlQ,GAC9D,CA0BH,OAxBE0Q,EAAAh0C,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdkhC,EAAeh0C,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGH+gC,EAAA9gC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,aACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIOygC,EAAAxgC,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,mBAEdkmD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAkBC,CAAD,OAjBEA,EAAAj0C,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAWvC,OAVAyB,GAAmBW,EAASw1B,WAAYv1B,EAASu1B,WAAY,aAAc53B,GAE3EyB,GAAmBW,EAAS+hC,YAAa9hC,EAAS8hC,YAAa,cAAenkC,GAC9EyB,GACEW,EAASgiC,sBACT/hC,EAAS+hC,sBACT,wBACApkC,GAEFyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GAC1B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CkkC,CAAD,IAOAG,GAAA,WAGE,SAAAA,IACE19C,KAAKoc,cAAgB,CACnB,IAAImhC,GACJ,IAAIT,GACJ,IAAIlQ,GAEP,CA0BH,OAxBE8Q,EAAAp0C,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdshC,EAAep0C,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHmhC,EAAAlhC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,YACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIO6gC,EAAA5gC,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,kBAEdsmD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IA+BC,CAAD,OA9BEA,EAAAr0C,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAwBvC,OAtBAyB,GACEW,EAASq4B,eACTp4B,EAASo4B,eACT,iBACAz6B,GAEFyB,GACEW,EAASgiC,sBACT/hC,EAAS+hC,sBACT,wBACApkC,GAEFyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzDyB,GACEW,EAASmiC,4BACTliC,EAASkiC,4BACT,8BACAvkC,GAEFyB,GAAmBW,EAAS44B,YAAa34B,EAAS24B,YAAa,cAAeh7B,GAE9EyB,GAAmBW,EAAS64B,YAAa54B,EAAS44B,YAAa,cAAej7B,GAC/C,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CskC,CAAD,IAOAE,GAAA,WAGE,SAAAA,IACE79C,KAAKoc,cAAgB,CACnB,IAAIuhC,GACJ,IAAIb,GACJ,IAAIlQ,GAEP,CA0BH,OAxBEiR,EAAAv0C,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdyhC,EAAev0C,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHshC,EAAArhC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,iBACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIOghC,EAAA/gC,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,uBAEdymD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAyBC,CAAD,OAxBEA,EAAAx0C,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAkBvC,OAjBAyB,GAAmBW,EAASw1B,WAAYv1B,EAASu1B,WAAY,aAAc53B,GAE3EyB,GAAmBW,EAAS+hC,YAAa9hC,EAAS8hC,YAAa,cAAenkC,GAC9EyB,GACEW,EAASsiC,gBACTriC,EAASqiC,gBACT,kBACA1kC,GAEFyB,GACEW,EAASuiC,cACTtiC,EAASsiC,cACT,gBACA3kC,GAEFyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzDyB,GAAmBW,EAASwiC,WAAYviC,EAASuiC,WAAY,aAAc5kC,GAC5C,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CykC,CAAD,IAOAI,GAAA,WAGE,SAAAA,IACEl+C,KAAKoc,cAAgB,CACnB,IAAI0hC,GACJ,IAAIhB,GACJ,IAAIlQ,GAEP,CA0BH,OAxBEsR,EAAA50C,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGd8hC,EAAe50C,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGH2hC,EAAA1hC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,SACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIOqhC,EAAAphC,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,eAEd8mD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAaC,CAAD,OAZEA,EAAA70C,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAMvC,OAJAyB,GAAmBW,EAASuhC,aAActhC,EAASshC,aAAc,eAAgB3jC,GACjFyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GAG1B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7C8kC,CAAD,IAOAC,GAAA,WAGE,SAAAA,IACEp+C,KAAKoc,cAAgB,CACnB,IAAI+hC,GACJ,IAAIrB,GACJ,IAAIlQ,GAEP,CA0BH,OAxBEwR,EAAA90C,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdgiC,EAAe90C,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGH6hC,EAAA5hC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,mBACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIOuhC,EAAAthC,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,yBAEdgnD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IAsDC,CAAD,OArDEA,EAAA/0C,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GA+CvC,OA9CAyB,GAAmBW,EAASw1B,WAAYv1B,EAASu1B,WAAY,aAAc53B,GAC3EyB,GAAmBW,EAASm9B,WAAYl9B,EAASk9B,WAAY,aAAcv/B,GAC3EyB,GAAmBW,EAASq9B,UAAWp9B,EAASo9B,UAAW,YAAaz/B,GACxEyB,GACEW,EAAS6iC,kBACT5iC,EAAS4iC,kBACT,oBACAjlC,GAEFyB,GACEW,EAAS8iC,kBACT7iC,EAAS6iC,kBACT,oBACAllC,GAEFyB,GACEW,EAAS+iC,eACT9iC,EAAS8iC,eACT,iBACAnlC,GAEFyB,GACEW,EAASgjC,mBACT/iC,EAAS+iC,mBACT,qBACAplC,GAEFyB,GACEW,EAASijC,kBACThjC,EAASgjC,kBACT,oBACArlC,GAEFyB,GACEW,EAASkjC,eACTjjC,EAASijC,eACT,iBACAtlC,GAEFyB,GACEW,EAASmjC,kBACTljC,EAASkjC,kBACT,oBACAvlC,GAEFyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GAC1B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CglC,CAAD,IAOAQ,GAAA,WAGE,SAAAA,IACE7+C,KAAKoc,cAAgB,CAAC,IAAIiiC,GAAgC,IAAIzR,GAC/D,CA0BH,OAxBEiS,EAAAv1C,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdyiC,EAAev1C,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHsiC,EAAAriC,WAAa,CAClCC,aAAc,cACdC,gBAAiB,cACjBC,UAAW,iBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,KAIOgiC,EAAA/hC,SAAoC,CACzD+zB,gBAAgB,EAChBz5C,UAAW,oBAEdynD,CAAA,IAEDC,GAAA,WAAA,SAAAA,IA0EC,CAAD,OAzEEA,EAAAx1C,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAmEvC,OAlEAyB,GAAmBW,EAAShe,UAAWie,EAASje,UAAW,YAAa4b,GACxEyB,GAAmBW,EAASre,KAAMse,EAASte,KAAM,OAAQic,GACzD8B,GACEM,EAASozB,yBACTnzB,EAASmzB,yBACT,2BACAx1B,GAEF8B,GACEM,EAASqzB,wBACTpzB,EAASozB,wBACT,0BACAz1B,GAEF8B,GACEM,EAASszB,yBACTrzB,EAASqzB,yBACT,2BACA11B,GAEF8B,GACEM,EAASuzB,wBACTtzB,EAASszB,wBACT,0BACA31B,GAEF8B,GACEM,EAASwzB,uBACTvzB,EAASuzB,uBACT,yBACA51B,GAEF8B,GACEM,EAASyzB,sBACTxzB,EAASwzB,sBACT,wBACA71B,GAGFmB,GACEiB,EAAS02B,qBACTz2B,EAASy2B,qBACT,uBACA94B,GAEFmB,GACEiB,EAAS22B,sBACT12B,EAAS02B,sBACT,wBACA/4B,GAEFmB,GACEiB,EAAS42B,oBACT32B,EAAS22B,oBACT,sBACAh5B,GAEFmB,GACEiB,EAAS62B,mBACT52B,EAAS42B,mBACT,qBACAj5B,GAEFU,GAAiB0B,EAASnhB,SAAUohB,EAASphB,SAAU,YAAY,EAAM+e,GACzEU,GAAiB0B,EAAShL,QAASiL,EAASjL,QAAS,WAAW,EAAM4I,GACtEgC,GAAgBI,EAASQ,YAAaP,EAASO,YAAa,cAAe5C,GAC5C,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7CylC,CAAD,IAOAC,GAAA,WAGE,SAAAA,IACE/+C,KAAKoc,cAAgB,CAAC,IAAI0iC,GAC3B,CA0BH,OAxBEC,EAAAz1C,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGd2iC,EAAez1C,UAAAgT,gBAAf,SAAgBC,GACdvc,K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EAAS,yBACT,wBACArC,GAEFU,GACE0B,EAAS+qC,gBACT9qC,EAAS8qC,gBACT,mBACA,EACAntC,GAEFY,GAAgBwB,EAAS+tC,WAAY9tC,EAAS8tC,WAAY,aAAcnwC,GACxEmB,GACEiB,EAASguC,sBACT/tC,EAAS+tC,sBACT,wBACApwC,GAEFmB,GACEiB,EAASiuC,qBACThuC,EAASguC,qBACT,uBACArwC,GAEFyB,GACEW,EAASkuC,oBACTjuC,EAASiuC,oBACT,sBACAtwC,GAEFmB,GACEiB,EAASmuC,oBACTluC,EAASkuC,oBACT,sBACAvwC,GAEFyB,GACEW,EAASouC,qBACTnuC,EAASmuC,qBACT,uBACAxwC,GAEFmB,GAAgBiB,EAASquC,cAAepuC,EAASouC,cAAe,gBAAiBzwC,GACjF8B,GACEM,EAASnnB,wBACTonB,EAASpnB,wBACT,0BACA+kB,GAEFmB,GAAgBiB,EAASsuC,cAAeruC,EAASquC,cAAe,gBAAiB1wC,GACjF8B,GACEM,EAASuuC,wBACTtuC,EAASsuC,wBACT,0BACA3wC,GAEF8B,GACEM,EAASwuC,uBACTvuC,EAASuuC,uBACT,yBACA5wC,GAEFmB,GACEiB,EAASyuC,eACTxuC,EAASwuC,eACT,iBACA7wC,GAEF8B,GACEM,EAASznB,yBACT0nB,EAAS1nB,yBACT,2BACAqlB,GAEFmB,GAAgBiB,EAAS0uC,QAASzuC,EAASyuC,QAAS,UAAW9wC,GAC/D8B,GACEM,EAAS2uC,kBACT1uC,EAAS0uC,kBACT,oBACA/wC,GAEF8B,GACEM,EAAS4uC,mBACT3uC,EAAS2uC,mBACT,qBACAhxC,GAEFyB,GAAmBW,EAAS4sC,YAAa3sC,EAAS2sC,YAAa,cAAehvC,GAE9EmB,GACEiB,EAAS6uC,oBACT5uC,EAAS4uC,oBACT,sBACAjxC,GAEFyB,GACEW,EAAS8uC,gBACT7uC,EAAS6uC,gBACT,kBACAlxC,GAEFyB,GAAmBW,EAASqK,aAAcpK,EAASoK,aAAc,eAAgBzM,GACjFyB,GACEW,EAAS+uC,cACT9uC,EAAS8uC,cACT,gBACAnxC,GAEFyB,GAAm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CT,mBACA/2C,GAEFyB,GAAmBW,EAAS40C,YAAa30C,EAAS20C,YAAa,cAAeh3C,GAC9EyB,GACEW,EAAS60C,cACT50C,EAAS40C,cACT,gBACAj3C,GAEFyB,GAAmBW,EAAS80C,SAAU70C,EAAS60C,SAAU,WAAYl3C,GACrEyB,GACEW,EAAS+0C,eACT90C,EAAS80C,eACT,iBACAn3C,GAEFyB,GAAmBW,EAASg1C,YAAa/0C,EAAS+0C,YAAa,cAAep3C,GAC9EyB,GACEW,EAASi1C,0BACTh1C,EAASg1C,0BACT,4BACAr3C,GAEFyB,GACEW,EAASk1C,eACTj1C,EAASi1C,eACT,iBACAt3C,GAEFyB,GACEW,EAASm1C,oBACTl1C,EAASk1C,oBACT,sBACAv3C,GAEFyB,GACEW,EAASo1C,8BACTn1C,EAASm1C,8BACT,gCACAx3C,GAEFyB,GACEW,EAASq1C,uBACTp1C,EAASo1C,uBACT,yBACAz3C,GAEFyB,GACEW,EAASs1C,cACTr1C,EAASq1C,cACT,gBACA13C,GAEFgC,GAAgBI,EAASu1C,YAAat1C,EAASs1C,YAAa,cAAe33C,GAC3EgC,GACEI,EAASw1C,uBACTv1C,EAASu1C,uBACT,yBACA53C,GAEFgC,GACEI,EAASy1C,oBACTx1C,EAASw1C,oBACT,sBACA73C,GAEFgC,GAAgBI,EAAS01C,YAAaz1C,EAASy1C,YAAa,cAAe93C,GAC3EgC,GACEI,EAAS21C,kBACT11C,EAAS01C,kBACT,oBACA/3C,GAEFgC,GACEI,EAAS41C,iBACT31C,EAAS21C,iBACT,mBACAh4C,GAEFgC,GACEI,EAAS61C,eACT51C,EAAS41C,eACT,iBACAj4C,GAEFgC,GACEI,EAAS81C,kBACT71C,EAAS61C,kBACT,oBACAl4C,GAEFgC,GACEI,EAAS+1C,uBACT91C,EAAS81C,uBACT,yBACAn4C,GAE6B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7C42C,CAAD,IAUAwB,GAAA,WAKE,SAAAA,IACEzxD,KAAKoc,cAAgB,CACnB,IAAI6zC,GACJ,IAAIpB,GAEP,CA6CH,OA3CE4C,EAAAnoD,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,EAAS03C,oBACT,sBACA/5C,GAIFyB,GAAmBW,EAAS43C,SAAU33C,EAAS23C,SAAU,WAAYh6C,GACrEyB,GAAmBW,EAASi0C,YAAah0C,EAASg0C,YAAa,cAAer2C,GAE9EyB,GACEW,EAAS63C,gBACT53C,EAAS43C,gBACT,kBACAj6C,GAEFyB,GACEW,EAAS83C,gBACT73C,EAAS63C,gBACT,kBACAl6C,GAEFyB,GAAmBW,EAAS+3C,WAAY93C,EAAS83C,WAAY,aAAcn6C,GAE3EyB,GACEW,EAASg4C,gBACT/3C,EAAS+3C,gBACT,kBACAp6C,GAEFyB,GACEW,EAASi4C,oBACTh4C,EAASg4C,oBACT,sBACAr6C,GAGFyB,GACEW,EAASk4C,eACTj4C,EAASi4C,eACT,iBACAt6C,GAGFyB,GACEW,EAASm4C,mBACTl4C,EAASk4C,mBACT,qBACAv6C,GAIFyB,GACEW,EAASo4C,4BACTn4C,EAASm4C,4BACT,8BACAx6C,GAEFyB,GACEW,EAASq4C,iBACTp4C,EAASo4C,iBACT,mBACAz6C,GAGFyB,GACEW,EAASs4C,wBACTr4C,EAASq4C,wBACT,0BACA16C,GAEFyB,GACEW,EAASu4C,mBACTt4C,EAASs4C,mBACT,qBACA36C,GAGFyB,GACEW,EAASw4C,kBACTv4C,EAASu4C,kBACT,oBACA56C,GAMFyB,GACEW,EAASy4C,kBACTx4C,EAASw4C,kBACT,oBACA76C,GAGFyB,GACEW,EAAS04C,kBACTz4C,EAASy4C,kBACT,oBACA96C,GAEFyB,GACEW,EAAS24C,eACT14C,EAAS04C,eACT,iBACA/6C,GAEFyB,GACEW,EAAS44C,sBACT34C,EAAS24C,sBACT,wBACAh7C,GAGFyB,GAAmBW,EAASgvC,QAAS/uC,EAAS+uC,QAAS,UAAWpxC,GAElEyB,GACEW,EAAS64C,8BACT54C,EAAS44C,8BACT,gCACAj7C,GAKFyB,GAAmBW,EAAS84C,WAAY74C,EAAS64C,WAAY,aAAcl7C,GAC3EyB,GACEW,EAAS+4C,yBACT94C,EAAS84C,yBACT,2BACAn7C,GAEFyB,GACEW,EAASg5C,2BACT/4C,EAAS+4C,2BACT,6BACAp7C,GAKFyB,GACEW,EAASi5C,qBACTh5C,EAASg5C,qBACT,uBACAr7C,GAIFyB,GACEW,EAASk5C,0BACTj5C,EAASi5C,0BACT,4BACAt7C,GAE6B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7Cy5C,CAAD,IAQA8B,GAAA,WAKE,SAAAA,IACE50D,KAAKoc,cAAgB,CACnB,IAAI02C,GACJ,IAAIjE,GAEP,CA6CH,OA3CE+F,EAAAtrD,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGdw4C,EAAetrD,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHq4C,EAAAp4C,WAAa,CAClCC,aAAc,cACdC,gBAAiB,4BACjBC,UAAW,kBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,QACN8L,KAAM,qBACN2T,UAAU,GAEZ,CACEzf,KAAM,QACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,sBACN8L,KAAM,2BACN2T,UAAU,GAEZ,CACEzf,KAAM,UACN8L,KAAM,wBACN2T,UAAU,KAIO+3C,EAAA93C,SAAoC,CACzD1lB,UAAW,kCAEdw9D,CAAA,IAEDC,GAAA,WAAA,SAAAA,IA+JC,CAAD,OA5JEA,EAAAvrD,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAsJvC,OArJAyB,GACEW,EAASq5C,4BACTp5C,EAASo5C,4BACT,8BACAz7C,GAEFyB,GACEW,EAASs5C,sBACTr5C,EAASq5C,sBACT,wBACA17C,GAEFyB,GACEW,EAASu5C,8BACTt5C,EAASs5C,8BACT,gCACA37C,GAEFyB,GACEW,EAASw5C,gCACTv5C,EAASu5C,gCACT,kCACA57C,GAEFyB,GACEW,EAASy5C,uBACTx5C,EAASw5C,uBACT,yBACA77C,GAEFyB,GACEW,EAAS05C,+BACTz5C,EAASy5C,+BACT,iCACA97C,GAEFyB,GACEW,EAAS25C,yCACT15C,EAAS05C,yCACT,2CACA/7C,GAEFyB,GACEW,EAAS45C,uBACT35C,EAAS25C,uBACT,yBACAh8C,GAEFyB,GACEW,EAAS65C,eACT55C,EAAS45C,eACT,iBACAj8C,GAEFyB,GACEW,EAAS85C,cACT75C,EAAS65C,cACT,gBACAl8C,GAEFyB,GAAmBW,EAAS+5C,MAAO95C,EAAS85C,MAAO,QAASn8C,GAC5DyB,GACEW,EAASg6C,oCACT/5C,EAAS+5C,oCACT,sCACAp8C,GAEFyB,GACEW,EAASi6C,wBACTh6C,EAASg6C,wBACT,0BACAr8C,GAGFyB,GACEW,EAASk6C,0BACTj6C,EAASi6C,0BACT,4BACAt8C,GAEFyB,GACEW,EAASm6C,2BACTl6C,EAASk6C,2BACT,6BACAv8C,GAEFyB,GACEW,EAASo6C,gCACTn6C,EAASm6C,gCACT,kCACAx8C,GAEFyB,GAAmBW,EAASngB,UAAWogB,EAASpgB,UAAW,YAAa+d,GACxEyB,GAAmBW,EAASq6C,YAAap6C,EAASo6C,YAAa,cAAez8C,GAC9EyB,GAAmBW,EAASs6C,SAAUr6C,EAASq6C,SAAU,WAAY18C,GACrEyB,GACEW,EAASu6C,kCACTt6C,EAASs6C,kCACT,oCACA38C,GAEFyB,GACEW,EAASw6C,sBACTv6C,EAASu6C,sBACT,wBACA58C,GAEFyB,GACEW,EAASy6C,gBACTx6C,EAASw6C,gBACT,kBACA78C,GAEFyB,GAAmBW,EAASgvC,QAAS/uC,EAAS+uC,QAAS,UAAWpxC,GAClEyB,GACEW,EAAS06C,qBACTz6C,EAASy6C,qBACT,uBACA98C,GAEFyB,GACEW,EAAS26C,oBACT16C,EAAS06C,oBACT,sBACA/8C,GAEFyB,GACEW,EAAS46C,uBACT36C,EAAS26C,uBACT,yBACAh9C,GAEFyB,GACEW,EAAS66C,cACT56C,EAAS46C,cACT,gBACAj9C,GAEFyB,GACEW,EAAS86C,gBACT76C,EAAS66C,gBACT,kBACAl9C,GAEFyB,GAAmBW,EAAS2hC,KAAM1hC,EAAS0hC,KAAM,OAAQ/jC,GACzDyB,GAAmBW,EAAS+6C,SAAU96C,EAAS86C,SAAU,WAAYn9C,GACrEyB,GAAmBW,EA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C,iBACTt8C,EAASs8C,iBACT,mBACA3+C,GAEFyB,GACEW,EAASw8C,mBACTv8C,EAASu8C,mBACT,qBACA5+C,GAEFyB,GAAmBW,EAAS43C,SAAU33C,EAAS23C,SAAU,WAAYh6C,GACrEyB,GACEW,EAASy8C,gBACTx8C,EAASw8C,gBACT,kBACA7+C,GAGFyB,GACEW,EAAS08C,mBACTz8C,EAASy8C,mBACT,qBACA9+C,GAEFyB,GACEW,EAAS28C,gBACT18C,EAAS08C,gBACT,kBACA/+C,GAEFyB,GACEW,EAAS48C,kBACT38C,EAAS28C,kBACT,oBACAh/C,GAEFyB,GACEW,EAAS68C,kBACT58C,EAAS48C,kBACT,oBACAj/C,GAEFyB,GACEW,EAAS88C,gBACT78C,EAAS68C,gBACT,kBACAl/C,GAEFyB,GACEW,EAAS+8C,gBACT98C,EAAS88C,gBACT,kBACAn/C,GAEFyB,GACEW,EAASg9C,gBACT/8C,EAAS+8C,gBACT,kBACAp/C,GAEFyB,GACEW,EAASi9C,gBACTh9C,EAASg9C,gBACT,kBACAr/C,GAEFY,GAAgBwB,EAASk9C,cAAej9C,EAASi9C,cAAe,gBAAiBt/C,GACjFyB,GACEW,EAASm9C,gBACTl9C,EAASk9C,gBACT,kBACAv/C,GAEFyB,GACEW,EAASo9C,gBACTn9C,EAASm9C,gBACT,kBACAx/C,GAEFyB,GACEW,EAASq9C,eACTp9C,EAASo9C,eACT,iBACAz/C,GAE6B,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7Cs+C,CAAD,IAOAoB,GAAA,WAGE,SAAAA,IACE/4D,KAAKoc,cAAgB,CACnB,IAAIu7C,GACJ,IAAIhB,GAEP,CA4DH,OA1DEoC,EAAAzvD,UAAA+S,iBAAA,WACE,OAAOrc,KAAKoc,eAGd28C,EAAezvD,UAAAgT,gBAAf,SAAgBC,GACdvc,KAAKoc,cAAchX,KAAKmX,IAGHw8C,EAAAv8C,WAAa,CAClCC,aAAc,cACdC,gBAAiB,6BACjBC,UAAW,kBACXC,WAAY,CACV,CACExf,KAAM,OACN8L,KAAM,SACN2T,UAAU,GAEZ,CACEzf,KAAM,UACN8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W,mBAEdmpE,CAAA,IAEDC,GAAA,WAAA,SAAAA,IA8HC,CAAD,OA7HEA,EAAAl3D,UAAAkS,mBAAA,SACEC,EACAC,GAEA,IAAMrC,EAAiC,GAuHvC,OAtHAU,GAAiB0B,EAASglD,WAAY/kD,EAAS+kD,WAAY,cAAc,EAAMpnD,GAC/EyB,GACEW,EAASilD,wBACThlD,EAASglD,wBACT,0BACArnD,GAEFyB,GACEW,EAASklD,wBACTjlD,EAASilD,wBACT,0BACAtnD,GAEFyB,GACEW,EAASmlD,sCACTllD,EAASklD,sCACT,wCACAvnD,GAEFyB,GACEW,EAASolD,eACTnlD,EAASmlD,eACT,iBACAxnD,GAEFmB,GACEiB,EAASqlD,sBACTplD,EAASolD,sBACT,wBACAznD,GAEF8B,GACEM,EAASukD,sBACTtkD,EAASskD,sBACT,wBACA3mD,GAEF8B,GACEM,EAASslD,kCACTrlD,EAASqlD,kCACT,oCACA1nD,GAEF8B,GACEM,EAASulD,+BACTtlD,EAASslD,+BACT,iCACA3nD,GAEF8B,GACEM,EAASwlD,4BACTvlD,EAASulD,4BACT,8BACA5nD,GAEF8B,GACEM,EAASylD,yBACTxlD,EAASwlD,yBACT,2BACA7nD,GAEFyB,GACEW,EAAS0lD,qBACTzlD,EAASylD,qBACT,uBACA9nD,GAEFyB,GACEW,EAAS2lD,mBACT1lD,EAAS0lD,mBACT,qBACA/nD,GAEFyB,GAAmBW,EAAS4lD,aAAc3lD,EAAS2lD,aAAc,eAAgBhoD,GACjFyB,GACEW,EAAS6lD,eACT5lD,EAAS4lD,eACT,iBACAjoD,GAEFU,GAAiB0B,EAAS8lD,WAAY7lD,EAAS6lD,WAAY,cAAc,EAAOloD,GAChFyB,GACEW,EAAS,gBACTC,EAAS,gBACT,eACArC,GAEFyB,GACEW,EAAS,gBACTC,EAAS,gBACT,eACArC,GAEFyB,GACEW,EAAS,gBACTC,EAAS,gBACT,eACArC,GAEFyB,GACEW,EAAS+lD,oBACT9lD,EAAS8lD,oBACT,sBACAnoD,GAEFgC,GAAgBI,EAASqa,SAAUpa,EAASoa,SAAU,WAAYzc,GAC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,IAAMrC,EAAiC,GAmIvC,OAlIAyB,GAAmBW,EAASypD,YAAaxpD,EAASwpD,YAAa,cAAe7rD,GAC9EyB,GACEW,EAAS0pD,oBACTzpD,EAASypD,oBACT,sBACA9rD,GAEFyB,GACEW,EAAS2pD,gCACT1pD,EAAS0pD,gCACT,kCACA/rD,GAEFyB,GACEW,EAAS4pD,kBACT3pD,EAAS2pD,kBACT,oBACAhsD,GAGFmB,GACEiB,EAAS6pD,uBACT5pD,EAAS4pD,uBACT,yBACAjsD,GAEF8B,GACEM,EAASuM,sBACTtM,EAASsM,sBACT,wBACA3O,GAEF8B,GACEM,EAAS8pD,4BACT7pD,EAAS6pD,4BACT,8BACAlsD,GAEF8B,GACEM,EAASwM,uBACTvM,EAASuM,uBACT,yBACA5O,GAEF8B,GACEM,EAAS+pD,uBACT9pD,EAAS8pD,uBACT,yBACAnsD,GAEF8B,GACEM,EAASgqD,sBACT/pD,EAAS+pD,sBACT,wBACApsD,GAEF8B,GACEM,EAASiqD,gBACThqD,EAASgqD,gBACT,kBACArsD,GAEF8B,GACEM,EAASkqD,kBACTjqD,EAASiqD,kBACT,oBACAtsD,GAEF8B,GACEM,EAASmqD,yBACTlqD,EAASkqD,yBACT,2BACAvsD,GAEFU,GAAiB0B,EAASnhB,SAAUohB,EAASphB,SAAU,YAAY,EAAM+e,GACzEmB,GACEiB,EAASoqD,sBACTnqD,EAASmqD,sBACT,wBACAxsD,GAEFyB,GACEW,EAASqqD,+BACTpqD,EAASoqD,+BACT,iCACAzsD,GAEFyB,GACEW,EAASsqD,qBACTrqD,EAASqqD,qBACT,uBACA1sD,GAGFyB,GACEW,EAASuqD,2BACTtqD,EAASsqD,2BACT,6BACA3sD,GAEFyB,GACEW,EAASwqD,uBACTvqD,EAASuqD,uBACT,yBACA5sD,GAEFyB,GACEW,EAASyqD,uBACTxqD,EAASwqD,uBACT,yBACA7sD,GAIFyB,GAAmBW,EAAS0qD,WAAYzqD,EAASyqD,WAAY,aAAc9sD,GAC3EgC,GAAgBI,EAAS2qD,aAAc1qD,EAAS0qD,aAAc,eAAgB/sD,GAC9EgC,GACEI,EAAS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AS0tD,WAAYztD,EAASytD,WAAY,aAAc9vD,GAC3EyB,GACEW,EAAS2tD,4BACT1tD,EAAS0tD,4BACT,8BACA/vD,GAEFyB,GAAmBW,EAASjG,OAAQkG,EAASlG,OAAQ,SAAU6D,GAC/DyB,GACEW,EAAS4tD,iBACT3tD,EAAS2tD,iBACT,mBACAhwD,GAEFyB,GACEW,EAAS6tD,mBACT5tD,EAAS4tD,mBACT,qBACAjwD,GAEFyB,GACEW,EAAS8tD,mBACT7tD,EAAS6tD,mBACT,qBACAlwD,GAEFyB,GAAmBW,EAASxgB,GAAIygB,EAASzgB,GAAI,KAAMoe,GACnDyB,GAAmBW,EAAS+tD,QAAS9tD,EAAS8tD,QAAS,UAAWnwD,GAClEyB,GAAmBW,EAASguD,WAAY/tD,EAAS+tD,WAAY,aAAcpwD,GAC3E8B,GACEM,EAASiuD,qCACThuD,EAASguD,qCACT,uCACArwD,GAEF8B,GACEM,EAASkuD,iCACTjuD,EAASiuD,iCACT,mCACAtwD,GAEF8B,GACEM,EAASmuD,sCACTluD,EAASkuD,sCACT,wCACAvwD,GAEF8B,GACEM,EAASouD,kCACTnuD,EAASmuD,kCACT,oCACAxwD,GAEFyB,GACEW,EAASquD,mBACTpuD,EAASouD,mBACT,qBACAzwD,GAEFyB,GACEW,EAASsuD,iCACTruD,EAASquD,iCACT,mCACA1wD,GAEFyB,GACEW,EAASuuD,4BACTtuD,EAASsuD,4BACT,8BACA3wD,GAEFyB,GACEW,EAASwuD,6BACTvuD,EAASuuD,6BACT,+BACA5wD,GAEFyB,GACEW,EAASyuD,0BACTxuD,EAASwuD,0BACT,4BACA7wD,GAEFyB,GACEW,EAAS0uD,wBACTzuD,EAASyuD,wBACT,0BACA9wD,GAEFyB,GACEW,EAAS2uD,cACT1uD,EAAS0uD,cACT,gBACA/wD,GAEFyB,GACEW,EAAS4uD,sCACT3uD,EAAS2uD,sCACT,wCACAhxD,GAEFyB,GACEW,EAAS6uD,6BACT5uD,EAAS4uD,6BACT,+BACAjxD,GAEFyB,GACEW,EAAS8uD,mBACT7uD,EAAS6uD,mBACT,qBACAlxD,GAEFgC,GA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,yBACT,2BACAv5D,GAEFyB,GACEW,EAASo3D,yBACTn3D,EAASm3D,yBACT,2BACAx5D,GAEFyB,GACEW,EAASs3D,qBACTr3D,EAASq3D,qBACT,uBACA15D,GAEF4B,GAAsBQ,EAAS65D,YAAa55D,EAAS45D,YAAa,cAAej8D,GACjFyB,GACEW,EAAS85D,eACT75D,EAAS65D,eACT,iBACAl8D,GAEFyB,GAAmBW,EAAS+5D,SAAU95D,EAAS85D,SAAU,WAAYn8D,GACrEyB,GAAmBW,EAASowC,QAASnwC,EAASmwC,QAAS,UAAWxyC,GAClEU,GACE0B,EAASg6D,iBACT/5D,EAAS+5D,iBACT,oBACA,EACAp8D,GAEFyB,GACEW,EAAS,sBACTC,EAAS,sBACT,qBACArC,GAEFyB,GACEW,EAAS,sBACTC,EAAS,sBACT,qBACArC,GAEFyB,GACEW,EAAS,sBACTC,EAAS,sBACT,qBACArC,GAEFyB,GAAmBW,EAASi6D,aAAch6D,EAASg6D,aAAc,eAAgBr8D,GACjFyB,GAAmBW,EAASk6D,aAAcj6D,EAASi6D,aAAc,eAAgBt8D,GACjF8B,GACEM,EAASqkD,oBACTpkD,EAASokD,oBACT,sBACAzmD,GAEF8B,GACEM,EAASskD,iBACTrkD,EAASqkD,iBACT,mBACA1mD,GAEF8B,GACEM,EAASukD,sBACTtkD,EAASskD,sBACT,wBACA3mD,GAEF8B,GACEM,EAASm6D,oBACTl6D,EAASk6D,oBACT,sBACAv8D,GAGFyB,GACEW,EAASo6D,mCACTn6D,EAASm6D,mCACT,qCACAx8D,GAEFyB,GACEW,EAASq6D,gBACTp6D,EAASo6D,gBACT,kBACAz8D,GAEFyB,GACEW,EAASs6D,gCACTr6D,EAASq6D,gCACT,kCACA18D,GAEFmB,GAAgBiB,EAASu6D,aAAct6D,EAASs6D,aAAc,eAAgB38D,GAC/C,IAAxBA,EAAapc,OAAe,KAAOoc,GAE7Cg8D,CAAD,IAOAY,GAAA,WAGE,SAAAA,IACEj2E,KAAKoc,cAAgB,CAAC,IAAIi5D,GAC3B,CAqCH,OAnCEY,EAAA3sE,UAAA+S,iBAAA,WACE,OAAO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D,mBACT,qBACA9+D,GAEFyB,GACEW,EAAS28D,iBACT18D,EAAS08D,iBACT,mBACA/+D,GAEFyB,GACEW,EAAS48D,sBACT38D,EAAS28D,sBACT,wBACAh/D,GAEFyB,GACEW,EAAS68D,sBACT58D,EAAS48D,sBACT,wBACAj/D,GAEF0B,GACEU,EAASye,uBACTxe,EAASwe,uBACT,yBACA7gB,GAEFyB,GACEW,EAAS0e,qBACTze,EAASye,qBACT,uBACA9gB,GAEF0B,GACEU,EAASgc,mBACT/b,EAAS+b,mBACT,qBACApe,GAEFyB,GACEW,EAAS88D,yBACT78D,EAAS68D,yBACT,2BACAl/D,GAEFW,GAAgByB,EAAS+8D,SAAU98D,EAAS88D,SAAU,WAAYn/D,GAClEyB,GAAmBW,EAASg9D,WAAY/8D,EAAS+8D,WAAY,aAAcp/D,GAC3EyB,GAAmBW,EAAS+V,WAAY9V,EAAS8V,WAAY,aAAcnY,GAC3EyB,GAAmBW,EAASi9D,OAAQh9D,EAASg9D,OAAQ,SAAUr/D,GAC/DyB,GAAmBW,EAASk9D,QAASj9D,EAASi9D,QAAS,UAAWt/D,GAClEyB,GAAmBW,EAASm9D,SAAUl9D,EAASk9D,SAAU,WAAYv/D,GACrEyB,GACEW,EAASo9D,iBACTn9D,EAASm9D,iBACT,mBACAx/D,GAEFyB,GACEW,EAASq9D,eACTp9D,EAASo9D,eACT,iBACAz/D,GAEFmB,GACEiB,EAASs9D,wBACTr9D,EAASq9D,wBACT,0BACA1/D,GAEFmB,GACEiB,EAASu9D,2BACTt9D,EAASs9D,2BACT,6BACA3/D,GAEFmB,GACEiB,EAASw9D,8BACTv9D,EAASu9D,8BACT,gCACA5/D,GAEFmB,GACEiB,EAASy9D,0BACTx9D,EAASw9D,0BACT,4BACA7/D,GAEFmB,GACEiB,EAAS09D,iCACTz9D,EAASy9D,iCACT,mCACA9/D,GAEFU,GAAiB0B,EAAS29D,QAAS19D,EAAS09D,QAAS,WAAW,EAAO//D,GACvEyB,GAAmBW,EAAS,aAAcC,EAAS,aAAc,YAAarC,GAC9EyB,GAAmBW,EAAS,aAAcC,EAAS,aAAc,YAAarC,GAC9EyB,GAAmBW,EAAS,aAAcC,EAAS,aAAc,YAAarC,GAC9EyB,GAAmBW,EAASmyB,YAAalyB,EAASkyB,YAAa,cAAev0B,GAE9EyB,GACEW,EAAS49D,kBACT39D,EAAS29D,kBACT,oBACAhgE,GAEFyB,GACEW,EAAS69D,cACT59D,EAAS49D,cACT,gBACAjgE,GAEFyB,GACEW,EAAS89D,kBACT79D,EAAS69D,kBACT,oBACAlgE,GAEFyB,GACEW,EAAS+9D,eACT99D,EAAS89D,eACT,iBACAngE,GAGFyB,GACEW,EAASg+D,2BACT/9D,EAAS+9D,2BACT,6BACApgE,GAGF8B,GACEM,EAASi+D,sBACTh+D,EAASg+D,sBACT,wBACArgE,GAEF8B,GACEM,EAASk+D,uBACTj+D,EAASi+D,uBACT,yBACAtgE,GAEF8B,GACEM,EAASm+D,wCACTl+D,EAASk+D,wCACT,0CACAvgE,GAEF8B,GACEM,EAASo+D,4BACTn+D,EAASm+D,4BACT,8BACAxgE,GAEF8B,GACEM,EAASq+D,8BACTp+D,EAASo+D,8BACT,gCACAzgE,GAEF8B,GACEM,EAASs+D,2BACTr+D,EAASq+D,2BACT,6BACA1gE,GAEF8B,GACEM,EAASu+D,oCACTt+D,EAASs+D,oCACT,sCACA3gE,GAEF8B,GACEM,EAASw+D,yBACTv+D,EAASu+D,yBACT,2BACA5gE,GAEF8B,GACEM,EAASy+D,8BACTx+D,EAASw+D,8BACT,gCACA7gE,GAEF8B,GACEM,EAAS0+D,gCACTz+D,EAASy+D,gCACT,kCACA9gE,GAEF8B,GACEM,EAASnnB,wBACTonB,EAASpnB,wBACT,0BACA+kB,GAEF8B,GACEM,EAAS2+D,qCACT1+D,EAAS0+D,qCACT,uCACA/gE,GAEF8B,GACEM,EAAS4+D,sBACT3+D,EAAS2+D,sBACT,wBACAhhE,GAEF8B,GACEM,EAAS6+D,kCACT5+D,EAAS4+D,kCACT,oCACAjhE,GAEF8B,GACEM,EAAS8+D,yCACT7+D,EAAS6+D,yCACT,2CACAlhE,GAEF8B,GACEM,EAAS++D,6BACT9+D,EAAS8+D,6BACT,+BACAnhE,GAEF8B,GACEM,EAASg/D,+BACT/+D,EAAS++D,+BACT,iCACAphE,GAEF8B,GACEM,EAASi/D,4BACTh/D,EAASg/D,4BACT,8BACArhE,GAEF8B,GACEM,EAASk/D,qCACTj/D,EAASi/D,qCACT,uCACAthE,GAEF8B,GACEM,EAASm/D,0BACTl/D,EAASk/D,0BACT,4BACAvhE,GAEF8B,GACEM,EAASo/D,iCACTn/D,EAASm/D,iCACT,mCACAxhE,GAEF8B,GACEM,EAASznB,yBACT0nB,EAAS1nB,yBACT,2BACAqlB,GAEF8B,GACEM,EAASq/D,sCACTp/D,EAASo/D,sCACT,wCACAzhE,GAEF8B,GACEM,EAASs/D,uBACTr/D,EAASq/D,uBACT,yBACA1hE,GAEF8B,GACEM,EAASu/D,0BACTt/D,EAASs/D,0BACT,4BACA3hE,GAEF8B,GACEM,EAASw/D,uBACTv/D,EAASu/D,uBACT,yBACA5hE,GAEFmB,GAAgBiB,EAASI,UAAWH,EAASG,UAAW,YAAaxC,GACrE8B,GACEM,EAASK,oBACTJ,EAASI,oBACT,sBACAzC,GAEF8B,GACEM,EAASy/D,4BACTx/D,EAASw/D,4BACT,8BACA7hE,GAEF8B,GACEM,EAAS0/D,qBACTz/D,EAASy/D,qBACT,uBACA9hE,GAEF8B,GACEM,EAAS2/D,yBACT1/D,EAAS0/D,yBACT,2BACA/hE,GAEF8B,GACEM,EAAS4/D,4BACT3/D,EAAS2/D,4BACT,8BACAhiE,GAEF8B,GACEM,EAAS6/D,yBACT5/D,EAAS4/D,yBACT,2BACAjiE,GAEF8B,GACEM,EAAS8/D,wBACT7/D,EAAS6/D,wBACT,0BACAliE,GAEF8B,GACEM,EAAS+/D,iCACT9/D,EAAS8/D,iCACT,mCACAniE,GAEF8B,GACEM,EAASggE,2BACT//D,EAAS+/D,2BACT,6BACApiE,GAEF8B,GACEM,EAASigE,6BACThgE,EAASggE,6BACT,+BACAriE,GAEF8B,GACEM,EAASkgE,0BACTjgE,EAASigE,0BACT,4BACAtiE,GAEF8B,GACEM,EAASmgE,6BACTlgE,EAASkgE,6BACT,+BACAviE,GAEF8B,GACEM,EAASogE,yBACTngE,EAASmgE,yBACT,2BACAxiE,GAEF8B,GACEM,EAASqgE,kCACTpgE,EAASogE,kCACT,oCACAziE,GAEF8B,GACEM,EAASsgE,6BACTrgE,EAASqgE,6BACT,+BACA1iE,GAEF8B,GACEM,EAASugE,4BACTtgE,EAASsgE,4BACT,8BACA3iE,GAEF8B,GACEM,EAASwgE,kCACTvgE,EAASugE,kCACT,oCACA5iE,GAEFmB,GAAgBiB,EAASygE,cAAexgE,EAASwgE,cAAe,gBAAiB7iE,GACjFmB,GAAgBiB,EAAS0gE,cAAezgE,EAASygE,cAAe,gBAAiB9iE,GACjF8B,GACEM,EAAS2gE,oBACT1gE,EAAS0gE,oBACT,sBACA/iE,GAEFmB,GAAgBiB,EAAS4gE,cAAe3gE,EAAS2gE,cAAe,gBAAiBhjE,GACjFmB,GAAgBiB,EAAS6gE,YAAa5gE,EAAS4gE,YAAa,cAAejjE,GAC3E8B,GACEM,EAAS8gE,wBACT7gE,EAAS6gE,wBACT,0BACAljE,GAEF8B,GACEM,EAAS+gE,uBACT9gE,EAAS8gE,uBACT,yBACAnjE,GAEF8B,GACEM,EAASghE,kBACT/gE,EAAS+gE,kBACT,oBACApjE,GAEF8B,GACEM,EAASihE,4CACThhE,EAASghE,4CACT,8CACArjE,GAEF8B,GACEM,EAASkhE,4BACTjhE,EAASihE,4BACT,8BACAtjE,GAEF8B,GACEM,EAASmhE,2BACTlhE,EAASkhE,2BACT,6BACAvjE,GAEF8B,GACEM,EAASohE,iCACTnhE,EAASmhE,iCACT,mCACAxjE,GAEFyB,GACEW,EAASqhE,iBACTphE,EAASohE,iBACT,mBACAzjE,GAEFyB,GACEW,EAASshE,oBACTrhE,EAASqhE,oBACT,sBACA1jE,GAEFyB,GACEW,EAASuhE,eACTthE,EAASshE,eACT,iBACA3jE,GAEFyB,GACEW,EAASwhE,qBACTvhE,EAASuhE,qBACT,uBACA5jE,GAEFmB,GACEiB,EAASyhE,qBACTxhE,EAASwhE,qBACT,uBACA7jE,GAEFyB,GACEW,EAAS0hE,qBACTzhE,EAASyhE,qBACT,uBACA9jE,GAEFmB,GACEiB,EAAS2hE,qBACT1hE,EAAS0hE,qBACT,uBACA/jE,GAEFmB,GACEiB,EAAS4hE,6BACT3hE,EAAS2hE,6BACT,+BACAhkE,GAEFyB,GACEW,EAAS6hE,mBACT5hE,EAAS4hE,mBACT,qBACAjkE,GAEFmB,GACEiB,EAAS8hE,mBACT7hE,EAAS6hE,mBACT,qBACAlkE,GAEFyB,GAAmBW,EAAS+hE,SAAU9hE,EAAS8hE,SAAU,WAAYnkE,GACrEyB,GAAmBW,EAASgiE,SAAU/hE,EAAS+hE,SAAU,WAAYpkE,GACrEyB,GACEW,EAASiiE,qBACThiE,EAASgiE,qBACT,uBACArkE,GAGFyB,GACEW,EAASkiE,4BACTjiE,EAASiiE,4BACT,8BACAtkE,GAEFyB,GACEW,EAASmiE,0BACTliE,EAASkiE,0BACT,4BACAvkE,GAEFyB,GACEW,EAASoiE,cACTniE,EAASmiE,cACT,gBACAxkE,GAEFyB,GACEW,EAASqiE,0BACTpiE,EAASoiE,0BACT,4BACAzkE,GAEFyB,GACEW,EAASsiE,qBACTriE,EAASqiE,qBACT,uBACA1kE,GAEFyB,GACEW,EAASuiE,oBACTtiE,EAASsiE,oBACT,sBACA3kE,GAGFyB,GACEW,EAASwiE,eACTviE,EAASuiE,eACT,iBACA5kE,GAEFyB,GACEW,EAASyiE,iBACTxiE,EAASwiE,iBACT,mBACA7kE,GAEFyB,GACEW,EAAS0iE,oBACTziE,EAASyiE,oBACT,sBACA9kE,GAEFyB,GACEW,EAAS2iE,uBACT1iE,EAAS0iE,uBACT,yBACA/kE,GAEFyB,GACEW,EAAS4iE,uBACT3iE,EAAS2iE,uBACT,yBACAhlE,GAEFyB,GACEW,EAAS6iE,qBACT5iE,EAAS4iE,qBACT,uBACAjlE,GAEFyB,GACEW,EAAS8iE,eACT7iE,EAAS6iE,eACT,iBACAllE,GAEFyB,GACEW,EAAS+iE,gBACT9iE,EAAS8iE,gBACT,kBACAnlE,GAEFyB,GACEW,EAASgjE,8BACT/iE,EAAS+iE,8BACT,gCACAplE,GAEFyB,GACEW,EAASijE,yBACThjE,EAASgjE,yBACT,2BACArlE,GAEFyB,GACEW,EAASkjE,qBACTjjE,EAASijE,qBACT,uBACAtlE,GAEFgC,GACEI,EAASmjE,iBACTljE,EAASkjE,iBACT,mBACAvlE,GAEFgC,GAAgBI,EAASojE,aAAcnjE,EAASmjE,aAAc,eAAgBxlE,GAC9EgC,GACEI,EAASqjE,kBACTpjE,EAASojE,kBACT,oBACAzlE,GAEFgC,GAAgBI,EAASs0C,UAAWr0C,EAASq0C,UAAW,YAAa12C,GACrEgC,GACEI,EAASsjE,gBACTrjE,EAASqjE,gBACT,kBACA1lE,GAEFgC,GAAgBI,EAASujE,YAAatjE,EAASsjE,YAAa,cAAe3lE,GAC3EgC,GAAgBI,EAASwjE,SAAUvjE,EAASujE,SAAU,WAAY5lE,GAClEgC,GAAgBI,EAASyjE,YAAaxjE,EAASwjE,YAAa,cAAe7lE,GAC3EgC,GAAgBI,EAASmpC,QAASlpC,EAASkpC,QAAS,UAAWvrC,GAC/DgC,GACEI,EAAS0jE,sBACTzjE,EAASyjE,sBACT,wBACA9lE,GAEFgC,GACEI,EAAS2jE,iBACT1jE,EAAS0jE,iBACT,mBACA/lE,GAEFgC,GACEI,EAAS4jE,kBACT3jE,EAAS2jE,kBACT,oBACAhmE,GAEFgC,GACEI,EAAS6jE,eACT5jE,EAAS4jE,eACT,iBACAjmE,GAEFgC,GAAgBI,EAAS8jE,YAAa7jE,EAAS6jE,YAAa,cAAelmE,GAC3EgC,GAAgBI,EAAS+jE,WAAY9jE,EAAS8jE,WAAY,aAAcnmE,GACxEgC,GACEI,EAASgkE,iBACT/jE,EAAS+jE,iBACT,mBACApmE,GAEFgC,GACEI,EAASikE,uBACThkE,EAASgkE,uBACT,yBACArmE,GAEFgC,GAAgBI,EAASkkE,cAAejkE,EAASikE,cAAe,gBAAiBtmE,GACjFgC,GACEI,EAASmkE,oBACTlkE,EAASkkE,oBACT,sBACAvmE,GAEFgC,GACEI,EAASokE,oBACTnkE,EAASmkE,oBACT,sBACAxmE,GAEFgC,GACEI,EAASqkE,sBACTpkE,EAASokE,sBACT,w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"}